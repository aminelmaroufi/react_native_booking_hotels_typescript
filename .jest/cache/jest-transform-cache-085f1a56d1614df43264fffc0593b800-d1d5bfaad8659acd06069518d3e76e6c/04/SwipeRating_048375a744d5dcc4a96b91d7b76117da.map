{"version":3,"names":["_react","_interopRequireWildcard","require","_times","_interopRequireDefault","_reactNative","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","valueOf","e","STAR_IMAGE","HEART_IMAGE","ROCKET_IMAGE","BELL_IMAGE","TYPES","star","source","color","backgroundColor","heart","rocket","bell","custom","fractionsType","props","propName","componentName","value","Error","SwipeRating","_Component","_inherits2","_super","_this","_classCallCheck2","_this$props","onStartRating","onSwipeRating","onFinishRating","fractions","position","Animated","ValueXY","panResponder","PanResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","event","gesture","newPosition","tapPositionX","x0","state","centerX","dx","setValue","x","y","isComponentMounted","setState","rating","getCurrentRating","onPanResponderMove","onPanResponderRelease","minValue","setCurrentRating","display","_createClass2","componentDidMount","_this2","startingValue","err","console","log","componentDidUpdate","prevProps","handleLayoutChange","_this3","ratingRef","measure","fx","fy","width","height","px","halfWidth","pageXWithinWindow","Dimensions","getPrimaryViewStyle","_this$props2","imageSize","ratingCount","type","interpolate","inputRange","outputRange","extrapolate","useNativeDriver","getSecondaryViewStyle","_this$props3","renderRatings","_this$props4","tintColor","times","index","createElement","View","style","styles","starContainer","Image","_this$props5","currentRating","diff","Number","toFixed","Math","ceil","jumpValue","_this$props6","initialRating","displayCurrentRating","_this$props7","readonly","showReadOnlyText","ratingTextColor","showRatingView","ratingView","Text","ratingText","currentRatingText","maxRatingText","readonlyLabel","render","_this4","_this$props8","ratingImage","ratingColor","ratingBackgroundColor","showRating","pointerEvents","_extends2","starsWrapper","panHandlers","starsInsideWrapper","onLayout","ref","view","componentWillUnmount","Component","exports","defaultProps","StyleSheet","flexDirection","justifyContent","alignItems","top","left","right","bottom","paddingBottom","fontSize","textAlign","fontFamily","Platform","OS"],"sources":["SwipeRating.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport times from \"lodash/times\";\nimport { View, Text, Animated, PanResponder, Image, StyleSheet, Platform, Dimensions } from \"react-native\";\n// RATING IMAGES WITH STATIC BACKGROUND COLOR (white)\nconst STAR_IMAGE = require(\"./images/star.png\");\nconst HEART_IMAGE = require(\"./images/heart.png\");\nconst ROCKET_IMAGE = require(\"./images/rocket.png\");\nconst BELL_IMAGE = require(\"./images/bell.png\");\nconst TYPES = {\n    star: {\n        source: STAR_IMAGE,\n        color: \"#f1c40f\",\n        backgroundColor: \"white\"\n    },\n    heart: {\n        source: HEART_IMAGE,\n        color: \"#e74c3c\",\n        backgroundColor: \"white\"\n    },\n    rocket: {\n        source: ROCKET_IMAGE,\n        color: \"#2ecc71\",\n        backgroundColor: \"white\"\n    },\n    bell: {\n        source: BELL_IMAGE,\n        color: \"#f39c12\",\n        backgroundColor: \"white\"\n    },\n    custom: {}\n};\nconst fractionsType = (props, propName, componentName) => {\n    if (props[propName]) {\n        const value = props[propName];\n        if (typeof value === \"number\") {\n            return value >= 0 && value <= 20 ?\n                null :\n                new Error(`\\`${propName}\\` in \\`${componentName}\\` must be between 0 and 20`);\n        }\n        return new Error(`\\`${propName}\\` in \\`${componentName}\\` must be a number`);\n    }\n};\nexport default class SwipeRating extends Component {\n    constructor(props) {\n        super(props);\n        const { onStartRating, onSwipeRating, onFinishRating, fractions } = this.props;\n        const position = new Animated.ValueXY();\n        const panResponder = PanResponder.create({\n            onStartShouldSetPanResponder: () => true,\n            onPanResponderGrant: (event, gesture) => {\n                const newPosition = new Animated.ValueXY();\n                const tapPositionX = gesture.x0 - this.state.centerX + gesture.dx;\n                newPosition.setValue({ x: tapPositionX, y: 0 });\n                if (this.state.isComponentMounted) {\n                    this.setState({ position: newPosition, value: tapPositionX });\n                    const rating = this.getCurrentRating(tapPositionX);\n                    if (typeof onStartRating === \"function\") {\n                        onStartRating(rating);\n                    }\n                }\n            },\n            onPanResponderMove: (event, gesture) => {\n                const newPosition = new Animated.ValueXY();\n                const tapPositionX = gesture.x0 - this.state.centerX + gesture.dx;\n                newPosition.setValue({ x: tapPositionX, y: 0 });\n                if (this.state.isComponentMounted) {\n                    this.setState({ position: newPosition, value: tapPositionX });\n                    const rating = this.getCurrentRating(tapPositionX);\n                    if (typeof onSwipeRating === \"function\") {\n                        onSwipeRating(rating);\n                    }\n                }\n            },\n            onPanResponderRelease: () => {\n                const rating = this.getCurrentRating(this.state.value);\n                if (rating >= this.props.minValue) {\n                    if (!fractions) {\n                        // 'round up' to the nearest rating image\n                        this.setCurrentRating(rating);\n                    }\n                    if (typeof onFinishRating === \"function\") {\n                        onFinishRating(rating);\n                    }\n                }\n            }\n        });\n        this.state = {\n            panResponder,\n            position,\n            display: false,\n            isComponentMounted: false\n        };\n    }\n    componentDidMount() {\n        try {\n            this.setState({ display: true, isComponentMounted: true }, () => this.setCurrentRating(this.props.startingValue));\n        }\n        catch (err) {\n            // eslint-disable-next-line no-console\n            console.log(err);\n        }\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.startingValue !== prevProps.startingValue) {\n            this.setCurrentRating(this.props.startingValue);\n        }\n    }\n    handleLayoutChange() {\n        // eslint-disable-next-line max-params\n        this.ratingRef.measure((fx, fy, width, height, px) => {\n            const halfWidth = width / 2;\n            const pageXWithinWindow = px % Dimensions.get(\"window\").width;\n            this.setState({\n                centerX: pageXWithinWindow + halfWidth\n            });\n        });\n    }\n    getPrimaryViewStyle() {\n        const { position } = this.state;\n        const { imageSize, ratingCount, type } = this.props;\n        const { color } = TYPES[type];\n        const width = position.x.interpolate({\n            inputRange: [\n                -ratingCount * (imageSize / 2),\n                0,\n                ratingCount * (imageSize / 2)\n            ],\n            outputRange: [\n                0,\n                ratingCount * imageSize / 2,\n                ratingCount * imageSize\n            ],\n            extrapolate: \"clamp\"\n        }, {\n            useNativeDriver: true\n        });\n        return {\n            backgroundColor: color,\n            width,\n            height: width ? imageSize : 0\n        };\n    }\n    getSecondaryViewStyle() {\n        const { position } = this.state;\n        const { imageSize, ratingCount, type } = this.props;\n        const { backgroundColor } = TYPES[type];\n        const width = position.x.interpolate({\n            inputRange: [\n                -ratingCount * (imageSize / 2),\n                0,\n                ratingCount * (imageSize / 2)\n            ],\n            outputRange: [\n                ratingCount * imageSize,\n                ratingCount * imageSize / 2,\n                0\n            ],\n            extrapolate: \"clamp\"\n        }, {\n            useNativeDriver: true\n        });\n        return {\n            backgroundColor,\n            width,\n            height: width ? imageSize : 0\n        };\n    }\n    renderRatings() {\n        const { imageSize, ratingCount, type, tintColor } = this.props;\n        const { source } = TYPES[type];\n        return times(ratingCount, index => <View key={index} style={styles.starContainer}>\n        <Image source={source} style={{ width: imageSize, height: imageSize, tintColor }}/>\n      </View>);\n    }\n    // eslint-disable-next-line max-statements\n    getCurrentRating(value) {\n        const { fractions, imageSize, ratingCount } = this.props;\n        const startingValue = ratingCount / 2;\n        let currentRating = this.props.minValue ? this.props.minValue : 0;\n        if (value > ratingCount * imageSize / 2) {\n            currentRating = ratingCount;\n        }\n        else if (value < -ratingCount * imageSize / 2) {\n            currentRating = this.props.minValue ? this.props.minValue : 0;\n        }\n        else if (value <= imageSize || value > imageSize) {\n            const diff = value / imageSize;\n            currentRating = startingValue + diff;\n            currentRating = fractions ?\n                Number(currentRating.toFixed(fractions)) :\n                Math.ceil(currentRating);\n        }\n        else {\n            currentRating = fractions ?\n                Number(startingValue.toFixed(fractions)) :\n                Math.ceil(startingValue);\n        }\n        if (this.props.jumpValue > 0 &&\n            this.props.jumpValue < this.props.ratingCount) {\n            return (Math.ceil(currentRating * (1 / this.props.jumpValue)) /\n                (1 / this.props.jumpValue));\n        }\n        else {\n            return currentRating;\n        }\n    }\n    // eslint-disable-next-line max-statements\n    setCurrentRating(rating) {\n        const { imageSize, ratingCount } = this.props;\n        // `initialRating` corresponds to `startingValue` in the getter. Naming it\n        // Differently here avoids confusion with `value` below.\n        const initialRating = ratingCount / 2;\n        let value = null;\n        if (rating > ratingCount) {\n            value = ratingCount * imageSize / 2;\n        }\n        else if (rating < 0) {\n            value = -ratingCount * imageSize / 2;\n        }\n        else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n            value = (rating - initialRating) * imageSize;\n        }\n        else {\n            value = 0;\n        }\n        const newPosition = new Animated.ValueXY();\n        newPosition.setValue({ x: value, y: 0 });\n        if (this.state.isComponentMounted) {\n            this.setState({ position: newPosition, value });\n        }\n    }\n    displayCurrentRating() {\n        const { ratingCount, type, readonly, showReadOnlyText, ratingTextColor } = this.props;\n        const color = ratingTextColor || TYPES[type].color;\n        return (<View style={styles.showRatingView}>\n        <View style={styles.ratingView}>\n          <Text style={[styles.ratingText, { color }]}>Rating: </Text>\n          <Text style={[styles.currentRatingText, { color }]}>\n            {this.getCurrentRating(this.state.value)}\n          </Text>\n          <Text style={[styles.maxRatingText, { color }]}>/{ratingCount}</Text>\n        </View>\n        <View>\n          {readonly && showReadOnlyText &&\n                <Text style={[styles.readonlyLabel, { color }]}>(readonly)</Text>}\n        </View>\n      </View>);\n    }\n    render() {\n        const { readonly, type, ratingImage, ratingColor, ratingBackgroundColor, style, showRating } = this.props;\n        if (type === \"custom\") {\n            const custom = {\n                source: ratingImage,\n                color: ratingColor,\n                backgroundColor: ratingBackgroundColor\n            };\n            TYPES.custom = custom;\n        }\n        return this.state.display ?\n            <View pointerEvents={readonly ? \"none\" : \"auto\"} style={style}>\n        {showRating && this.displayCurrentRating()}\n        <View style={styles.starsWrapper} {...this.state.panResponder.panHandlers}>\n          <View style={styles.starsInsideWrapper} onLayout={() => {\n                    this.handleLayoutChange();\n                }} ref={view => {\n                    this.ratingRef = view;\n                }}>\n            <Animated.View style={this.getPrimaryViewStyle()}/>\n            <Animated.View style={this.getSecondaryViewStyle()}/>\n          </View>\n          {this.renderRatings()}\n        </View>\n      </View> :\n            null;\n    }\n    componentWillUnmount() {\n        this.setState({ isComponentMounted: false });\n    }\n}\nSwipeRating.defaultProps = {\n    type: \"star\",\n    ratingImage: STAR_IMAGE,\n    ratingColor: \"#f1c40f\",\n    ratingBackgroundColor: \"white\",\n    ratingCount: 5,\n    showReadOnlyText: true,\n    imageSize: 40,\n    minValue: 0,\n    jumpValue: 0\n};\nconst styles = StyleSheet.create({\n    starsWrapper: {\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    starsInsideWrapper: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    showRatingView: {\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingBottom: 5\n    },\n    ratingView: {\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingBottom: 5\n    },\n    ratingText: {\n        fontSize: 15,\n        textAlign: \"center\",\n        fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n        color: \"#34495e\"\n    },\n    readonlyLabel: {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontSize: 12,\n        textAlign: \"center\",\n        fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n        color: \"#34495a\"\n    },\n    currentRatingText: {\n        fontSize: 30,\n        textAlign: \"center\",\n        fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null\n    },\n    maxRatingText: {\n        fontSize: 18,\n        textAlign: \"center\",\n        fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n        color: \"#34495e\"\n    }\n});\n"],"mappings":"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"}