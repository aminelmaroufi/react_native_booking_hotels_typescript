2d2d01cb57de7374636fdd76d095c65c
'use strict';

var RE_FRAME = /^ {4}at (.+?)(?: \((native)\)?| \((address at )?(.*?):(\d+):(\d+)\))$/;
var RE_SKIPPED = /^ {4}... skipping (\d+) frames$/;
function parseLine(line) {
  var asFrame = line.match(RE_FRAME);
  if (asFrame) {
    return {
      type: 'FRAME',
      functionName: asFrame[1],
      location: asFrame[2] === 'native' ? {
        type: 'NATIVE'
      } : asFrame[3] === 'address at ' ? {
        type: 'BYTECODE',
        sourceUrl: asFrame[4],
        line1Based: Number.parseInt(asFrame[5], 10),
        virtualOffset0Based: Number.parseInt(asFrame[6], 10)
      } : {
        type: 'SOURCE',
        sourceUrl: asFrame[4],
        line1Based: Number.parseInt(asFrame[5], 10),
        column1Based: Number.parseInt(asFrame[6], 10)
      }
    };
  }
  var asSkipped = line.match(RE_SKIPPED);
  if (asSkipped) {
    return {
      type: 'SKIPPED',
      count: Number.parseInt(asSkipped[1], 10)
    };
  }
}
module.exports = function parseHermesStack(stack) {
  var lines = stack.split(/\n/);
  var entries = [];
  var lastMessageLine = -1;
  for (var i = 0; i < lines.length; ++i) {
    var line = lines[i];
    if (!line) {
      continue;
    }
    var entry = parseLine(line);
    if (entry) {
      entries.push(entry);
      continue;
    }
    lastMessageLine = i;
    entries = [];
  }
  var message = lines.slice(0, lastMessageLine + 1).join('\n');
  return {
    message: message,
    entries: entries
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSRV9GUkFNRSIsIlJFX1NLSVBQRUQiLCJwYXJzZUxpbmUiLCJsaW5lIiwiYXNGcmFtZSIsIm1hdGNoIiwidHlwZSIsImZ1bmN0aW9uTmFtZSIsImxvY2F0aW9uIiwic291cmNlVXJsIiwibGluZTFCYXNlZCIsIk51bWJlciIsInBhcnNlSW50IiwidmlydHVhbE9mZnNldDBCYXNlZCIsImNvbHVtbjFCYXNlZCIsImFzU2tpcHBlZCIsImNvdW50IiwibW9kdWxlIiwiZXhwb3J0cyIsInBhcnNlSGVybWVzU3RhY2siLCJzdGFjayIsImxpbmVzIiwic3BsaXQiLCJlbnRyaWVzIiwibGFzdE1lc3NhZ2VMaW5lIiwiaSIsImxlbmd0aCIsImVudHJ5IiwicHVzaCIsIm1lc3NhZ2UiLCJzbGljZSIsImpvaW4iXSwic291cmNlcyI6WyJwYXJzZUhlcm1lc1N0YWNrLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogQGZsb3cgc3RyaWN0XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG50eXBlIEhlcm1lc1N0YWNrTG9jYXRpb25OYXRpdmUgPSB7fFxuICArdHlwZTogJ05BVElWRScsXG58fTtcblxudHlwZSBIZXJtZXNTdGFja0xvY2F0aW9uU291cmNlID0ge3xcbiAgK3R5cGU6ICdTT1VSQ0UnLFxuICArc291cmNlVXJsOiBzdHJpbmcsXG4gICtsaW5lMUJhc2VkOiBudW1iZXIsXG4gICtjb2x1bW4xQmFzZWQ6IG51bWJlcixcbnx9O1xuXG50eXBlIEhlcm1lc1N0YWNrTG9jYXRpb25CeXRlY29kZSA9IHt8XG4gICt0eXBlOiAnQllURUNPREUnLFxuICArc291cmNlVXJsOiBzdHJpbmcsXG4gICtsaW5lMUJhc2VkOiBudW1iZXIsXG4gICt2aXJ0dWFsT2Zmc2V0MEJhc2VkOiBudW1iZXIsXG58fTtcblxudHlwZSBIZXJtZXNTdGFja0xvY2F0aW9uID1cbiAgfCBIZXJtZXNTdGFja0xvY2F0aW9uTmF0aXZlXG4gIHwgSGVybWVzU3RhY2tMb2NhdGlvblNvdXJjZVxuICB8IEhlcm1lc1N0YWNrTG9jYXRpb25CeXRlY29kZTtcblxudHlwZSBIZXJtZXNTdGFja0VudHJ5RnJhbWUgPSB7fFxuICArdHlwZTogJ0ZSQU1FJyxcbiAgK2xvY2F0aW9uOiBIZXJtZXNTdGFja0xvY2F0aW9uLFxuICArZnVuY3Rpb25OYW1lOiBzdHJpbmcsXG58fTtcblxudHlwZSBIZXJtZXNTdGFja0VudHJ5U2tpcHBlZCA9IHt8XG4gICt0eXBlOiAnU0tJUFBFRCcsXG4gICtjb3VudDogbnVtYmVyLFxufH07XG5cbnR5cGUgSGVybWVzU3RhY2tFbnRyeSA9IEhlcm1lc1N0YWNrRW50cnlGcmFtZSB8IEhlcm1lc1N0YWNrRW50cnlTa2lwcGVkO1xuXG5leHBvcnQgdHlwZSBIZXJtZXNQYXJzZWRTdGFjayA9IHt8XG4gICttZXNzYWdlOiBzdHJpbmcsXG4gICtlbnRyaWVzOiAkUmVhZE9ubHlBcnJheTxIZXJtZXNTdGFja0VudHJ5Pixcbnx9O1xuXG4vLyBDYXB0dXJpbmcgZ3JvdXBzOlxuLy8gMS4gZnVuY3Rpb24gbmFtZVxuLy8gMi4gaXMgdGhpcyBhIG5hdGl2ZSBzdGFjayBmcmFtZT9cbi8vIDMuIGlzIHRoaXMgYSBieXRlY29kZSBhZGRyZXNzIG9yIGEgc291cmNlIGxvY2F0aW9uP1xuLy8gNC4gc291cmNlIFVSTCAoZmlsZW5hbWUpXG4vLyA1LiBsaW5lIG51bWJlciAoMSBiYXNlZClcbi8vIDYuIGNvbHVtbiBudW1iZXIgKDEgYmFzZWQpIG9yIHZpcnR1YWwgb2Zmc2V0ICgwIGJhc2VkKVxuY29uc3QgUkVfRlJBTUUgPSAvXiB7NH1hdCAoLis/KSg/OiBcXCgobmF0aXZlKVxcKT98IFxcKChhZGRyZXNzIGF0ICk/KC4qPyk6KFxcZCspOihcXGQrKVxcKSkkLztcblxuLy8gQ2FwdHVyaW5nIGdyb3Vwczpcbi8vIDEuIGNvdW50IG9mIHNraXBwZWQgZnJhbWVzXG5jb25zdCBSRV9TS0lQUEVEID0gL14gezR9Li4uIHNraXBwaW5nIChcXGQrKSBmcmFtZXMkLztcblxuZnVuY3Rpb24gcGFyc2VMaW5lKGxpbmU6IHN0cmluZyk6ID9IZXJtZXNTdGFja0VudHJ5IHtcbiAgY29uc3QgYXNGcmFtZSA9IGxpbmUubWF0Y2goUkVfRlJBTUUpO1xuICBpZiAoYXNGcmFtZSkge1xuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiAnRlJBTUUnLFxuICAgICAgZnVuY3Rpb25OYW1lOiBhc0ZyYW1lWzFdLFxuICAgICAgbG9jYXRpb246XG4gICAgICAgIGFzRnJhbWVbMl0gPT09ICduYXRpdmUnXG4gICAgICAgICAgPyB7dHlwZTogJ05BVElWRSd9XG4gICAgICAgICAgOiBhc0ZyYW1lWzNdID09PSAnYWRkcmVzcyBhdCAnXG4gICAgICAgICAgPyB7XG4gICAgICAgICAgICAgIHR5cGU6ICdCWVRFQ09ERScsXG4gICAgICAgICAgICAgIHNvdXJjZVVybDogYXNGcmFtZVs0XSxcbiAgICAgICAgICAgICAgbGluZTFCYXNlZDogTnVtYmVyLnBhcnNlSW50KGFzRnJhbWVbNV0sIDEwKSxcbiAgICAgICAgICAgICAgdmlydHVhbE9mZnNldDBCYXNlZDogTnVtYmVyLnBhcnNlSW50KGFzRnJhbWVbNl0sIDEwKSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgICA6IHtcbiAgICAgICAgICAgICAgdHlwZTogJ1NPVVJDRScsXG4gICAgICAgICAgICAgIHNvdXJjZVVybDogYXNGcmFtZVs0XSxcbiAgICAgICAgICAgICAgbGluZTFCYXNlZDogTnVtYmVyLnBhcnNlSW50KGFzRnJhbWVbNV0sIDEwKSxcbiAgICAgICAgICAgICAgY29sdW1uMUJhc2VkOiBOdW1iZXIucGFyc2VJbnQoYXNGcmFtZVs2XSwgMTApLFxuICAgICAgICAgICAgfSxcbiAgICB9O1xuICB9XG4gIGNvbnN0IGFzU2tpcHBlZCA9IGxpbmUubWF0Y2goUkVfU0tJUFBFRCk7XG4gIGlmIChhc1NraXBwZWQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdHlwZTogJ1NLSVBQRUQnLFxuICAgICAgY291bnQ6IE51bWJlci5wYXJzZUludChhc1NraXBwZWRbMV0sIDEwKSxcbiAgICB9O1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcGFyc2VIZXJtZXNTdGFjayhzdGFjazogc3RyaW5nKTogSGVybWVzUGFyc2VkU3RhY2sge1xuICBjb25zdCBsaW5lcyA9IHN0YWNrLnNwbGl0KC9cXG4vKTtcbiAgbGV0IGVudHJpZXMgPSBbXTtcbiAgbGV0IGxhc3RNZXNzYWdlTGluZSA9IC0xO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGxpbmVzLmxlbmd0aDsgKytpKSB7XG4gICAgY29uc3QgbGluZSA9IGxpbmVzW2ldO1xuICAgIGlmICghbGluZSkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGNvbnN0IGVudHJ5ID0gcGFyc2VMaW5lKGxpbmUpO1xuICAgIGlmIChlbnRyeSkge1xuICAgICAgZW50cmllcy5wdXNoKGVudHJ5KTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICAvLyBObyBtYXRjaCAtIHdlJ3JlIHN0aWxsIGluIHRoZSBtZXNzYWdlXG4gICAgbGFzdE1lc3NhZ2VMaW5lID0gaTtcbiAgICBlbnRyaWVzID0gW107XG4gIH1cbiAgY29uc3QgbWVzc2FnZSA9IGxpbmVzLnNsaWNlKDAsIGxhc3RNZXNzYWdlTGluZSArIDEpLmpvaW4oJ1xcbicpO1xuICByZXR1cm4ge21lc3NhZ2UsIGVudHJpZXN9O1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBVUEsWUFBWTs7QUFrRFosSUFBTUEsUUFBUSxHQUFHLHVFQUF1RTtBQUl4RixJQUFNQyxVQUFVLEdBQUcsaUNBQWlDO0FB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