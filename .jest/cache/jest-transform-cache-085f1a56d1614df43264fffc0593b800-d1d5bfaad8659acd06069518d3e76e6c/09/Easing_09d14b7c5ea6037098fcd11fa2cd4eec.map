{"version":3,"names":["_interopRequireDefault","require","_classCallCheck2","_createClass2","ease","Easing","default","key","value","step0","n","step1","linear","t","bezier","quad","cubic","poly","Math","pow","sin","cos","PI","circle","sqrt","exp","elastic","bounciness","arguments","length","undefined","p","back","s","bounce","t2","x1","y1","x2","y2","_bezier","_in","easing","out","inOut","module","exports"],"sources":["Easing.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nlet ease;\n\n/**\n * The `Easing` module implements common easing functions. This module is used\n * by [Animate.timing()](docs/animate.html#timing) to convey physically\n * believable motion in animations.\n *\n * You can find a visualization of some common easing functions at\n * http://easings.net/\n *\n * ### Predefined animations\n *\n * The `Easing` module provides several predefined animations through the\n * following methods:\n *\n * - [`back`](docs/easing.html#back) provides a simple animation where the\n *   object goes slightly back before moving forward\n * - [`bounce`](docs/easing.html#bounce) provides a bouncing animation\n * - [`ease`](docs/easing.html#ease) provides a simple inertial animation\n * - [`elastic`](docs/easing.html#elastic) provides a simple spring interaction\n *\n * ### Standard functions\n *\n * Three standard easing functions are provided:\n *\n * - [`linear`](docs/easing.html#linear)\n * - [`quad`](docs/easing.html#quad)\n * - [`cubic`](docs/easing.html#cubic)\n *\n * The [`poly`](docs/easing.html#poly) function can be used to implement\n * quartic, quintic, and other higher power functions.\n *\n * ### Additional functions\n *\n * Additional mathematical functions are provided by the following methods:\n *\n * - [`bezier`](docs/easing.html#bezier) provides a cubic bezier curve\n * - [`circle`](docs/easing.html#circle) provides a circular function\n * - [`sin`](docs/easing.html#sin) provides a sinusoidal function\n * - [`exp`](docs/easing.html#exp) provides an exponential function\n *\n * The following helpers are used to modify other easing functions.\n *\n * - [`in`](docs/easing.html#in) runs an easing function forwards\n * - [`inOut`](docs/easing.html#inout) makes any easing function symmetrical\n * - [`out`](docs/easing.html#out) runs an easing function backwards\n */\nclass Easing {\n  /**\n   * A stepping function, returns 1 for any positive value of `n`.\n   */\n  static step0(n: number): number {\n    return n > 0 ? 1 : 0;\n  }\n\n  /**\n   * A stepping function, returns 1 if `n` is greater than or equal to 1.\n   */\n  static step1(n: number): number {\n    return n >= 1 ? 1 : 0;\n  }\n\n  /**\n   * A linear function, `f(t) = t`. Position correlates to elapsed time one to\n   * one.\n   *\n   * http://cubic-bezier.com/#0,0,1,1\n   */\n  static linear(t: number): number {\n    return t;\n  }\n\n  /**\n   * A simple inertial interaction, similar to an object slowly accelerating to\n   * speed.\n   *\n   * http://cubic-bezier.com/#.42,0,1,1\n   */\n  static ease(t: number): number {\n    if (!ease) {\n      ease = Easing.bezier(0.42, 0, 1, 1);\n    }\n    return ease(t);\n  }\n\n  /**\n   * A quadratic function, `f(t) = t * t`. Position equals the square of elapsed\n   * time.\n   *\n   * http://easings.net/#easeInQuad\n   */\n  static quad(t: number): number {\n    return t * t;\n  }\n\n  /**\n   * A cubic function, `f(t) = t * t * t`. Position equals the cube of elapsed\n   * time.\n   *\n   * http://easings.net/#easeInCubic\n   */\n  static cubic(t: number): number {\n    return t * t * t;\n  }\n\n  /**\n   * A power function. Position is equal to the Nth power of elapsed time.\n   *\n   * n = 4: http://easings.net/#easeInQuart\n   * n = 5: http://easings.net/#easeInQuint\n   */\n  static poly(n: number): (t: number) => number {\n    return (t: number) => Math.pow(t, n);\n  }\n\n  /**\n   * A sinusoidal function.\n   *\n   * http://easings.net/#easeInSine\n   */\n  static sin(t: number): number {\n    return 1 - Math.cos((t * Math.PI) / 2);\n  }\n\n  /**\n   * A circular function.\n   *\n   * http://easings.net/#easeInCirc\n   */\n  static circle(t: number): number {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n\n  /**\n   * An exponential function.\n   *\n   * http://easings.net/#easeInExpo\n   */\n  static exp(t: number): number {\n    return Math.pow(2, 10 * (t - 1));\n  }\n\n  /**\n   * A simple elastic interaction, similar to a spring oscillating back and\n   * forth.\n   *\n   * Default bounciness is 1, which overshoots a little bit once. 0 bounciness\n   * doesn't overshoot at all, and bounciness of N > 1 will overshoot about N\n   * times.\n   *\n   * http://easings.net/#easeInElastic\n   */\n  static elastic(bounciness: number = 1): (t: number) => number {\n    const p = bounciness * Math.PI;\n    return t => 1 - Math.pow(Math.cos((t * Math.PI) / 2), 3) * Math.cos(t * p);\n  }\n\n  /**\n   * Use with `Animated.parallel()` to create a simple effect where the object\n   * animates back slightly as the animation starts.\n   *\n   * Wolfram Plot:\n   *\n   * - http://tiny.cc/back_default (s = 1.70158, default)\n   */\n  static back(s: number = 1.70158): (t: number) => number {\n    return t => t * t * ((s + 1) * t - s);\n  }\n\n  /**\n   * Provides a simple bouncing effect.\n   *\n   * http://easings.net/#easeInBounce\n   */\n  static bounce(t: number): number {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      const t2 = t - 1.5 / 2.75;\n      return 7.5625 * t2 * t2 + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      const t2 = t - 2.25 / 2.75;\n      return 7.5625 * t2 * t2 + 0.9375;\n    }\n\n    const t2 = t - 2.625 / 2.75;\n    return 7.5625 * t2 * t2 + 0.984375;\n  }\n\n  /**\n   * Provides a cubic bezier curve, equivalent to CSS Transitions'\n   * `transition-timing-function`.\n   *\n   * A useful tool to visualize cubic bezier curves can be found at\n   * http://cubic-bezier.com/\n   */\n  static bezier(\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n  ): (t: number) => number {\n    const _bezier = require('./bezier');\n    return _bezier(x1, y1, x2, y2);\n  }\n\n  /**\n   * Runs an easing function forwards.\n   */\n  static in(easing: (t: number) => number): (t: number) => number {\n    return easing;\n  }\n\n  /**\n   * Runs an easing function backwards.\n   */\n  static out(easing: (t: number) => number): (t: number) => number {\n    return t => 1 - easing(1 - t);\n  }\n\n  /**\n   * Makes any easing function symmetrical. The easing function will run\n   * forwards for half of the duration, then backwards for the rest of the\n   * duration.\n   */\n  static inOut(easing: (t: number) => number): (t: number) => number {\n    return t => {\n      if (t < 0.5) {\n        return easing(t * 2) / 2;\n      }\n      return 1 - easing((1 - t) * 2) / 2;\n    };\n  }\n}\n\nmodule.exports = Easing;\n"],"mappings":"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"}