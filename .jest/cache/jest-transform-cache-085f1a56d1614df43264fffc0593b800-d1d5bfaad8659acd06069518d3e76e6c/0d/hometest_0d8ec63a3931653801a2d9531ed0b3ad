0261bdffd813d65b9dac48dd3aea843f
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var eva = _interopRequireWildcard(require("@eva-design/eva"));
var _components = require("@ui-kitten/components");
var _store = _interopRequireDefault(require("../../redux/store"));
var _Home = _interopRequireDefault(require("../Home"));
var _actions = require("../../redux/actions");
var _reactRedux = require("react-redux");
var _hotels_response = _interopRequireDefault(require("./fixtures/hotels_response"));
var _native = require("@react-navigation/native");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var store = (0, _store.default)({
  hotel: {
    hotels: _hotels_response.default.result.hotels
  }
});
var navigation = {
  navigate: jest.fn(),
  goBack: jest.fn()
};
var setup = function setup() {
  return (0, _reactNative.render)(_react.default.createElement(_reactRedux.Provider, {
    store: store
  }, _react.default.createElement(_components.ApplicationProvider, (0, _extends2.default)({}, eva, {
    theme: eva.light
  }), _react.default.createElement(_native.NavigationContainer, null, _react.default.createElement(_Home.default, {
    hotels: _hotels_response.default.result.hotels
  })))));
};
describe('Test homepage screen', function () {
  beforeEach(function () {
    mockStore.dispatch = jest.fn();
    setup();
  });
  afterEach(_reactNative.cleanup);
  it('should display the list of hotels', function () {
    expect(_reactNative.screen.getByTestId('search-box')).toBeDefined();
  });
  it('fetches the hotels on mount', function () {
    var expectedAction = (0, _actions.getHotels)({
      q: '',
      page: 1
    });
    expect(store.dispatch).toHaveBeenCalledTimes(1);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsImV2YSIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX2NvbXBvbmVudHMiLCJfc3RvcmUiLCJfSG9tZSIsIl9hY3Rpb25zIiwiX3JlYWN0UmVkdXgiLCJfaG90ZWxzX3Jlc3BvbnNlIiwiX25hdGl2ZSIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJzdG9yZSIsImNvbmZpZ3VyZVN0b3JlIiwiaG90ZWwiLCJob3RlbHMiLCJob3RlbHNfcmVzcG9uc2UiLCJyZXN1bHQiLCJuYXZpZ2F0aW9uIiwibmF2aWdhdGUiLCJqZXN0IiwiZm4iLCJnb0JhY2siLCJzZXR1cCIsInJlbmRlciIsImNyZWF0ZUVsZW1lbnQiLCJQcm92aWRlciIsIkFwcGxpY2F0aW9uUHJvdmlkZXIiLCJfZXh0ZW5kczIiLCJ0aGVtZSIsImxpZ2h0IiwiTmF2aWdhdGlvbkNvbnRhaW5lciIsImRlc2NyaWJlIiwiYmVmb3JlRWFjaCIsIm1vY2tTdG9yZSIsImRpc3BhdGNoIiwiYWZ0ZXJFYWNoIiwiY2xlYW51cCIsIml0IiwiZXhwZWN0Iiwic2NyZWVuIiwiZ2V0QnlUZXN0SWQiLCJ0b0JlRGVmaW5lZCIsImV4cGVjdGVkQWN0aW9uIiwiZ2V0SG90ZWxzIiwicSIsInBhZ2UiLCJ0b0hhdmVCZWVuQ2FsbGVkVGltZXMiXSwic291cmNlcyI6WyJob21lLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG4vLyBpbXBvcnQgY29uZmlndXJlU3RvcmUgZnJvbSAncmVkdXgtbW9jay1zdG9yZSc7XG5pbXBvcnQge1xuICBjbGVhbnVwLFxuICBmaXJlRXZlbnQsXG4gIHJlbmRlcixcbiAgc2NyZWVuLFxufSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZSc7XG5cbmltcG9ydCAqIGFzIGV2YSBmcm9tICdAZXZhLWRlc2lnbi9ldmEnO1xuaW1wb3J0IHtBcHBsaWNhdGlvblByb3ZpZGVyfSBmcm9tICdAdWkta2l0dGVuL2NvbXBvbmVudHMnO1xuaW1wb3J0IGNvbmZpZ3VyZVN0b3JlIGZyb20gJy4uLy4uL3JlZHV4L3N0b3JlJztcbmltcG9ydCBIb21lIGZyb20gJy4uL0hvbWUnO1xuaW1wb3J0IHtnZXRIb3RlbHN9IGZyb20gJy4uLy4uL3JlZHV4L2FjdGlvbnMnO1xuaW1wb3J0IHtQcm92aWRlcn0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IGhvdGVsc19yZXNwb25zZSBmcm9tICcuL2ZpeHR1cmVzL2hvdGVsc19yZXNwb25zZSc7XG5pbXBvcnQge05hdmlnYXRpb25Db250YWluZXJ9IGZyb20gJ0ByZWFjdC1uYXZpZ2F0aW9uL25hdGl2ZSc7XG5cbmxldCBzdG9yZSA9IGNvbmZpZ3VyZVN0b3JlKHtcbiAgaG90ZWw6IHtcbiAgICBob3RlbHM6IGhvdGVsc19yZXNwb25zZS5yZXN1bHQuaG90ZWxzLFxuICB9LFxufSk7XG5cbmNvbnN0IG5hdmlnYXRpb24gPSB7XG4gIG5hdmlnYXRlOiBqZXN0LmZuKCksXG4gIGdvQmFjazogamVzdC5mbigpLFxufTtcblxuLy8gY29uc3Qgc3RvcmUgPSBtb2NrU3RvcmUoe1xuLy8gICBob3RlbDoge1xuLy8gICAgIGhvdGVsczogaG90ZWxzX3Jlc3BvbnNlLnJlc3VsdC5ob3RlbHMsXG4vLyAgIH0sXG4vLyB9KTtcblxuY29uc3Qgc2V0dXAgPSAoKSA9PlxuICByZW5kZXIoXG4gICAgPFByb3ZpZGVyIHN0b3JlPXtzdG9yZX0+XG4gICAgICA8QXBwbGljYXRpb25Qcm92aWRlciB7Li4uZXZhfSB0aGVtZT17ZXZhLmxpZ2h0fT5cbiAgICAgICAgPE5hdmlnYXRpb25Db250YWluZXI+XG4gICAgICAgICAgPEhvbWUgaG90ZWxzPXtob3RlbHNfcmVzcG9uc2UucmVzdWx0LmhvdGVsc30gLz5cbiAgICAgICAgPC9OYXZpZ2F0aW9uQ29udGFpbmVyPlxuICAgICAgPC9BcHBsaWNhdGlvblByb3ZpZGVyPlxuICAgIDwvUHJvdmlkZXI+LFxuICApO1xuXG5kZXNjcmliZSgnVGVzdCBob21lcGFnZSBzY3JlZW4nLCAoKSA9PiB7XG4gIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgIG1vY2tTdG9yZS5kaXNwYXRjaCA9IGplc3QuZm4oKTtcbiAgICBzZXR1cCgpO1xuICB9KTtcblxuICBhZnRlckVhY2goY2xlYW51cCk7XG5cbiAgaXQoJ3Nob3VsZCBkaXNwbGF5IHRoZSBsaXN0IG9mIGhvdGVscycsICgpID0+IHtcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGVzdElkKCdzZWFyY2gtYm94JykpLnRvQmVEZWZpbmVkKCk7XG4gIH0pO1xuICBpdCgnZmV0Y2hlcyB0aGUgaG90ZWxzIG9uIG1vdW50JywgKCkgPT4ge1xuICAgIGNvbnN0IGV4cGVjdGVkQWN0aW9uID0gZ2V0SG90ZWxzKHtxOiAnJywgcGFnZTogMX0pO1xuICAgIGV4cGVjdChzdG9yZS5kaXNwYXRjaCkudG9IYXZlQmVlbkNhbGxlZFRpbWVzKDEpO1xuICAgIC8vIGV4cGVjdChzdG9yZS5kaXNwYXRjaCkudG9IYXZlQmVlbkNhbGxlZFdpdGgoZXhwZWN0ZWRBY3Rpb24pO1xuICAgIC8vIGV4cGVjdChzdG9yZS5nZXRBY3Rpb25zKCkpLnRvQ29udGFpbkVxdWFsKGV4cGVjdGVkQWN0aW9uKTtcbiAgfSk7XG59KTtcbiJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLElBQUFBLE1BQUEsR0FB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