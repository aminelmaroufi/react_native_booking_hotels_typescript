e0100e14283e9bd71e764819fe402aa1
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var eva = _interopRequireWildcard(require("@eva-design/eva"));
var _components = require("@ui-kitten/components");
var _store = _interopRequireDefault(require("../../redux/store"));
var _Login = _interopRequireDefault(require("../Login"));
var _reactRedux = require("react-redux");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var store = (0, _store.default)();
var email = 'test@test.com';
var password = 'Azerty123@@';
var navigation = {
  navigate: jest.fn()
};
var setup = function setup() {
  return (0, _reactNative.render)(_react.default.createElement(_components.ApplicationProvider, (0, _extends2.default)({}, eva, {
    theme: eva.light
  }), _react.default.createElement(_reactRedux.Provider, {
    store: store
  }, _react.default.createElement(_Login.default, {
    navigation: navigation
  }))));
};
describe('Test Login Component', function () {
  beforeEach(function () {
    store.dispatch = jest.fn();
  });
  afterEach(_reactNative.cleanup);
  it('should render all form element', function () {
    setup();
    expect(_reactNative.screen.getByTestId('logo')).toBeDefined();
    expect(_reactNative.screen.getByTestId('email')).toBeDefined();
    expect(_reactNative.screen.getByTestId('password')).toBeDefined();
    expect(_reactNative.screen.getByTestId('login-btn')).toBeDefined();
    expect(_reactNative.screen.getByTestId('login-btn').props.title).toBe('Login');
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsImV2YSIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX2NvbXBvbmVudHMiLCJfc3RvcmUiLCJfTG9naW4iLCJfcmVhY3RSZWR1eCIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJzdG9yZSIsImNvbmZpZ3VyZVN0b3JlIiwiZW1haWwiLCJwYXNzd29yZCIsIm5hdmlnYXRpb24iLCJuYXZpZ2F0ZSIsImplc3QiLCJmbiIsInNldHVwIiwicmVuZGVyIiwiY3JlYXRlRWxlbWVudCIsIkFwcGxpY2F0aW9uUHJvdmlkZXIiLCJfZXh0ZW5kczIiLCJ0aGVtZSIsImxpZ2h0IiwiUHJvdmlkZXIiLCJkZXNjcmliZSIsImJlZm9yZUVhY2giLCJkaXNwYXRjaCIsImFmdGVyRWFjaCIsImNsZWFudXAiLCJpdCIsImV4cGVjdCIsInNjcmVlbiIsImdldEJ5VGVzdElkIiwidG9CZURlZmluZWQiLCJwcm9wcyIsInRpdGxlIiwidG9CZSJdLCJzb3VyY2VzIjpbImxvZ2luLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1xuICBjbGVhbnVwLFxuICBmaXJlRXZlbnQsXG4gIHJlbmRlcixcbiAgc2NyZWVuLFxufSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZSc7XG5cbmltcG9ydCB1c2VyRXZlbnQgZnJvbSAnQHRlc3RpbmctbGlicmFyeS91c2VyLWV2ZW50JztcbmltcG9ydCAqIGFzIGV2YSBmcm9tICdAZXZhLWRlc2lnbi9ldmEnO1xuaW1wb3J0IHtBcHBsaWNhdGlvblByb3ZpZGVyLCBMYXlvdXQsIFNwaW5uZXJ9IGZyb20gJ0B1aS1raXR0ZW4vY29tcG9uZW50cyc7XG5pbXBvcnQgY29uZmlndXJlU3RvcmUgZnJvbSAnLi4vLi4vcmVkdXgvc3RvcmUnO1xuaW1wb3J0IExvZ2luIGZyb20gJy4uL0xvZ2luJztcbmltcG9ydCB7bG9naW5SZXF1ZXN0fSBmcm9tICcuLi8uLi9hY3Rpb25zJztcbmltcG9ydCB7UHJvdmlkZXJ9IGZyb20gJ3JlYWN0LXJlZHV4JztcblxubGV0IHN0b3JlID0gY29uZmlndXJlU3RvcmUoKTtcblxuY29uc3QgZW1haWwgPSAndGVzdEB0ZXN0LmNvbSc7XG5jb25zdCBwYXNzd29yZCA9ICdBemVydHkxMjNAQCc7XG5cbmNvbnN0IG5hdmlnYXRpb24gPSB7XG4gIG5hdmlnYXRlOiBqZXN0LmZuKCksXG59O1xuY29uc3Qgc2V0dXAgPSAoKSA9PlxuICByZW5kZXIoXG4gICAgPEFwcGxpY2F0aW9uUHJvdmlkZXIgey4uLmV2YX0gdGhlbWU9e2V2YS5saWdodH0+XG4gICAgICA8UHJvdmlkZXIgc3RvcmU9e3N0b3JlfT5cbiAgICAgICAgPExvZ2luIG5hdmlnYXRpb249e25hdmlnYXRpb259IC8+XG4gICAgICA8L1Byb3ZpZGVyPlxuICAgIDwvQXBwbGljYXRpb25Qcm92aWRlcj4sXG4gICk7XG5cbmRlc2NyaWJlKCdUZXN0IExvZ2luIENvbXBvbmVudCcsICgpID0+IHtcbiAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgc3RvcmUuZGlzcGF0Y2ggPSBqZXN0LmZuKCk7XG4gIH0pO1xuXG4gIGFmdGVyRWFjaChjbGVhbnVwKTtcblxuICBpdCgnc2hvdWxkIHJlbmRlciBhbGwgZm9ybSBlbGVtZW50JywgKCkgPT4ge1xuICAgIHNldHVwKCk7XG5cbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGVzdElkKCdsb2dvJykpLnRvQmVEZWZpbmVkKCk7XG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRlc3RJZCgnZW1haWwnKSkudG9CZURlZmluZWQoKTtcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGVzdElkKCdwYXNzd29yZCcpKS50b0JlRGVmaW5lZCgpO1xuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXN0SWQoJ2xvZ2luLWJ0bicpKS50b0JlRGVmaW5lZCgpO1xuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXN0SWQoJ2xvZ2luLWJ0bicpLnByb3BzLnRpdGxlKS50b0JlKCdMb2dpbicpO1xuICB9KTtcblxuICAvLyAgIGl0KCdzaG91bGQgc2hvdyBwYXNzd29yZCB2YWx1ZSBhZnRlciBjbGlja2luZyBzaG93IHBhc3N3cmQgaWNvbicsICgpID0+IHtcbiAgLy8gICAgIHNldHVwKCk7XG4gIC8vICAgICBjb25zdCBlbWFpbElucHV0ID0gc2NyZWVuLmdldEJ5VGVzdElkKCdlbWFpbCcpO1xuICAvLyAgICAgY29uc3QgcGFzc3dvcmRJbnB1dCA9IHNjcmVlbi5nZXRCeVRlc3RJZCgncGFzc3dvcmQnKTtcbiAgLy8gICAgIGNvbnN0IGxvZ2luQnRuID0gc2NyZWVuLmdldEJ5VGVzdElkKCdsb2dpbi1idG4nKTtcbiAgLy8gICAgIGNvbnNvbGUubG9nKCdsb2dpbkJ0biBwcm9wcycsIGxvZ2luQnRuLnByb3BzKTtcbiAgLy8gICAgIGV4cGVjdChsb2dpbkJ0bikudG9IYXZlUHJvcGVydHkoJ2Rpc2FibGVkJywgdHJ1ZSk7XG4gIC8vICAgICBmaXJlRXZlbnQuY2hhbmdlVGV4dChlbWFpbElucHV0LCBlbWFpbCk7XG4gIC8vICAgICBmaXJlRXZlbnQuY2hhbmdlVGV4dChwYXNzd29yZElucHV0LCBwYXNzd29yZCk7XG4gIC8vICAgICBleHBlY3QobG9naW5CdG4ucHJvcHMuZGlzYWJsZWQpLnRvQmUoZmFsc2UpO1xuICAv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