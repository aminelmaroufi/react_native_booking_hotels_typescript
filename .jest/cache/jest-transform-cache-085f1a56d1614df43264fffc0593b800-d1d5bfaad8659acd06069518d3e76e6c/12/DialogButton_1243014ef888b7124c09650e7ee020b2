b421253e5b1a919a7ecbc16efb53808e
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _Button = _interopRequireDefault(require("../buttons/Button"));
var _config = require("../config");
var _jsxRuntime = require("react/jsx-runtime");
var __rest = this && this.__rest || function (s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
var DialogButton = function DialogButton(_a) {
  var titleStyle = _a.titleStyle,
    rest = __rest(_a, ["titleStyle"]);
  return (0, _jsxRuntime.jsx)(_Button.default, (0, _extends2.default)({
    style: {
      marginLeft: 5
    },
    titleStyle: _reactNative.StyleSheet.flatten([styles.buttonTitle, titleStyle]),
    containerStyle: {
      width: 'auto'
    },
    testID: "Dialog__Button"
  }, rest));
};
DialogButton.defaultProps = {
  title: 'ACTION',
  type: 'clear'
};
var styles = _reactNative.StyleSheet.create({
  buttonTitle: {
    fontSize: 15,
    fontWeight: '500'
  }
});
var _default = (0, _config.withTheme)(DialogButton, 'DialogButton');
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9CdXR0b24iLCJfY29uZmlnIiwiX2pzeFJ1bnRpbWUiLCJfX3Jlc3QiLCJzIiwiZSIsInQiLCJwIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaW5kZXhPZiIsImdldE93blByb3BlcnR5U3ltYm9scyIsImkiLCJsZW5ndGgiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIkRpYWxvZ0J1dHRvbiIsIl9hIiwidGl0bGVTdHlsZSIsInJlc3QiLCJqc3giLCJkZWZhdWx0IiwiX2V4dGVuZHMyIiwic3R5bGUiLCJtYXJnaW5MZWZ0IiwiU3R5bGVTaGVldCIsImZsYXR0ZW4iLCJzdHlsZXMiLCJidXR0b25UaXRsZSIsImNvbnRhaW5lclN0eWxlIiwid2lkdGgiLCJ0ZXN0SUQiLCJkZWZhdWx0UHJvcHMiLCJ0aXRsZSIsInR5cGUiLCJjcmVhdGUiLCJmb250U2l6ZSIsImZvbnRXZWlnaHQiLCJfZGVmYXVsdCIsIndpdGhUaGVtZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJEaWFsb2dCdXR0b24uanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fcmVzdCA9ICh0aGlzICYmIHRoaXMuX19yZXN0KSB8fCBmdW5jdGlvbiAocywgZSkge1xuICAgIHZhciB0ID0ge307XG4gICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApICYmIGUuaW5kZXhPZihwKSA8IDApXG4gICAgICAgIHRbcF0gPSBzW3BdO1xuICAgIGlmIChzICE9IG51bGwgJiYgdHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09IFwiZnVuY3Rpb25cIilcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIHAgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHMpOyBpIDwgcC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGUuaW5kZXhPZihwW2ldKSA8IDAgJiYgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHMsIHBbaV0pKVxuICAgICAgICAgICAgICAgIHRbcFtpXV0gPSBzW3BbaV1dO1xuICAgICAgICB9XG4gICAgcmV0dXJuIHQ7XG59O1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFN0eWxlU2hlZXQgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi9idXR0b25zL0J1dHRvbic7XG5pbXBvcnQgeyB3aXRoVGhlbWUgfSBmcm9tICcuLi9jb25maWcnO1xuY29uc3QgRGlhbG9nQnV0dG9uID0gKF9hKSA9PiB7XG4gICAgdmFyIHsgdGl0bGVTdHlsZSB9ID0gX2EsIHJlc3QgPSBfX3Jlc3QoX2EsIFtcInRpdGxlU3R5bGVcIl0pO1xuICAgIHJldHVybiAoPEJ1dHRvbiBzdHlsZT17eyBtYXJnaW5MZWZ0OiA1IH19IHRpdGxlU3R5bGU9e1N0eWxlU2hlZXQuZmxhdHRlbihbc3R5bGVzLmJ1dHRvblRpdGxlLCB0aXRsZVN0eWxlXSl9IGNvbnRhaW5lclN0eWxlPXt7XG4gICAgICAgIHdpZHRoOiAnYXV0bycsXG4gICAgfX0gdGVzdElEPVwiRGlhbG9nX19CdXR0b25cIiB7Li4ucmVzdH0vPik7XG59O1xuRGlhbG9nQnV0dG9uLmRlZmF1bHRQcm9wcyA9IHtcbiAgICB0aXRsZTogJ0FDVElPTicsXG4gICAgdHlwZTogJ2NsZWFyJyxcbn07XG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gICAgYnV0dG9uVGl0bGU6IHtcbiAgICAgICAgZm9udFNpemU6IDE1LFxuICAgICAgICBmb250V2VpZ2h0OiAnNTAwJyxcbiAgICB9LFxufSk7XG5leHBvcnQgZGVmYXVsdCB3aXRoVGhlbWUoRGlhbG9nQnV0dG9uLCAnRGlhbG9nQnV0dG9uJyk7XG4iXSwibWFwcGluZ3Mi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