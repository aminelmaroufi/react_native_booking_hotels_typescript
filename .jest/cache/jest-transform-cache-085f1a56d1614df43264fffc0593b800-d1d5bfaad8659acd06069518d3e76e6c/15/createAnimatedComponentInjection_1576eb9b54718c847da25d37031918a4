a2860de758f4bb09bc0d1a668526ab5f
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.inject = inject;
exports.recordAndRetrieve = recordAndRetrieve;
var React = _interopRequireWildcard(require("react"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var injected;
function inject(newInjected) {
  if (injected !== undefined) {
    if (__DEV__) {
      console.error('createAnimatedComponentInjection: ' + (injected == null ? 'Must be called before `createAnimatedComponent`.' : 'Cannot be called more than once.'));
    }
    return;
  }
  injected = newInjected;
}
function recordAndRetrieve() {
  if (injected === undefined) {
    injected = null;
  }
  return injected;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJpbmplY3RlZCIsImluamVjdCIsIm5ld0luamVjdGVkIiwidW5kZWZpbmVkIiwiX19ERVZfXyIsImNvbnNvbGUiLCJlcnJvciIsInJlY29yZEFuZFJldHJpZXZlIl0sInNvdXJjZXMiOlsiY3JlYXRlQW5pbWF0ZWRDb21wb25lbnRJbmplY3Rpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvdyBzdHJpY3QtbG9jYWxcbiAqIEBmb3JtYXRcbiAqL1xuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbnR5cGUgY3JlYXRlQW5pbWF0ZWRDb21wb25lbnQgPSA8VFByb3BzOiB7Li4ufSwgVEluc3RhbmNlPihcbiAgQ29tcG9uZW50OiBSZWFjdC5BYnN0cmFjdENvbXBvbmVudDxUUHJvcHMsIFRJbnN0YW5jZT4sXG4pID0+IFJlYWN0LkFic3RyYWN0Q29tcG9uZW50PFRQcm9wcywgVEluc3RhbmNlPjtcblxuLy8gVGhpcyBjYW4gYmUgdW5kZWZpbmVkLCBudWxsLCBvciB0aGUgZXhwZXJpbWVudGFsIGltcGxlbWVudGF0aW9uLiBJZiB0aGlzIGlzXG4vLyBudWxsLCB0aGF0IG1lYW5zIGBjcmVhdGVBbmltYXRlZENvbXBvbmVudGAgaGFzIGFscmVhZHkgYmVlbiBpbml0aWFsaXplZCBhbmRcbi8vIGl0IGlzIHRvbyBsYXRlIHRvIGNhbGwgYGluamVjdGAuXG5sZXQgaW5qZWN0ZWQ6ID9jcmVhdGVBbmltYXRlZENvbXBvbmVudDtcblxuLyoqXG4gKiBDYWxsIGR1cmluZyBidW5kbGUgaW5pdGlhbGl6YXRpb24gdG8gb3B0LWluIHRvIG5ldyBgY3JlYXRlQW5pbWF0ZWRDb21wb25lbnRgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaW5qZWN0KG5ld0luamVjdGVkOiBjcmVhdGVBbmltYXRlZENvbXBvbmVudCk6IHZvaWQge1xuICBpZiAoaW5qZWN0ZWQgIT09IHVuZGVmaW5lZCkge1xuICAgIGlmIChfX0RFVl9fKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFxuICAgICAgICAnY3JlYXRlQW5pbWF0ZWRDb21wb25lbnRJbmplY3Rpb246ICcgK1xuICAgICAgICAgIChpbmplY3RlZCA9PSBudWxsXG4gICAgICAgICAgICA/ICdNdXN0IGJlIGNhbGxlZCBiZWZvcmUgYGNyZWF0ZUFuaW1hdGVkQ29tcG9uZW50YC4nXG4gICAgICAgICAgICA6ICdDYW5ub3QgYmUgY2FsbGVkIG1vcmUgdGhhbiBvbmNlLicpLFxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuO1xuICB9XG4gIGluamVjdGVkID0gbmV3SW5qZWN0ZWQ7XG59XG5cbi8qKlxuICogT25seSBjYWxsZWQgYnkgYGNyZWF0ZUFuaW1hdGVkQ29tcG9uZW50LmpzYC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlY29yZEFuZFJldHJpZXZlKCk6IGNyZWF0ZUFuaW1hdGVkQ29tcG9uZW50IHwgbnVsbCB7XG4gIGlmIChpbmplY3RlZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgaW5qZWN0ZWQgPSBudWxsO1xuICB9XG4gIHJldHVybiBpbmplY3RlZDtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFVQSxJQUFBQSxLQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFBK0IsU0FBQUMseUJBQUFDLFdBQUEsZUFBQUMsT0FBQSxrQ0FBQUMsaUJBQUEsT0FBQUQsT0FBQSxRQUFBRSxnQkFBQSxPQUFBRixPQUFBLFlBQUFGLHdCQUFBLFlBQUFBLHlCQUFBQyxXQUFBLFdBQUFBLFdBQUEsR0FBQUcsZ0JBQUEsR0FBQUQsaUJBQUEsS0FBQUYsV0FBQTtBQUFBLFNBQUFILHdCQUFBTyxHQUFBLEVBQUFKLFdBQUEsU0FBQUEsV0FBQSxJQUFBSSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxXQUFBRCxHQUFBLFFBQUFBLEdBQUEsb0JBQUFBLEdBQUEsd0JBQUFBLEdBQUEsNEJBQUFFLE9BQUEsRUFBQUYsR0FBQSxVQUFBRyxLQUFBLEdBQUFSLHdCQUFBLENBQUFDLFdBQUEsT0FBQU8sS0FBQSxJQUFBQSxLQUFBLENBQUFDLEdBQUEsQ0FBQUosR0FBQSxZQUFBRyxLQUFBLENBQUFFLEdBQUEsQ0FBQUwsR0FBQSxTQUFBTSxNQUFBLFdBQUFDLHFCQUFBLEdBQUFDLE1BQUEsQ0FBQUMsY0FBQSxJQUFBRCxNQUFBLENBQUFFLHdCQUFBLFdBQUFDLEdBQUEsSUFBQVgsR0FBQSxRQUFBVyxHQUFBLGtCQUFBSCxNQUFBLENBQUFJLFNBQUEsQ0FBQUMsY0FBQSxDQUFBQyxJQUFBLENBQUFkLEdBQUEsRUFBQVcsR0FBQSxTQUFBSSxJQUFBLEdBQUFSLHFCQUFBLEdBQUFDLE1BQUEsQ0FBQUUsd0JBQUEsQ0FBQVYsR0FBQSxFQUFBVyxHQUFBLGNBQUFJLElBQUEsS0FBQUEsSUFBQSxDQUFBVixHQUFBLElBQUFVLElBQUEsQ0FBQUMsR0FBQSxLQUFBUixNQUFBLENBQUFDLGNBQUEsQ0FBQUgsTUFBQSxFQUFBSyxHQUFBLEVBQUFJLElBQUEsWUFBQVQsTUFBQSxDQUFBSyxHQUFBLElBQUFYLEdBQUEsQ0FBQVcsR0FBQSxTQUFBTCxNQUFBLENBQUFKLE9BQUEsR0FBQUYsR0FBQSxNQUFBRyxLQUFBLElBQUFBLEtBQUEsQ0FBQWEsR0FBQSxDQUFBaEIsR0FBQSxFQUFBTSxNQUFBLFlBQUFBLE1BQUE7QUFTL0IsSUFBSVcsUUFBa0M7QUFLL0IsU0FBU0MsTUFBTUEsQ0FBQ0MsV0FBb0MsRUFBUTtFQUNqRSxJQUFJRixRQUFRLEtBQUtHLFNBQVMsRUFBRTtJQUMxQixJQUFJQyxPQUFPLEVBQUU7TUFDWEMsT0FBTyxDQUFDQyxLQUFLLENBQ1gsb0NBQW9DLElBQ2pDTixRQUFRLElBQUksSUFBSSxHQUNiLGtEQUFrRCxHQUNsRCxrQ0FBa0MsQ0FBQyxDQUMxQztJQUNIO0lBQ0E7RUFDRjtFQUNBQSxRQUFRLEdBQUdFLFdBQVc7QUFDeEI7QUFLTyxTQUFTSyxpQkFBaUJBLENBQUEsRUFBbUM7RUFDbEUsSUFBSVAsUUFBUSxLQUFLRyxTQUFTLEVBQUU7SUFDMUJILFFBQVEsR0FBRyxJQUFJO0VBQ2pCO0VBQ0EsT0FBT0EsUUFBUTtBQUNqQiJ9