31ffa9663204709269209b182c58666a
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.SearchBar = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _react = _interopRequireDefault(require("react"));
var _config = require("../config");
var _SearchBarIos = _interopRequireDefault(require("./SearchBar-ios"));
var _SearchBarAndroid = _interopRequireDefault(require("./SearchBar-android"));
var _SearchBarDefault = _interopRequireDefault(require("./SearchBar-default"));
var _jsxRuntime = require("react/jsx-runtime");
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var SEARCHBAR_COMPONENTS = {
  ios: _SearchBarIos.default,
  android: _SearchBarAndroid.default,
  default: _SearchBarDefault.default
};
var SearchBar = function (_React$Component) {
  (0, _inherits2.default)(SearchBar, _React$Component);
  var _super = _createSuper(SearchBar);
  function SearchBar() {
    var _this;
    (0, _classCallCheck2.default)(this, SearchBar);
    _this = _super.apply(this, arguments);
    _this.focus = function () {
      _this.searchbar.focus();
    };
    _this.blur = function () {
      _this.searchbar.blur();
    };
    _this.clear = function () {
      _this.searchbar.clear();
    };
    _this.cancel = function () {
      _this.searchbar.cancel && _this.searchbar.cancel();
    };
    return _this;
  }
  (0, _createClass2.default)(SearchBar, [{
    key: "render",
    value: function render() {
      var _this2 = this;
      var Component = SEARCHBAR_COMPONENTS[this.props.platform] || _SearchBarDefault.default;
      return (0, _jsxRuntime.jsx)(Component, (0, _extends2.default)({
        ref: function ref(_ref) {
          _this2.searchbar = _ref;
        }
      }, this.props));
    }
  }]);
  return SearchBar;
}(_react.default.Component);
exports.SearchBar = SearchBar;
SearchBar.defaultProps = {
  platform: 'default'
};
var _default = (0, _config.withTheme)(SearchBar, 'SearchBar');
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9jb25maWciLCJfU2VhcmNoQmFySW9zIiwiX1NlYXJjaEJhckFuZHJvaWQiLCJfU2VhcmNoQmFyRGVmYXVsdCIsIl9qc3hSdW50aW1lIiwiX2NyZWF0ZVN1cGVyIiwiRGVyaXZlZCIsImhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiX2NyZWF0ZVN1cGVySW50ZXJuYWwiLCJTdXBlciIsIl9nZXRQcm90b3R5cGVPZjIiLCJkZWZhdWx0IiwicmVzdWx0IiwiTmV3VGFyZ2V0IiwiY29uc3RydWN0b3IiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiYXJndW1lbnRzIiwiYXBwbHkiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjIiLCJzaGFtIiwiUHJveHkiLCJCb29sZWFuIiwicHJvdG90eXBlIiwidmFsdWVPZiIsImNhbGwiLCJlIiwiU0VBUkNIQkFSX0NPTVBPTkVOVFMiLCJpb3MiLCJJT1NTZWFyY2hCYXIiLCJhbmRyb2lkIiwiQW5kcm9pZFNlYXJjaEJhciIsIkRlZmF1bHRTZWFyY2hCYXIiLCJTZWFyY2hCYXIiLCJfUmVhY3QkQ29tcG9uZW50IiwiX2luaGVyaXRzMiIsIl9zdXBlciIsIl90aGlzIiwiX2NsYXNzQ2FsbENoZWNrMiIsImZvY3VzIiwic2VhcmNoYmFyIiwiYmx1ciIsImNsZWFyIiwiY2FuY2VsIiwiX2NyZWF0ZUNsYXNzMiIsImtleSIsInZhbHVlIiwicmVuZGVyIiwiX3RoaXMyIiwiQ29tcG9uZW50IiwicHJvcHMiLCJwbGF0Zm9ybSIsImpzeCIsIl9leHRlbmRzMiIsInJlZiIsIlJlYWN0IiwiZXhwb3J0cyIsImRlZmF1bHRQcm9wcyIsIl9kZWZhdWx0Iiwid2l0aFRoZW1lIl0sInNvdXJjZXMiOlsiU2VhcmNoQmFyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB3aXRoVGhlbWUgfSBmcm9tICcuLi9jb25maWcnO1xuaW1wb3J0IElPU1NlYXJjaEJhciBmcm9tICcuL1NlYXJjaEJhci1pb3MnO1xuaW1wb3J0IEFuZHJvaWRTZWFyY2hCYXIgZnJvbSAnLi9TZWFyY2hCYXItYW5kcm9pZCc7XG5pbXBvcnQgRGVmYXVsdFNlYXJjaEJhciBmcm9tICcuL1NlYXJjaEJhci1kZWZhdWx0JztcbmNvbnN0IFNFQVJDSEJBUl9DT01QT05FTlRTID0ge1xuICAgIGlvczogSU9TU2VhcmNoQmFyLFxuICAgIGFuZHJvaWQ6IEFuZHJvaWRTZWFyY2hCYXIsXG4gICAgZGVmYXVsdDogRGVmYXVsdFNlYXJjaEJhcixcbn07XG5jbGFzcyBTZWFyY2hCYXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmZvY3VzID0gKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5zZWFyY2hiYXIuZm9jdXMoKTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5ibHVyID0gKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5zZWFyY2hiYXIuYmx1cigpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLmNsZWFyID0gKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5zZWFyY2hiYXIuY2xlYXIoKTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5jYW5jZWwgPSAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnNlYXJjaGJhci5jYW5jZWwgJiYgdGhpcy5zZWFyY2hiYXIuY2FuY2VsKCk7XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgQ29tcG9uZW50ID0gU0VBUkNIQkFSX0NPTVBPTkVOVFNbdGhpcy5wcm9wcy5wbGF0Zm9ybV0gfHwgRGVmYXVsdFNlYXJjaEJhcjtcbiAgICAgICAgcmV0dXJuICg8Q29tcG9uZW50IHJlZj17KHJlZikgPT4ge1xuICAgICAgICAgICAgdGhpcy5zZWFyY2hiYXIgPSByZWY7XG4gICAgICAgIH19IHsuLi50aGlzLnByb3BzfS8+KTtcbiAgICB9XG59XG5TZWFyY2hCYXIuZGVmYXVsdFByb3BzID0ge1xuICAgIHBsYXRmb3JtOiAnZGVmYXVsdCcsXG59O1xuZXhwb3J0IHsgU2VhcmNoQmFyIH07XG5leHBvcnQgZGVmYXVsdCB3aXRoVGhlbWUoU2VhcmNoQmFyLCAnU2VhcmNoQmFyJyk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsT0FBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsYUFBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUcsaUJBQUEsR0FBQUosc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFJLGlCQUFBLEdBQUFMLHNCQUFBLENBQUFDLE9BQUE7QUFBbUQsSUFBQUssV0FBQSxHQUFBTCxPQUFBO0FBQUEsU0FBQU0sYUFBQUMsT0FBQSxRQUFBQyx5QkFBQSxHQUFBQyx5QkFBQSxvQkFBQUMscUJBQUEsUUFBQUMsS0FBQSxPQUFBQyxnQkFBQSxDQUFBQyxPQUFBLEVBQUFOLE9BQUEsR0FBQU8sTUFBQSxNQUFBTix5QkFBQSxRQUFBTyxTQUFBLE9BQUFILGdCQUFBLENBQUFDLE9BQUEsUUFBQUcsV0FBQSxFQUFBRixNQUFBLEdBQUFHLE9BQUEsQ0FBQUMsU0FBQSxDQUFBUCxLQUFBLEVBQUFRLFNBQUEsRUFBQUosU0FBQSxZQUFBRCxNQUFBLEdBQUFILEtBQUEsQ0FBQVMsS0FBQSxPQUFBRCxTQUFBLGdCQUFBRSwyQkFBQSxDQUFBUixPQUFBLFFBQUFDLE1BQUE7QUFBQSxTQUFBTCwwQkFBQSxlQUFBUSxPQUFBLHFCQUFBQSxPQUFBLENBQUFDLFNBQUEsb0JBQUFELE9BQUEsQ0FBQUMsU0FBQSxDQUFBSSxJQUFBLDJCQUFBQyxLQUFBLG9DQUFBQyxPQUFBLENBQUFDLFNBQUEsQ0FBQUMsT0FBQSxDQUFBQyxJQUFBLENBQUFWLE9BQUEsQ0FBQUMsU0FBQSxDQUFBTSxPQUFBLDhDQUFBSSxDQUFBO0FBQ25ELElBQU1DLG9CQUFvQixHQUFHO0VBQ3pCQyxHQUFHLEVBQUVDLHFCQUFZO0VBQ2pCQyxPQUFPLEVBQUVDLHlCQUFnQjtFQUN6QnBCLE9BQU8sRUFBRXFCO0FBQ2IsQ0FBQztBQUFDLElBQ0lDLFNBQVMsYUFBQUMsZ0JBQUE7RUFBQSxJQUFBQyxVQUFBLENBQUF4QixPQUFBLEVBQUFzQixTQUFBLEVBQUFDLGdCQUFBO0VBQUEsSUFBQUUsTUFBQSxHQUFBaEMsWUFBQSxDQUFBNkIsU0FBQTtFQUNYLFNBQUFBLFVBQUEsRUFBYztJQUFBLElBQUFJLEtBQUE7SUFBQSxJQUFBQyxnQkFBQSxDQUFBM0IsT0FBQSxRQUFBc0IsU0FBQTtJQUNWSSxLQUFBLEdBQUFELE1BQUEsQ0FBQWxCLEtBQUEsT0FBU0QsU0FBUztJQUNsQm9CLEtBQUEsQ0FBS0UsS0FBSyxHQUFHLFlBQU07TUFDZkYsS0FBQSxDQUFLRyxTQUFTLENBQUNELEtBQUssRUFBRTtJQUMxQixDQUFDO0lBQ0RGLEtBQUEsQ0FBS0ksSUFBSSxHQUFHLFlBQU07TUFDZEosS0FBQSxDQUFLRyxTQUFTLENBQUNDLElBQUksRUFBRTtJQUN6QixDQUFDO0lBQ0RKLEtBQUEsQ0FBS0ssS0FBSyxHQUFHLFlBQU07TUFDZkwsS0FBQSxDQUFLRyxTQUFTLENBQUNFLEtBQUssRUFBRTtJQUMxQixDQUFDO0lBQ0RMLEtBQUEsQ0FBS00sTUFBTSxHQUFHLFlBQU07TUFDaEJOLEtBQUEsQ0FBS0csU0FBUyxDQUFDRyxNQUFNLElBQUlOLEtBQUEsQ0FBS0csU0FBUyxDQUFDRyxNQUFNLEVBQUU7SUFDcEQsQ0FBQztJQUFDLE9BQUFOLEtBQUE7RUFDTjtFQUFDLElBQUFPLGFBQUEsQ0FBQWpDLE9BQUEsRUFBQXNCLFNBQUE7SUFBQVksR0FBQTtJQUFBQyxLQUFBLEVBQ0QsU0FBQUMsT0FBQSxFQUFTO01BQUEsSUFBQUMsTUFBQTtNQUNMLElBQU1DLFNBQVMsR0FBR3RCLG9CQUFvQixDQUFDLElBQUksQ0FBQ3VCLEtBQUssQ0FBQ0MsUUFBUSxDQUFDLElBQUluQix5QkFBZ0I7TUFDL0UsT0FBUSxJQUFBN0IsV0FBQSxDQUFBaUQsR0FBQSxFQUFDSCxTQUFTLE1BQUFJLFNBQUEsQ0FBQTFDLE9BQUE7UUFBQzJDLEdBQUcsRUFBRSxTQUFBQSxJQUFDQSxJQUFHLEVBQUs7VUFDN0JOLE1BQUksQ0FBQ1IsU0FBUyxHQUFHYyxJQUFHO1FBQ3hCO01BQUUsR0FBSyxJQUFJLENBQUNKLEtBQUssRUFBRztJQUN4QjtFQUFDO0VBQUEsT0FBQWpCLFNBQUE7QUFBQSxFQXJCbUJzQixjQUFLLENBQUNOLFNBQVM7QUFBQU8sT0FBQSxDQUFBdkIsU0FBQSxHQUFBQSxTQUFBO0FBdUJ2Q0EsU0FBUyxDQUFDd0IsWUFBWSxHQUFHO0VBQ3JCTixRQUFRLEVBQUU7QUFDZCxDQUFDO0FBQUMsSUFBQU8sUUFBQSxHQUVhLElBQUFDLGlCQUFTLEVBQUMxQixTQUFTLEVBQUUsV0FBVyxDQUFDO0FBQUF1QixPQUFBLENBQUE3QyxPQUFBLEdBQUErQyxRQUFBIn0=