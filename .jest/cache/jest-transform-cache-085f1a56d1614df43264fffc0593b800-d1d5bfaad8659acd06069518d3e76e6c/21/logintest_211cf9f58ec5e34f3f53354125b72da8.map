{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","eva","_interopRequireWildcard","_components","_store","_Login","_actions","_reactRedux","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","store","configureStore","email","password","navigation","navigate","jest","fn","goBack","setup","component","render","createElement","ApplicationProvider","_extends2","theme","light","Provider","describe","beforeEach","dispatch","afterEach","cleanup","it","Login","expect","screen","getByTestId","toBeDefined","loginBtn","emailInput","passwordInput","props","accessibilityState","toHaveProperty","fireEvent","changeText","press","toHaveBeenCalledTimes","toHaveBeenCalledWith","loginRequest"],"sources":["login.test.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  cleanup,\n  fireEvent,\n  render,\n  screen,\n} from '@testing-library/react-native';\n\nimport * as eva from '@eva-design/eva';\nimport {ApplicationProvider} from '@ui-kitten/components';\nimport configureStore from '../../redux/store';\nimport Login from '../Login';\nimport {loginRequest} from '../../redux/actions';\nimport {Provider} from 'react-redux';\n\nlet store = configureStore();\n\nconst email = 'test@test.com';\nconst password = 'Azerty123@@';\n\nconst navigation = {\n  navigate: jest.fn(),\n  goBack: jest.fn(),\n};\nconst setup = component =>\n  render(\n    <ApplicationProvider {...eva} theme={eva.light}>\n      <Provider store={store}>\n        <component navigation={navigation} />\n      </Provider>\n    </ApplicationProvider>,\n  );\n\ndescribe('Test Login Component', () => {\n  beforeEach(() => {\n    store.dispatch = jest.fn();\n  });\n\n  afterEach(cleanup);\n\n  it('should render all form element', () => {\n    setup(Login);\n\n    expect(screen.getByTestId('logo')).toBeDefined();\n    expect(screen.getByTestId('email')).toBeDefined();\n    expect(screen.getByTestId('password')).toBeDefined();\n\n    const loginBtn = screen.getByTestId('login-btn');\n\n    expect(loginBtn).toBeDefined();\n  });\n\n  it('should enable login button after entereing valid email and password value', () => {\n    setup(Login);\n    const emailInput = screen.getByTestId('email');\n    const passwordInput = screen.getByTestId('password');\n    const loginBtn = screen.getByTestId('login-btn');\n\n    expect(loginBtn.props.accessibilityState).toHaveProperty('disabled', true);\n\n    fireEvent.changeText(emailInput, email);\n    fireEvent.changeText(passwordInput, password);\n\n    expect(loginBtn.props.accessibilityState).toHaveProperty('disabled', false);\n    fireEvent.press(loginBtn);\n    expect(store.dispatch).toHaveBeenCalledTimes(1);\n    expect(store.dispatch).toHaveBeenCalledWith(\n      loginRequest(email, password, navigation),\n    );\n  });\n});\n"],"mappings":"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"}