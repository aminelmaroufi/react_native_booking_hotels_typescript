{"version":3,"names":["_VirtualizeUtils","require","_jsxRuntime","_excluded","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","Platform","deepDiffer","React","View","VirtualizedList","StyleSheet","invariant","removeClippedSubviewsOrDefault","removeClippedSubviews","OS","numColumnsOrDefault","numColumns","FlatList","_React$PureComponent","_inherits2","_super","props","_this","_classCallCheck2","_virtualizedListPairs","_captureRef","ref","_listRef","_getItem","data","index","ret","kk","item","push","_getItemCount","Math","ceil","length","_keyExtractor","items","_this$props$keyExtrac","keyExtractor","defaultKeyExtractor","Array","isArray","map","join","_renderer","_this$props","ListItemComponent","renderItem","columnWrapperStyle","virtualizedListRenderKey","renderer","jsx","_extends2","_defineProperty2","info","style","compose","styles","row","children","it","element","separators","Fragment","_checkProps","viewabilityConfigCallbackPairs","pair","viewabilityConfig","onViewableItemsChanged","_createOnViewableItemsChanged","_createClass2","key","value","scrollToEnd","params","scrollToIndex","scrollToItem","scrollToOffset","recordInteraction","flashScrollIndicators","getScrollResponder","getNativeScrollRef","getScrollRef","getScrollableNode","setNativeProps","componentDidUpdate","prevProps","getItem","getItemCount","horizontal","_pushMultiColumnViewable","arr","v","_this$props$keyExtrac2","forEach","ii","_this2","changed","viewableItems","render","_this$props2","_removeClippedSubviews","restProps","_objectWithoutProperties2","PureComponent","create","flexDirection","module","exports"],"sources":["FlatList.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nconst Platform = require('../Utilities/Platform');\nconst deepDiffer = require('../Utilities/differ/deepDiffer');\nconst React = require('react');\nconst View = require('../Components/View/View');\nconst VirtualizedList = require('./VirtualizedList');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\n\nconst invariant = require('invariant');\n\nimport typeof ScrollViewNativeComponent from '../Components/ScrollView/ScrollViewNativeComponent';\nimport {type ScrollResponderType} from '../Components/ScrollView/ScrollView';\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {\n  ViewToken,\n  ViewabilityConfigCallbackPair,\n} from './ViewabilityHelper';\nimport type {RenderItemType, RenderItemProps} from './VirtualizedList';\nimport {keyExtractor as defaultKeyExtractor} from './VirtualizeUtils';\n\ntype RequiredProps<ItemT> = {|\n  /**\n   * For simplicity, data is just a plain array. If you want to use something else, like an\n   * immutable list, use the underlying `VirtualizedList` directly.\n   */\n  data: ?$ReadOnlyArray<ItemT>,\n|};\ntype OptionalProps<ItemT> = {|\n  /**\n   * Takes an item from `data` and renders it into the list. Example usage:\n   *\n   *     <FlatList\n   *       ItemSeparatorComponent={Platform.OS !== 'android' && ({highlighted}) => (\n   *         <View style={[style.separator, highlighted && {marginLeft: 0}]} />\n   *       )}\n   *       data={[{title: 'Title Text', key: 'item1'}]}\n   *       renderItem={({item, separators}) => (\n   *         <TouchableHighlight\n   *           onPress={() => this._onPress(item)}\n   *           onShowUnderlay={separators.highlight}\n   *           onHideUnderlay={separators.unhighlight}>\n   *           <View style={{backgroundColor: 'white'}}>\n   *             <Text>{item.title}</Text>\n   *           </View>\n   *         </TouchableHighlight>\n   *       )}\n   *     />\n   *\n   * Provides additional metadata like `index` if you need it, as well as a more generic\n   * `separators.updateProps` function which let's you set whatever props you want to change the\n   * rendering of either the leading separator or trailing separator in case the more common\n   * `highlight` and `unhighlight` (which set the `highlighted: boolean` prop) are insufficient for\n   * your use-case.\n   */\n  renderItem?: ?RenderItemType<ItemT>,\n\n  /**\n   * Optional custom style for multi-item rows generated when numColumns > 1.\n   */\n  columnWrapperStyle?: ViewStyleProp,\n  /**\n   * A marker property for telling the list to re-render (since it implements `PureComponent`). If\n   * any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the\n   * `data` prop, stick it here and treat it immutably.\n   */\n  extraData?: any,\n  /**\n   * `getItemLayout` is an optional optimizations that let us skip measurement of dynamic content if\n   * you know the height of items a priori. `getItemLayout` is the most efficient, and is easy to\n   * use if you have fixed height items, for example:\n   *\n   *     getItemLayout={(data, index) => (\n   *       {length: ITEM_HEIGHT, offset: ITEM_HEIGHT * index, index}\n   *     )}\n   *\n   * Adding `getItemLayout` can be a great performance boost for lists of several hundred items.\n   * Remember to include separator length (height or width) in your offset calculation if you\n   * specify `ItemSeparatorComponent`.\n   */\n  getItemLayout?: (\n    data: ?Array<ItemT>,\n    index: number,\n  ) => {\n    length: number,\n    offset: number,\n    index: number,\n    ...\n  },\n  /**\n   * If true, renders items next to each other horizontally instead of stacked vertically.\n   */\n  horizontal?: ?boolean,\n  /**\n   * How many items to render in the initial batch. This should be enough to fill the screen but not\n   * much more. Note these items will never be unmounted as part of the windowed rendering in order\n   * to improve perceived performance of scroll-to-top actions.\n   */\n  initialNumToRender?: ?number,\n  /**\n   * Instead of starting at the top with the first item, start at `initialScrollIndex`. This\n   * disables the \"scroll to top\" optimization that keeps the first `initialNumToRender` items\n   * always rendered and immediately renders the items starting at this initial index. Requires\n   * `getItemLayout` to be implemented.\n   */\n  initialScrollIndex?: ?number,\n  /**\n   * Reverses the direction of scroll. Uses scale transforms of -1.\n   */\n  inverted?: ?boolean,\n  /**\n   * Used to extract a unique key for a given item at the specified index. Key is used for caching\n   * and as the react key to track item re-ordering. The default extractor checks `item.key`, then\n   * falls back to using the index, like React does.\n   */\n  keyExtractor?: ?(item: ItemT, index: number) => string,\n  /**\n   * Multiple columns can only be rendered with `horizontal={false}` and will zig-zag like a\n   * `flexWrap` layout. Items should all be the same height - masonry layouts are not supported.\n   *\n   * The default value is 1.\n   */\n  numColumns?: number,\n  /**\n   * Note: may have bugs (missing content) in some circumstances - use at your own risk.\n   *\n   * This may improve scroll performance for large lists.\n   *\n   * The default value is true for Android.\n   */\n  removeClippedSubviews?: boolean,\n  /**\n   * See `ScrollView` for flow type and further documentation.\n   */\n  fadingEdgeLength?: ?number,\n|};\n\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// removeClippedSubviewsOrDefault(this.props.removeClippedSubviews)\nfunction removeClippedSubviewsOrDefault(removeClippedSubviews: ?boolean) {\n  return removeClippedSubviews ?? Platform.OS === 'android';\n}\n\n// numColumnsOrDefault(this.props.numColumns)\nfunction numColumnsOrDefault(numColumns: ?number) {\n  return numColumns ?? 1;\n}\n\ntype FlatListProps<ItemT> = {|\n  ...RequiredProps<ItemT>,\n  ...OptionalProps<ItemT>,\n|};\n\ntype VirtualizedListProps = React.ElementConfig<typeof VirtualizedList>;\n\nexport type Props<ItemT> = {\n  ...$Diff<\n    VirtualizedListProps,\n    {\n      getItem: $PropertyType<VirtualizedListProps, 'getItem'>,\n      getItemCount: $PropertyType<VirtualizedListProps, 'getItemCount'>,\n      getItemLayout: $PropertyType<VirtualizedListProps, 'getItemLayout'>,\n      renderItem: $PropertyType<VirtualizedListProps, 'renderItem'>,\n      keyExtractor: $PropertyType<VirtualizedListProps, 'keyExtractor'>,\n      ...\n    },\n  >,\n  ...FlatListProps<ItemT>,\n  ...\n};\n\n/**\n * A performant interface for rendering simple, flat lists, supporting the most handy features:\n *\n *  - Fully cross-platform.\n *  - Optional horizontal mode.\n *  - Configurable viewability callbacks.\n *  - Header support.\n *  - Footer support.\n *  - Separator support.\n *  - Pull to Refresh.\n *  - Scroll loading.\n *  - ScrollToIndex support.\n *\n * If you need section support, use [`<SectionList>`](docs/sectionlist.html).\n *\n * Minimal Example:\n *\n *     <FlatList\n *       data={[{key: 'a'}, {key: 'b'}]}\n *       renderItem={({item}) => <Text>{item.key}</Text>}\n *     />\n *\n * More complex, multi-select example demonstrating `PureComponent` usage for perf optimization and avoiding bugs.\n *\n * - By binding the `onPressItem` handler, the props will remain `===` and `PureComponent` will\n *   prevent wasteful re-renders unless the actual `id`, `selected`, or `title` props change, even\n *   if the components rendered in `MyListItem` did not have such optimizations.\n * - By passing `extraData={this.state}` to `FlatList` we make sure `FlatList` itself will re-render\n *   when the `state.selected` changes. Without setting this prop, `FlatList` would not know it\n *   needs to re-render any items because it is also a `PureComponent` and the prop comparison will\n *   not show any changes.\n * - `keyExtractor` tells the list to use the `id`s for the react keys instead of the default `key` property.\n *\n *\n *     class MyListItem extends React.PureComponent {\n *       _onPress = () => {\n *         this.props.onPressItem(this.props.id);\n *       };\n *\n *       render() {\n *         const textColor = this.props.selected ? \"red\" : \"black\";\n *         return (\n *           <TouchableOpacity onPress={this._onPress}>\n *             <View>\n *               <Text style={{ color: textColor }}>\n *                 {this.props.title}\n *               </Text>\n *             </View>\n *           </TouchableOpacity>\n *         );\n *       }\n *     }\n *\n *     class MultiSelectList extends React.PureComponent {\n *       state = {selected: (new Map(): Map<string, boolean>)};\n *\n *       _keyExtractor = (item, index) => item.id;\n *\n *       _onPressItem = (id: string) => {\n *         // updater functions are preferred for transactional updates\n *         this.setState((state) => {\n *           // copy the map rather than modifying state.\n *           const selected = new Map(state.selected);\n *           selected.set(id, !selected.get(id)); // toggle\n *           return {selected};\n *         });\n *       };\n *\n *       _renderItem = ({item}) => (\n *         <MyListItem\n *           id={item.id}\n *           onPressItem={this._onPressItem}\n *           selected={!!this.state.selected.get(item.id)}\n *           title={item.title}\n *         />\n *       );\n *\n *       render() {\n *         return (\n *           <FlatList\n *             data={this.props.data}\n *             extraData={this.state}\n *             keyExtractor={this._keyExtractor}\n *             renderItem={this._renderItem}\n *           />\n *         );\n *       }\n *     }\n *\n * This is a convenience wrapper around [`<VirtualizedList>`](docs/virtualizedlist.html),\n * and thus inherits its props (as well as those of `ScrollView`) that aren't explicitly listed\n * here, along with the following caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n * Also inherits [ScrollView Props](docs/scrollview.html#props), unless it is nested in another FlatList of same orientation.\n */\nclass FlatList<ItemT> extends React.PureComponent<Props<ItemT>, void> {\n  props: Props<ItemT>;\n  /**\n   * Scrolls to the end of the content. May be janky without `getItemLayout` prop.\n   */\n  scrollToEnd(params?: ?{animated?: ?boolean, ...}) {\n    if (this._listRef) {\n      this._listRef.scrollToEnd(params);\n    }\n  }\n\n  /**\n   * Scrolls to the item at the specified index such that it is positioned in the viewable area\n   * such that `viewPosition` 0 places it at the top, 1 at the bottom, and 0.5 centered in the\n   * middle. `viewOffset` is a fixed number of pixels to offset the final target position.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }) {\n    if (this._listRef) {\n      this._listRef.scrollToIndex(params);\n    }\n  }\n\n  /**\n   * Requires linear scan through data - use `scrollToIndex` instead if possible.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: ItemT,\n    viewPosition?: number,\n    ...\n  }) {\n    if (this._listRef) {\n      this._listRef.scrollToItem(params);\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Check out [scrollToOffset](docs/virtualizedlist.html#scrolltooffset) of VirtualizedList\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number, ...}) {\n    if (this._listRef) {\n      this._listRef.scrollToOffset(params);\n    }\n  }\n\n  /**\n   * Tells the list an interaction has occurred, which should trigger viewability calculations, e.g.\n   * if `waitForInteractions` is true and the user has not scrolled. This is typically called by\n   * taps on items or by navigation actions.\n   */\n  recordInteraction() {\n    if (this._listRef) {\n      this._listRef.recordInteraction();\n    }\n  }\n\n  /**\n   * Displays the scroll indicators momentarily.\n   *\n   * @platform ios\n   */\n  flashScrollIndicators() {\n    if (this._listRef) {\n      this._listRef.flashScrollIndicators();\n    }\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   */\n  getScrollResponder(): ?ScrollResponderType {\n    if (this._listRef) {\n      return this._listRef.getScrollResponder();\n    }\n  }\n\n  /**\n   * Provides a reference to the underlying host component\n   */\n  getNativeScrollRef():\n    | ?React.ElementRef<typeof View>\n    | ?React.ElementRef<ScrollViewNativeComponent> {\n    if (this._listRef) {\n      /* $FlowFixMe[incompatible-return] Suppresses errors found when fixing\n       * TextInput typing */\n      return this._listRef.getScrollRef();\n    }\n  }\n\n  getScrollableNode(): any {\n    if (this._listRef) {\n      return this._listRef.getScrollableNode();\n    }\n  }\n\n  setNativeProps(props: {[string]: mixed, ...}) {\n    if (this._listRef) {\n      this._listRef.setNativeProps(props);\n    }\n  }\n\n  constructor(props: Props<ItemT>) {\n    super(props);\n    this._checkProps(this.props);\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._virtualizedListPairs = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityConfig: pair.viewabilityConfig,\n          onViewableItemsChanged: this._createOnViewableItemsChanged(\n            pair.onViewableItemsChanged,\n          ),\n        }),\n      );\n    } else if (this.props.onViewableItemsChanged) {\n      this._virtualizedListPairs.push({\n        /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n         * comment suppresses an error found when Flow v0.63 was deployed. To\n         * see the error delete this comment and run Flow. */\n        viewabilityConfig: this.props.viewabilityConfig,\n        onViewableItemsChanged: this._createOnViewableItemsChanged(\n          this.props.onViewableItemsChanged,\n        ),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps: Props<ItemT>) {\n    invariant(\n      prevProps.numColumns === this.props.numColumns,\n      'Changing numColumns on the fly is not supported. Change the key prop on FlatList when ' +\n        'changing the number of columns to force a fresh render of the component.',\n    );\n    invariant(\n      prevProps.onViewableItemsChanged === this.props.onViewableItemsChanged,\n      'Changing onViewableItemsChanged on the fly is not supported',\n    );\n    invariant(\n      !deepDiffer(prevProps.viewabilityConfig, this.props.viewabilityConfig),\n      'Changing viewabilityConfig on the fly is not supported',\n    );\n    invariant(\n      prevProps.viewabilityConfigCallbackPairs ===\n        this.props.viewabilityConfigCallbackPairs,\n      'Changing viewabilityConfigCallbackPairs on the fly is not supported',\n    );\n\n    this._checkProps(this.props);\n  }\n\n  _listRef: ?React.ElementRef<typeof VirtualizedList>;\n  _virtualizedListPairs: Array<ViewabilityConfigCallbackPair> = [];\n\n  _captureRef = ref => {\n    this._listRef = ref;\n  };\n\n  _checkProps(props: Props<ItemT>) {\n    const {\n      // $FlowFixMe[prop-missing] this prop doesn't exist, is only used for an invariant\n      getItem,\n      // $FlowFixMe[prop-missing] this prop doesn't exist, is only used for an invariant\n      getItemCount,\n      horizontal,\n      columnWrapperStyle,\n      onViewableItemsChanged,\n      viewabilityConfigCallbackPairs,\n    } = props;\n    const numColumns = numColumnsOrDefault(this.props.numColumns);\n    invariant(\n      !getItem && !getItemCount,\n      'FlatList does not support custom data formats.',\n    );\n    if (numColumns > 1) {\n      invariant(!horizontal, 'numColumns does not support horizontal.');\n    } else {\n      invariant(\n        !columnWrapperStyle,\n        'columnWrapperStyle not supported for single column lists',\n      );\n    }\n    invariant(\n      !(onViewableItemsChanged && viewabilityConfigCallbackPairs),\n      'FlatList does not support setting both onViewableItemsChanged and ' +\n        'viewabilityConfigCallbackPairs.',\n    );\n  }\n\n  _getItem = (data: Array<ItemT>, index: number) => {\n    const numColumns = numColumnsOrDefault(this.props.numColumns);\n    if (numColumns > 1) {\n      const ret = [];\n      for (let kk = 0; kk < numColumns; kk++) {\n        const item = data[index * numColumns + kk];\n        if (item != null) {\n          ret.push(item);\n        }\n      }\n      return ret;\n    } else {\n      return data[index];\n    }\n  };\n\n  _getItemCount = (data: ?Array<ItemT>): number => {\n    if (data) {\n      const numColumns = numColumnsOrDefault(this.props.numColumns);\n      return numColumns > 1 ? Math.ceil(data.length / numColumns) : data.length;\n    } else {\n      return 0;\n    }\n  };\n\n  _keyExtractor = (items: ItemT | Array<ItemT>, index: number) => {\n    const numColumns = numColumnsOrDefault(this.props.numColumns);\n    const keyExtractor = this.props.keyExtractor ?? defaultKeyExtractor;\n\n    if (numColumns > 1) {\n      if (Array.isArray(items)) {\n        return items\n          .map((item, kk) =>\n            keyExtractor(((item: $FlowFixMe): ItemT), index * numColumns + kk),\n          )\n          .join(':');\n      } else {\n        invariant(\n          Array.isArray(items),\n          'FlatList: Encountered internal consistency error, expected each item to consist of an ' +\n            'array with 1-%s columns; instead, received a single item.',\n          numColumns,\n        );\n      }\n    } else {\n      // $FlowFixMe[incompatible-call] Can't call keyExtractor with an array\n      return keyExtractor(items, index);\n    }\n  };\n\n  _pushMultiColumnViewable(arr: Array<ViewToken>, v: ViewToken): void {\n    const numColumns = numColumnsOrDefault(this.props.numColumns);\n    const keyExtractor = this.props.keyExtractor ?? defaultKeyExtractor;\n    v.item.forEach((item, ii) => {\n      invariant(v.index != null, 'Missing index!');\n      const index = v.index * numColumns + ii;\n      arr.push({...v, item, key: keyExtractor(item, index), index});\n    });\n  }\n\n  _createOnViewableItemsChanged(\n    onViewableItemsChanged: ?(info: {\n      viewableItems: Array<ViewToken>,\n      changed: Array<ViewToken>,\n      ...\n    }) => void,\n  ) {\n    return (info: {\n      viewableItems: Array<ViewToken>,\n      changed: Array<ViewToken>,\n      ...\n    }) => {\n      const numColumns = numColumnsOrDefault(this.props.numColumns);\n      if (onViewableItemsChanged) {\n        if (numColumns > 1) {\n          const changed = [];\n          const viewableItems = [];\n          info.viewableItems.forEach(v =>\n            this._pushMultiColumnViewable(viewableItems, v),\n          );\n          info.changed.forEach(v => this._pushMultiColumnViewable(changed, v));\n          onViewableItemsChanged({viewableItems, changed});\n        } else {\n          onViewableItemsChanged(info);\n        }\n      }\n    };\n  }\n\n  _renderer = () => {\n    const {ListItemComponent, renderItem, columnWrapperStyle} = this.props;\n    const numColumns = numColumnsOrDefault(this.props.numColumns);\n\n    let virtualizedListRenderKey = ListItemComponent\n      ? 'ListItemComponent'\n      : 'renderItem';\n\n    const renderer = (props): React.Node => {\n      if (ListItemComponent) {\n        // $FlowFixMe[not-a-component] Component isn't valid\n        // $FlowFixMe[incompatible-type-arg] Component isn't valid\n        // $FlowFixMe[incompatible-return] Component isn't valid\n        return <ListItemComponent {...props} />;\n      } else if (renderItem) {\n        // $FlowFixMe[incompatible-call]\n        return renderItem(props);\n      } else {\n        return null;\n      }\n    };\n\n    return {\n      /* $FlowFixMe[invalid-computed-prop] (>=0.111.0 site=react_native_fb)\n       * This comment suppresses an error found when Flow v0.111 was deployed.\n       * To see the error, delete this comment and run Flow. */\n      [virtualizedListRenderKey]: (info: RenderItemProps<ItemT>) => {\n        if (numColumns > 1) {\n          const {item, index} = info;\n          invariant(\n            Array.isArray(item),\n            'Expected array of items with numColumns > 1',\n          );\n          return (\n            <View style={StyleSheet.compose(styles.row, columnWrapperStyle)}>\n              {item.map((it, kk) => {\n                const element = renderer({\n                  item: it,\n                  index: index * numColumns + kk,\n                  separators: info.separators,\n                });\n                return element != null ? (\n                  <React.Fragment key={kk}>{element}</React.Fragment>\n                ) : null;\n              })}\n            </View>\n          );\n        } else {\n          return renderer(info);\n        }\n      },\n    };\n  };\n\n  render(): React.Node {\n    const {\n      numColumns,\n      columnWrapperStyle,\n      removeClippedSubviews: _removeClippedSubviews,\n      ...restProps\n    } = this.props;\n\n    return (\n      <VirtualizedList\n        {...restProps}\n        getItem={this._getItem}\n        getItemCount={this._getItemCount}\n        keyExtractor={this._keyExtractor}\n        ref={this._captureRef}\n        viewabilityConfigCallbackPairs={this._virtualizedListPairs}\n        removeClippedSubviews={removeClippedSubviewsOrDefault(\n          _removeClippedSubviews,\n        )}\n        {...this._renderer()}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {flexDirection: 'row'},\n});\n\nmodule.exports = FlatList;\n"],"mappings":"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"}