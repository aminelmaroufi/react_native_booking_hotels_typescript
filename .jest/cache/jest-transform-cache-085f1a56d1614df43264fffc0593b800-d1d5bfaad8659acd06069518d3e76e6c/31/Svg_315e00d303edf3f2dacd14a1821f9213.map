{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_extractResponder","_extractViewBox","_extractColor","_Shape2","_G","_NativeComponents","RNSVGSvgViewManager","NativeModules","styles","StyleSheet","create","svg","backgroundColor","borderWidth","defaultStyle","Svg","callback","_assertThisInitialize","_assertThisInitialized2","default","_this","root","measureInWindow","_assertThisInitialize2","measure","relativeToNativeNode","onSuccess","onFail","_assertThisInitialize3","measureLayout","props","width","height","bbWidth","bbHeight","_assertThisInitialize4","setNativeProps","options","handle","findNodeHandle","toDataURL","_this$props","style","opacity","viewBox","children","onLayout","preserveAspectRatio","extracted","_objectWithoutProperties2","stylesAndProps","_objectSpread","Array","isArray","Object","assign","apply","concat","_toConsumableArray2","color","focusable","font","transform","fill","fillOpacity","fillRule","stroke","strokeWidth","strokeOpacity","strokeDasharray","strokeDashoffset","strokeLinecap","strokeLinejoin","strokeMiterlimit","undefined","Boolean","rootStyles","push","override","overrideStyles","o","NaN","isNaN","w","parseInt","h","doNotParseWidth","length","doNotParseHeight","flex","tint","tintColor","createElement","RNSVGSvg","_extends2","ref","refMethod","__source","fileName","_jsxFileName","lineNumber"],"sources":["Svg.tsx"],"sourcesContent":["import React, { Component } from 'react';\nimport {\n  findNodeHandle,\n  MeasureInWindowOnSuccessCallback,\n  MeasureLayoutOnSuccessCallback,\n  MeasureOnSuccessCallback,\n  NativeModules,\n  StyleSheet,\n  ViewStyle,\n} from 'react-native';\nimport {\n  ClipProps,\n  Color,\n  extractedProps,\n  FillProps,\n  NumberProp,\n  ResponderInstanceProps,\n  ResponderProps,\n  StrokeProps,\n  TransformProps,\n} from '../lib/extract/types';\nimport extractResponder from '../lib/extract/extractResponder';\nimport extractViewBox from '../lib/extract/extractViewBox';\nimport extractColor from '../lib/extract/extractColor';\nimport Shape from './Shape';\nimport G from './G';\nimport { RNSVGSvg } from './NativeComponents';\n\nconst RNSVGSvgViewManager = NativeModules.RNSVGSvgViewManager;\n\nconst styles = StyleSheet.create({\n  svg: {\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n  },\n});\nconst defaultStyle = styles.svg;\n\nexport default class Svg extends Shape<\n  {\n    color?: Color;\n    viewBox?: string;\n    opacity?: NumberProp;\n    onLayout?: () => void;\n    preserveAspectRatio?: string;\n    style?: ViewStyle[] | ViewStyle;\n  } & TransformProps &\n    ResponderProps &\n    StrokeProps &\n    FillProps &\n    ClipProps\n> {\n  static displayName = 'Svg';\n\n  static defaultProps = {\n    preserveAspectRatio: 'xMidYMid meet',\n  };\n\n  measureInWindow = (callback: MeasureInWindowOnSuccessCallback) => {\n    const { root } = this;\n    root && root.measureInWindow(callback);\n  };\n\n  measure = (callback: MeasureOnSuccessCallback) => {\n    const { root } = this;\n    root && root.measure(callback);\n  };\n\n  measureLayout = (\n    relativeToNativeNode: number,\n    onSuccess: MeasureLayoutOnSuccessCallback,\n    onFail: () => void /* currently unused */,\n  ) => {\n    const { root } = this;\n    root && root.measureLayout(relativeToNativeNode, onSuccess, onFail);\n  };\n\n  setNativeProps = (\n    props: Object & {\n      width?: NumberProp;\n      height?: NumberProp;\n      bbWidth?: NumberProp;\n      bbHeight?: NumberProp;\n    },\n  ) => {\n    const { width, height } = props;\n    if (width) {\n      props.bbWidth = width;\n    }\n    if (height) {\n      props.bbHeight = height;\n    }\n    const { root } = this;\n    root && root.setNativeProps(props);\n  };\n\n  toDataURL = (callback: () => void, options?: Object) => {\n    if (!callback) {\n      return;\n    }\n    const handle = findNodeHandle(this.root as Component);\n    RNSVGSvgViewManager.toDataURL(handle, options, callback);\n  };\n\n  render() {\n    const {\n      style,\n      opacity,\n      viewBox,\n      children,\n      onLayout,\n      preserveAspectRatio,\n      ...extracted\n    } = this.props;\n    const stylesAndProps = {\n      ...(Array.isArray(style) ? Object.assign({}, ...style) : style),\n      ...extracted,\n    };\n    let {\n      color,\n      width,\n      height,\n      focusable,\n\n      // Inherited G properties\n      font,\n      transform,\n      fill,\n      fillOpacity,\n      fillRule,\n      stroke,\n      strokeWidth,\n      strokeOpacity,\n      strokeDasharray,\n      strokeDashoffset,\n      strokeLinecap,\n      strokeLinejoin,\n      strokeMiterlimit,\n    } = stylesAndProps;\n    if (width === undefined && height === undefined) {\n      width = height = '100%';\n    }\n\n    const props: extractedProps = extracted as extractedProps;\n    props.focusable = Boolean(focusable) && focusable !== 'false';\n    const rootStyles: (ViewStyle | ViewStyle[])[] = [defaultStyle];\n\n    if (style) {\n      rootStyles.push(style);\n    }\n\n    let override = false;\n    const overrideStyles: ViewStyle = {};\n    const o = opacity != null ? +opacity : NaN;\n    if (!isNaN(o)) {\n      override = true;\n      overrideStyles.opacity = o;\n    }\n\n    if (width && height) {\n      override = true;\n      const w = parseInt(width, 10);\n      const h = parseInt(height, 10);\n      const doNotParseWidth = isNaN(w) || width[width.length - 1] === '%';\n      const doNotParseHeight = isNaN(h) || height[height.length - 1] === '%';\n      overrideStyles.width = doNotParseWidth ? width : w;\n      overrideStyles.height = doNotParseHeight ? height : h;\n      overrideStyles.flex = 0;\n    }\n\n    if (override) {\n      rootStyles.push(overrideStyles);\n    }\n\n    props.style = rootStyles.length > 1 ? rootStyles : defaultStyle;\n\n    if (width != null) {\n      props.bbWidth = width;\n    }\n    if (height != null) {\n      props.bbHeight = height;\n    }\n\n    extractResponder(props, props, this as ResponderInstanceProps);\n\n    const tint = extractColor(color);\n    if (tint != null) {\n      props.color = tint;\n      props.tintColor = tint;\n    }\n\n    if (onLayout != null) {\n      props.onLayout = onLayout;\n    }\n\n    return (\n      <RNSVGSvg\n        {...props}\n        ref={this.refMethod}\n        {...extractViewBox({ viewBox, preserveAspectRatio })}\n      >\n        <G\n          {...{\n            children,\n            style,\n            font,\n            transform,\n            fill,\n            fillOpacity,\n            fillRule,\n            stroke,\n            strokeWidth,\n            strokeOpacity,\n            strokeDasharray,\n            strokeDashoffset,\n            strokeLinecap,\n            strokeLinejoin,\n            strokeMiterlimit,\n          }}\n        />\n      </RNSVGSvg>\n    );\n  }\n}\n"],"mappings":"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"}