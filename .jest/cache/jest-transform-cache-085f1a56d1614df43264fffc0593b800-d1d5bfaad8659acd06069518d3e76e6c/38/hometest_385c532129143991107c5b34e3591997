32128db8fb7a09a2704aa4a97f6f6181
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reduxMockStore = _interopRequireDefault(require("redux-mock-store"));
var _reactNative = require("@testing-library/react-native");
var _Home = _interopRequireDefault(require("../Home"));
var _actions = require("../../redux/actions");
var _hotels_response = _interopRequireDefault(require("./fixtures/hotels_response.json"));
var _Setup = _interopRequireDefault(require("../Setup"));
var mockStore = (0, _reduxMockStore.default)();
var store = mockStore({
  hotel: {
    hotels: _hotels_response.default.hotels
  }
});
describe('Test homepage screen', function () {
  beforeEach(function () {
    store.dispatch = jest.fn();
    (0, _Setup.default)(_react.default.createElement(_Home.default, {
      hotels: _hotels_response.default.hotels
    }), store);
  });
  afterEach(_reactNative.cleanup);
  it('fetches the hotels on mount', function () {
    var expectedAction = (0, _actions.getHotels)({
      q: '',
      page: 1
    });
    expect(store.dispatch).toHaveBeenCalledTimes(1);
    expect(store.dispatch).toHaveBeenCalledWith(expectedAction);
  });
  it('should display the list of hotels', function () {
    expect(_reactNative.screen.getByTestId('search-box')).toBeDefined();
  });
  it('should render a list of hotels', function () {
    _hotels_response.default.hotels.forEach(function (hotel) {
      var hotelName = _reactNative.screen.getByText(hotel.name);
      var addressElement = _reactNative.screen.getByText(hotel.short_address);
      expect(hotelName).toBeDefined();
      expect(addressElement).toBeDefined();
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWR1eE1vY2tTdG9yZSIsIl9yZWFjdE5hdGl2ZSIsIl9Ib21lIiwiX2FjdGlvbnMiLCJfaG90ZWxzX3Jlc3BvbnNlIiwiX1NldHVwIiwibW9ja1N0b3JlIiwiY29uZmlndXJlU3RvcmUiLCJzdG9yZSIsImhvdGVsIiwiaG90ZWxzIiwiaG90ZWxzX3Jlc3BvbnNlIiwiZGVzY3JpYmUiLCJiZWZvcmVFYWNoIiwiZGlzcGF0Y2giLCJqZXN0IiwiZm4iLCJTZXR1cCIsImRlZmF1bHQiLCJjcmVhdGVFbGVtZW50IiwiYWZ0ZXJFYWNoIiwiY2xlYW51cCIsIml0IiwiZXhwZWN0ZWRBY3Rpb24iLCJnZXRIb3RlbHMiLCJxIiwicGFnZSIsImV4cGVjdCIsInRvSGF2ZUJlZW5DYWxsZWRUaW1lcyIsInRvSGF2ZUJlZW5DYWxsZWRXaXRoIiwic2NyZWVuIiwiZ2V0QnlUZXN0SWQiLCJ0b0JlRGVmaW5lZCIsImZvckVhY2giLCJob3RlbE5hbWUiLCJnZXRCeVRleHQiLCJuYW1lIiwiYWRkcmVzc0VsZW1lbnQiLCJzaG9ydF9hZGRyZXNzIl0sInNvdXJjZXMiOlsiaG9tZS50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNvbmZpZ3VyZVN0b3JlIGZyb20gJ3JlZHV4LW1vY2stc3RvcmUnO1xuaW1wb3J0IHtjbGVhbnVwLCBzY3JlZW59IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJztcblxuaW1wb3J0IEhvbWUgZnJvbSAnLi4vSG9tZSc7XG5pbXBvcnQge2dldEhvdGVsc30gZnJvbSAnLi4vLi4vcmVkdXgvYWN0aW9ucyc7XG5pbXBvcnQgaG90ZWxzX3Jlc3BvbnNlIGZyb20gJy4vZml4dHVyZXMvaG90ZWxzX3Jlc3BvbnNlLmpzb24nO1xuaW1wb3J0IFNldHVwIGZyb20gJy4uL1NldHVwJztcblxubGV0IG1vY2tTdG9yZSA9IGNvbmZpZ3VyZVN0b3JlKCk7XG5cbmNvbnN0IHN0b3JlID0gbW9ja1N0b3JlKHtcbiAgaG90ZWw6IHtcbiAgICBob3RlbHM6IGhvdGVsc19yZXNwb25zZS5ob3RlbHMsXG4gIH0sXG59KTtcblxuZGVzY3JpYmUoJ1Rlc3QgaG9tZXBhZ2Ugc2NyZWVuJywgKCkgPT4ge1xuICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICBzdG9yZS5kaXNwYXRjaCA9IGplc3QuZm4oKTtcbiAgICBTZXR1cCg8SG9tZSBob3RlbHM9e2hvdGVsc19yZXNwb25zZS5ob3RlbHN9IC8+LCBzdG9yZSk7XG4gIH0pO1xuXG4gIGFmdGVyRWFjaChjbGVhbnVwKTtcblxuICBpdCgnZmV0Y2hlcyB0aGUgaG90ZWxzIG9uIG1vdW50JywgKCkgPT4ge1xuICAgIGNvbnN0IGV4cGVjdGVkQWN0aW9uID0gZ2V0SG90ZWxzKHtxOiAnJywgcGFnZTogMX0pO1xuICAgIGV4cGVjdChzdG9yZS5kaXNwYXRjaCkudG9IYXZlQmVlbkNhbGxlZFRpbWVzKDEpO1xuICAgIGV4cGVjdChzdG9yZS5kaXNwYXRjaCkudG9IYXZlQmVlbkNhbGxlZFdpdGgoZXhwZWN0ZWRBY3Rpb24pO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIGRpc3BsYXkgdGhlIGxpc3Qgb2YgaG90ZWxzJywgKCkgPT4ge1xuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXN0SWQoJ3NlYXJjaC1ib3gnKSkudG9CZURlZmluZWQoKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCByZW5kZXIgYSBsaXN0IG9mIGhvdGVscycsICgpID0+IHtcbiAgICBob3RlbHNfcmVzcG9uc2UuaG90ZWxzLmZvckVhY2goaG90ZWwgPT4ge1xuICAgICAgY29uc3QgaG90ZWxOYW1lID0gc2NyZWVuLmdldEJ5VGV4dChob3RlbC5uYW1lKTtcbiAgICAgIGNvbnN0IGFkZHJlc3NFbGVtZW50ID0gc2NyZWVuLmdldEJ5VGV4dChob3RlbC5zaG9ydF9hZGRyZXNzKTtcbiAgICAgIGV4cGVjdChob3RlbE5hbWUpLnRvQmVEZWZpbmVkKCk7XG4gICAgICBleHBlY3QoYWRkcmVzc0VsZW1lbnQpLnRvQmVEZWZpbmVkKCk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiI7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLGVBQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFFLFlBQUEsR0FBQUYsT0FBQTtBQUVBLElBQUFHLEtBQUEsR0FBQUosc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFJLFFBQUEsR0FBQUosT0FBQTtBQUNBLElBQUFLLGdCQUFBLEdBQUFOLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBTSxNQUFBLEdBQUFQLHNCQUFBLENBQUFDLE9BQUE7QUFFQSxJQUFJTyxTQUFTLEdBQUcsSUFBQUMsdUJBQWMsR0FBRTtBQUVoQyxJQUFNQyxLQUFLLEdBQUdGLFNBQVMsQ0FBQztFQUN0QkcsS0FBSyxFQUFFO0lBQ0xDLE1BQU0sRUFBRUMsd0JBQWUsQ0FBQ0Q7RUFDMUI7QUFDRixDQUFDLENBQUM7QUFFRkUsUUFBUSxDQUFDLHNCQUFzQixFQUFFLFlBQU07RUFDckNDLFVBQVUsQ0FBQyxZQUFNO0lBQ2ZMLEtBQUssQ0FBQ00sUUFBUSxHQUFHQyxJQUFJLENBQUNDLEVBQUUsRUFBRTtJQUMxQixJQUFBQyxjQUFLLEVBQUNwQixNQUFBLENBQUFxQixPQUFBLENBQUFDLGFBQUEsQ0FBQ2pCLEtBQUEsQ0FBQWdCLE9BQUk7TUFBQ1IsTUFBTSxFQUFFQyx3QkFBZSxDQUFDRDtJQUFPLEVBQUcsRUFBRUYsS0FBSyxDQUFDO0VBQ3hELENBQUMsQ0FBQztFQUVGWSxTQUFTLENBQUNDLG9CQUFPLENBQUM7RUFFbEJDLEVBQUUsQ0FBQyw2QkFBNkIsRUFBRSxZQUFNO0lBQ3RDLElBQU1DLGNBQWMsR0FBRyxJQUFBQyxrQkFBUyxFQUFDO01BQUNDLENBQUMsRUFBRSxFQUFFO01BQUVDLElBQUksRUFBRTtJQUFDLENBQUMsQ0FBQztJQUNsREMsTUFBTSxDQUFDbkIsS0FBSyxDQUFDTSxRQUFRLENBQUMsQ0FBQ2MscUJBQXFCLENBQUMsQ0FBQyxDQUFDO0lBQy9DRCxNQUFNLENBQUNuQixLQUFLLENBQUNNLFFBQVEsQ0FBQyxDQUFDZSxvQkFBb0IsQ0FBQ04sY0FBYyxDQUFDO0VBQzdELENBQUMsQ0FBQztFQUVGRCxFQUFFLENBQUMsbUNBQW1DLEVBQUUsWUFBTTtJQUM1Q0ssTUFBTSxDQUFDRyxtQkFBTSxDQUFDQyxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQ0MsV0FBVyxFQUFFO0VBQ3hELENBQUMsQ0FBQztFQUVGVixFQUFFLENBQUMsZ0NBQWdDLEVBQUUsWUFBTTtJQUN6Q1gsd0JBQWUsQ0FBQ0QsTUFBTSxDQUFDdUIsT0FBTyxDQUFDLFVBQUF4QixLQUFLLEVBQUk7TUFDdEMsSUFBTXlCLFNBQVMsR0FBR0osbUJBQU0sQ0FBQ0ssU0FBUyxDQUFDMUIsS0FBSyxDQUFDMkIsSUFBSSxDQUFDO01BQzlDLElBQU1DLGNBQWMsR0FBR1AsbUJBQU0sQ0FBQ0ssU0FBUyxDQUFDMUIsS0FBSyxDQUFDNkIsYUFBYSxDQUFDO01BQzVEWCxNQUFNLENBQUNPLFNBQVMsQ0FBQyxDQUFDRixXQUFXLEVBQUU7TUFDL0JMLE1BQU0sQ0FBQ1UsY0FBYyxDQUFDLENBQUNMLFdBQVcsRUFBRTtJQUN0QyxDQUFDLENBQUM7RUFDSixDQUFDLENBQUM7QUFDSixDQUFDLENBQUMifQ==