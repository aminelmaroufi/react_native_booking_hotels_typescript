f4d153df0059f2d2fa7885129a0531c6
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = reducer;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _actionTypes = _interopRequireDefault(require("../../utils/actionTypes"));
var _user = require("../../models/user");
var initialState = {
  fetching: false,
  isLoggedIn: false,
  message: '',
  error: false,
  user: _user.emptyUser,
  success: false
};
function reducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments.length > 1 ? arguments[1] : undefined;
  switch (action.type) {
    case _actionTypes.default.API_CALL_REQUEST:
      return (0, _extends2.default)({}, state, {
        fetching: true,
        success: false,
        error: false,
        message: ''
      });
    case _actionTypes.default.API_CALL_SUCCESS:
      return (0, _extends2.default)({}, state, {
        fetching: false,
        success: true
      });
    case _actionTypes.default.API_CALL_FAILURE:
      return (0, _extends2.default)({}, state, {
        fetching: false,
        error: true,
        message: action.payload.message
      });
    case _actionTypes.default.SUCCESS_OPERATION:
      return (0, _extends2.default)({}, state, {
        fetching: false,
        success: true,
        message: action.payload.message
      });
    case _actionTypes.default.CHECK_USER_SUCCESS:
      return (0, _extends2.default)({}, state, {
        user: action.payload.user ? action.payload.user : _user.emptyUser,
        isLoggedIn: action.payload.user ? true : false
      });
    case _actionTypes.default.CREATE_ACCOUNT_SUCCESS:
      return (0, _extends2.default)({}, state, {
        user: action.payload.user
      });
    case _actionTypes.default.LOGIN_SUCCESS:
      return (0, _extends2.default)({}, state, {
        user: action.payload.user,
        isLoggedIn: true
      });
    case _actionTypes.default.ADD_CARD_SUCCESS:
      return (0, _extends2.default)({}, state, {
        user: (0, _extends2.default)({}, state.user, {
          cards: [].concat((0, _toConsumableArray2.default)(state.user.cards), [action.payload.card])
        })
      });
    case _actionTypes.default.SET_DEFAULT_CARD:
      var cards = state.user.cards.filter(function (c) {
        return c.id !== action.payload.card.id;
      });
      cards.unshift(action.payload.card);
      return (0, _extends2.default)({}, state, {
        user: (0, _extends2.default)({}, state.user, {
          cards: cards
        })
      });
    default:
      return state;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfYWN0aW9uVHlwZXMiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl91c2VyIiwiaW5pdGlhbFN0YXRlIiwiZmV0Y2hpbmciLCJpc0xvZ2dlZEluIiwibWVzc2FnZSIsImVycm9yIiwidXNlciIsImVtcHR5VXNlciIsInN1Y2Nlc3MiLCJyZWR1Y2VyIiwic3RhdGUiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJhY3Rpb24iLCJ0eXBlIiwiQWN0aW9uVHlwZXMiLCJBUElfQ0FMTF9SRVFVRVNUIiwiX2V4dGVuZHMyIiwiZGVmYXVsdCIsIkFQSV9DQUxMX1NVQ0NFU1MiLCJBUElfQ0FMTF9GQUlMVVJFIiwicGF5bG9hZCIsIlNVQ0NFU1NfT1BFUkFUSU9OIiwiQ0hFQ0tfVVNFUl9TVUNDRVNTIiwiQ1JFQVRFX0FDQ09VTlRfU1VDQ0VTUyIsIkxPR0lOX1NVQ0NFU1MiLCJBRERfQ0FSRF9TVUNDRVNTIiwiY2FyZHMiLCJjb25jYXQiLCJfdG9Db25zdW1hYmxlQXJyYXkyIiwiY2FyZCIsIlNFVF9ERUZBVUxUX0NBUkQiLCJmaWx0ZXIiLCJjIiwiaWQiLCJ1bnNoaWZ0Il0sInNvdXJjZXMiOlsiYXV0aC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQWN0aW9uVHlwZXMgZnJvbSAnLi4vLi4vdXRpbHMvYWN0aW9uVHlwZXMnO1xuaW1wb3J0IHthdXRoQWN0aW9ucywgQXV0aFN0YXRlfSBmcm9tICcuLi8uLi90eXBlcyc7XG5pbXBvcnQge2VtcHR5VXNlcn0gZnJvbSAnLi4vLi4vbW9kZWxzL3VzZXInO1xuXG5jb25zdCBpbml0aWFsU3RhdGU6IEF1dGhTdGF0ZSA9IHtcbiAgZmV0Y2hpbmc6IGZhbHNlLFxuICBpc0xvZ2dlZEluOiBmYWxzZSxcbiAgbWVzc2FnZTogJycsXG4gIGVycm9yOiBmYWxzZSxcbiAgdXNlcjogZW1wdHlVc2VyLFxuICBzdWNjZXNzOiBmYWxzZSxcbn07XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZWR1Y2VyKHN0YXRlID0gaW5pdGlhbFN0YXRlLCBhY3Rpb246IGF1dGhBY3Rpb25zKSB7XG4gIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICBjYXNlIEFjdGlvblR5cGVzLkFQSV9DQUxMX1JFUVVFU1Q6XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgZmV0Y2hpbmc6IHRydWUsXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBlcnJvcjogZmFsc2UsXG4gICAgICAgIG1lc3NhZ2U6ICcnLFxuICAgICAgfTtcbiAgICBjYXNlIEFjdGlvblR5cGVzLkFQSV9DQUxMX1NVQ0NFU1M6XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgZmV0Y2hpbmc6IGZhbHNlLFxuICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgfTtcbiAgICBjYXNlIEFjdGlvblR5cGVzLkFQSV9DQUxMX0ZBSUxVUkU6XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgZmV0Y2hpbmc6IGZhbHNlLFxuICAgICAgICBlcnJvcjogdHJ1ZSxcbiAgICAgICAgbWVzc2FnZTogYWN0aW9uLnBheWxvYWQubWVzc2FnZSxcbiAgICAgIH07XG4gICAgY2FzZSBBY3Rpb25UeXBlcy5TVUNDRVNTX09QRVJBVElPTjpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBmZXRjaGluZzogZmFsc2UsXG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIG1lc3NhZ2U6IGFjdGlvbi5wYXlsb2FkLm1lc3NhZ2UsXG4gICAgICB9O1xuICAgIGNhc2UgQWN0aW9uVHlwZXMuQ0hFQ0tfVVNFUl9TVUNDRVNTOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIHVzZXI6IGFjdGlvbi5wYXlsb2FkLnVzZXIgPyBhY3Rpb24ucGF5bG9hZC51c2VyIDogZW1wdHlVc2VyLFxuICAgICAgICBpc0xvZ2dlZEluOiBhY3Rpb24ucGF5bG9hZC51c2VyID8gdHJ1ZSA6IGZhbHNlLFxuICAgICAgfTtcbiAgICBjYXNlIEFjdGlvblR5cGVzLkNSRUFURV9BQ0NPVU5UX1NVQ0NFU1M6XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgdXNlcjogYWN0aW9uLnBheWxvYWQudXNlcixcbiAgICAgIH07XG4gICAgY2FzZSBBY3Rpb25UeXBlcy5MT0dJTl9TVUNDRVNTOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIHVzZXI6IGFjdGlvbi5wYXlsb2FkLnVzZXIsXG4gICAgICAgIGlzTG9nZ2VkSW46IHRydWUsXG4gICAgICB9O1xuICAgIGNhc2UgQWN0aW9uVHlwZXMuQUREX0NBUkRfU1VDQ0VTUzpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICB1c2VyOiB7XG4gICAgICAgICAgLi4uc3RhdGUudXNlcixcbiAgICAgICAgICBjYXJkczogWy4uLnN0YXRlLnVzZXIuY2FyZHMsIGFjdGlvbi5wYXlsb2FkLmNhcmRdLFxuICAgICAgICB9LFxuICAgICAgfTtcbiAgICBjYXNlIEFjdGlvblR5cGVzLlNFVF9ERUZBVUxUX0NBUkQ6XG4gICAgICBsZXQgY2FyZHMgPSBzdGF0ZS51c2VyLmNhcmRzLmZpbHRlcihjID0+IGMuaWQgIT09IGFjdGlvbi5wYXlsb2FkLmNhcmQuaWQpO1xuICAgICAgY2FyZHMudW5zaGlmdChhY3Rpb24ucGF5bG9hZC5jYXJkKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICB1c2VyOiB7XG4gICAgICAgICAgLi4uc3RhdGUudXNlcixcbiAgICAgICAgICBjYXJkczogY2FyZHMsXG4gICAgICAgIH0sXG4gICAgICB9O1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gc3RhdGU7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEs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