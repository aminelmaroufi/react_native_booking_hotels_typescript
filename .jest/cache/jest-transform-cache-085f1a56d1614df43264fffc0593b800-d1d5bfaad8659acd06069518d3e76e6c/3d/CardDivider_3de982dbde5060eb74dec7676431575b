1206c78ad1820749165bdab463071fe2
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _config = require("../config");
var _Divider = _interopRequireDefault(require("../divider/Divider"));
var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
var CardDivider = function CardDivider(_a) {
  var style = _a.style,
    props = __rest(_a, ["style"]);
  return _react.default.createElement(_Divider.default, (0, _extends2.default)({
    style: _reactNative.StyleSheet.flatten([styles.divider, style])
  }, props));
};
var styles = _reactNative.StyleSheet.create({
  divider: {
    marginBottom: 15
  }
});
var _default = (0, _config.withTheme)(CardDivider, 'CardDivider');
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9jb25maWciLCJfRGl2aWRlciIsIl9fcmVzdCIsInMiLCJlIiwidCIsInAiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpbmRleE9mIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiaSIsImxlbmd0aCIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiQ2FyZERpdmlkZXIiLCJfYSIsInN0eWxlIiwicHJvcHMiLCJkZWZhdWx0IiwiY3JlYXRlRWxlbWVudCIsIl9leHRlbmRzMiIsIlN0eWxlU2hlZXQiLCJmbGF0dGVuIiwic3R5bGVzIiwiZGl2aWRlciIsImNyZWF0ZSIsIm1hcmdpbkJvdHRvbSIsIl9kZWZhdWx0Iiwid2l0aFRoZW1lIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIkNhcmREaXZpZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX3Jlc3QgPSAodGhpcyAmJiB0aGlzLl9fcmVzdCkgfHwgZnVuY3Rpb24gKHMsIGUpIHtcbiAgICB2YXIgdCA9IHt9O1xuICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSAmJiBlLmluZGV4T2YocCkgPCAwKVxuICAgICAgICB0W3BdID0gc1twXTtcbiAgICBpZiAocyAhPSBudWxsICYmIHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBwID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzKTsgaSA8IHAubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChlLmluZGV4T2YocFtpXSkgPCAwICYmIE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzLCBwW2ldKSlcbiAgICAgICAgICAgICAgICB0W3BbaV1dID0gc1twW2ldXTtcbiAgICAgICAgfVxuICAgIHJldHVybiB0O1xufTtcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBTdHlsZVNoZWV0IH0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCB7IHdpdGhUaGVtZSB9IGZyb20gJy4uL2NvbmZpZyc7XG5pbXBvcnQgRGl2aWRlciBmcm9tICcuLi9kaXZpZGVyL0RpdmlkZXInO1xuY29uc3QgQ2FyZERpdmlkZXIgPSAoX2EpID0+IHtcbiAgICB2YXIgeyBzdHlsZSB9ID0gX2EsIHByb3BzID0gX19yZXN0KF9hLCBbXCJzdHlsZVwiXSk7XG4gICAgcmV0dXJuICg8RGl2aWRlciBzdHlsZT17U3R5bGVTaGVldC5mbGF0dGVuKFtzdHlsZXMuZGl2aWRlciwgc3R5bGVdKX0gey4uLnByb3BzfS8+KTtcbn07XG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gICAgZGl2aWRlcjoge1xuICAgICAgICBtYXJnaW5Cb3R0b206IDE1LFxuICAgIH0sXG59KTtcbmV4cG9ydCBkZWZhdWx0IHdpdGhUaGVtZShDYXJkRGl2aWRlciwgJ0NhcmREaXZpZGVyJyk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBV0EsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsT0FBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsUUFBQSxHQUFBSixzQkFBQSxDQUFBQyxPQUFBO0FBZEEsSUFBSUksTUFBTSxHQUFJLFVBQVEsU0FBS0EsTUFBTSxJQUFLLFVBQVVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFO0VBQ2xELElBQUlDLENBQUMsR0FBRyxDQUFDLENBQUM7RUFDVixLQUFLLElBQUlDLENBQUMsSUFBSUgsQ0FBQyxFQUFFLElBQUlJLE1BQU0sQ0FBQ0MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ1AsQ0FBQyxFQUFFRyxDQUFDLENBQUMsSUFBSUYsQ0FBQyxDQUFDTyxPQUFPLENBQUNMLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFDL0VELENBQUMsQ0FBQ0MsQ0FBQyxDQUFDLEdBQUdILENBQUMsQ0FBQ0csQ0FBQyxDQUFDO0VBQ2YsSUFBSUgsQ0FBQyxJQUFJLElBQUksSUFBSSxPQUFPSSxNQUFNLENBQUNLLHFCQUFxQixLQUFLLFVBQVUsRUFDL0QsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxFQUFFUCxDQUFDLEdBQUdDLE1BQU0sQ0FBQ0sscUJBQXFCLENBQUNULENBQUMsQ0FBQyxFQUFFVSxDQUFDLEdBQUdQLENBQUMsQ0FBQ1EsTUFBTSxFQUFFRCxDQUFDLEVBQUUsRUFBRTtJQUNwRSxJQUFJVCxDQUFDLENBQUNPLE9BQU8sQ0FBQ0wsQ0FBQyxDQUFDTyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSU4sTUFBTSxDQUFDQyxTQUFTLENBQUNPLG9CQUFvQixDQUFDTCxJQUFJLENBQUNQLENBQUMsRUFBRUcsQ0FBQyxDQUFDTyxDQUFDLENBQUMsQ0FBQyxFQUMxRVIsQ0FBQyxDQUFDQyxDQUFDLENBQUNPLENBQUMsQ0FBQyxDQUFDLEdBQUdWLENBQUMsQ0FBQ0csQ0FBQyxDQUFDTyxDQUFDLENBQUMsQ0FBQztFQUN6QjtFQUNKLE9BQU9SLENBQUM7QUFDWixDQUFDO0FBS0QsSUFBTVcsV0FBVyxHQUFHLFNBQWRBLFdBQVdBLENBQUlDLEVBQUUsRUFBSztFQUNwQixJQUFFQyxLQUFLLEdBQUtELEVBQUUsQ0FBWkMsS0FBSztJQUFTQyxLQUFLLEdBQUdqQixNQUFNLENBQUNlLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0VBQ2pELE9BQVFyQixNQUFBLENBQUF3QixPQUFBLENBQUFDLGFBQUEsQ0FBQ3BCLFFBQUEsQ0FBQW1CLE9BQU8sTUFBQUUsU0FBQSxDQUFBRixPQUFBO0lBQUNGLEtBQUssRUFBRUssdUJBQVUsQ0FBQ0MsT0FBTyxDQUFDLENBQUNDLE1BQU0sQ0FBQ0MsT0FBTyxFQUFFUixLQUFLLENBQUM7RUFBRSxHQUFLQyxLQUFLLEVBQUc7QUFDckYsQ0FBQztBQUNELElBQU1NLE1BQU0sR0FBR0YsdUJBQVUsQ0FBQ0ksTUFBTSxDQUFDO0VBQzdCRCxPQUFPLEVBQUU7SUFDTEUsWUFBWSxFQUFFO0VBQ2xCO0FBQ0osQ0FBQyxDQUFDO0FBQUMsSUFBQUMsUUFBQSxHQUNZLElBQUFDLGlCQUFTLEVBQUNkLFdBQVcsRUFBRSxhQUFhLENBQUM7QUFBQWUsT0FBQSxDQUFBWCxPQUFBLEdBQUFTLFFBQUEifQ==