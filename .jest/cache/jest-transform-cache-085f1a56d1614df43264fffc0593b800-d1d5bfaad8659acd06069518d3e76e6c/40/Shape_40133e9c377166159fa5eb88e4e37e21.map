{"version":3,"names":["_react","require","_SvgTouchableMixin","_interopRequireDefault","_reactNative","RNSVGRenderableManager","NativeModules","multiply_matrices","l","r","al","a","bl","b","cl","c","dl","d","el","e","fl","f","ar","br","cr","dr","er","fr","invert","_ref","n","deg2rad","Math","PI","SVGMatrix","matrix","_classCallCheck2","default","secondMatrix","x","y","scaleFactor","scaleFactorX","scaleFactorY","angle","cos","sin","atan2","tan","_matrixTransform","matrixTransform","point","SVGPoint","_x","_y","ownerSVGElement","createSVGPoint","createSVGMatrix","Shape","_props","context","_this","_possibleConstructorReturn2","_getPrototypeOf2","call","_defineProperty2","_assertThisInitialized2","instance","root","props","setNativeProps","options","_ref2","_ref2$fill","fill","_ref2$stroke","stroke","_ref2$markers","markers","_ref2$clipped","clipped","handle","findNodeHandle","getBBox","getCTM","getScreenCTM","isPointInFill","isPointInStroke","getTotalLength","length","getPointAtLength","Component","prototype"],"sources":["Shape.tsx"],"sourcesContent":["import { Component } from 'react';\nimport SvgTouchableMixin from '../lib/SvgTouchableMixin';\nimport {\n  NativeModules,\n  findNodeHandle,\n  NativeMethodsMixinStatic,\n} from 'react-native';\nimport { TransformProps } from '../lib/extract/types';\nconst { RNSVGRenderableManager } = NativeModules;\n\nexport interface SVGBoundingBoxOptions {\n  fill?: boolean;\n  stroke?: boolean;\n  markers?: boolean;\n  clipped?: boolean;\n}\n\nexport interface DOMPointInit {\n  x?: number;\n  y?: number;\n  z?: number;\n  w?: number;\n}\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nexport interface SVGPoint extends Point {\n  constructor(point?: Point): SVGPoint;\n  matrixTransform(matrix: Matrix): SVGPoint;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\nexport interface SVGRect extends Rect {}\n\nexport interface Matrix {\n  a: number;\n  b: number;\n  c: number;\n  d: number;\n  e: number;\n  f: number;\n}\n\nexport interface SVGMatrix extends Matrix {\n  constructor(matrix?: Matrix): SVGMatrix;\n  multiply(secondMatrix: Matrix): SVGMatrix;\n  inverse(): SVGMatrix;\n  translate(x: number, y: number): SVGMatrix;\n  scale(scaleFactor: number): SVGMatrix;\n  scaleNonUniform(scaleFactorX: number, scaleFactorY: number): SVGMatrix;\n  rotate(angle: number): SVGMatrix;\n  rotateFromVector(x: number, y: number): SVGMatrix;\n  flipX(): SVGMatrix;\n  flipY(): SVGMatrix;\n  skewX(angle: number): SVGMatrix;\n  skewY(angle: number): SVGMatrix;\n}\n\nexport function multiply_matrices(l: Matrix, r: Matrix): Matrix {\n  const { a: al, b: bl, c: cl, d: dl, e: el, f: fl } = l;\n  const { a: ar, b: br, c: cr, d: dr, e: er, f: fr } = r;\n\n  const a = al * ar + cl * br;\n  const c = al * cr + cl * dr;\n  const e = al * er + cl * fr + el;\n  const b = bl * ar + dl * br;\n  const d = bl * cr + dl * dr;\n  const f = bl * er + dl * fr + fl;\n\n  return { a, c, e, b, d, f };\n}\n\nexport function invert({ a, b, c, d, e, f }: Matrix): Matrix {\n  const n = a * d - b * c;\n  return {\n    a: d / n,\n    b: -b / n,\n    c: -c / n,\n    d: a / n,\n    e: (c * f - d * e) / n,\n    f: -(a * f - b * e) / n,\n  };\n}\n\nconst deg2rad = Math.PI / 180;\n\nexport class SVGMatrix implements SVGMatrix {\n  constructor(matrix?: Matrix) {\n    if (matrix) {\n      const { a, b, c, d, e, f } = matrix;\n      this.a = a;\n      this.b = b;\n      this.c = c;\n      this.d = d;\n      this.e = e;\n      this.f = f;\n    } else {\n      this.a = 1;\n      this.b = 0;\n      this.c = 0;\n      this.d = 1;\n      this.e = 0;\n      this.f = 0;\n    }\n  }\n  multiply(secondMatrix: Matrix): SVGMatrix {\n    return new SVGMatrix(multiply_matrices(this, secondMatrix));\n  }\n  inverse(): SVGMatrix {\n    return new SVGMatrix(invert(this));\n  }\n  translate(x: number, y: number): SVGMatrix {\n    return new SVGMatrix(\n      multiply_matrices(this, { a: 1, b: 0, c: 0, d: 1, e: x, f: y }),\n    );\n  }\n  scale(scaleFactor: number): SVGMatrix {\n    return new SVGMatrix(\n      multiply_matrices(this, {\n        a: scaleFactor,\n        b: 0,\n        c: 0,\n        d: scaleFactor,\n        e: 0,\n        f: 0,\n      }),\n    );\n  }\n  scaleNonUniform(scaleFactorX: number, scaleFactorY: number): SVGMatrix {\n    return new SVGMatrix(\n      multiply_matrices(this, {\n        a: scaleFactorX,\n        b: 0,\n        c: 0,\n        d: scaleFactorY,\n        e: 0,\n        f: 0,\n      }),\n    );\n  }\n  rotate(angle: number): SVGMatrix {\n    const cos = Math.cos(deg2rad * angle);\n    const sin = Math.sin(deg2rad * angle);\n    return new SVGMatrix(\n      multiply_matrices(this, { a: cos, b: sin, c: -sin, d: cos, e: 0, f: 0 }),\n    );\n  }\n  rotateFromVector(x: number, y: number): SVGMatrix {\n    const angle = Math.atan2(y, x);\n    const cos = Math.cos(deg2rad * angle);\n    const sin = Math.sin(deg2rad * angle);\n    return new SVGMatrix(\n      multiply_matrices(this, { a: cos, b: sin, c: -sin, d: cos, e: 0, f: 0 }),\n    );\n  }\n  flipX(): SVGMatrix {\n    return new SVGMatrix(\n      multiply_matrices(this, { a: -1, b: 0, c: 0, d: 1, e: 0, f: 0 }),\n    );\n  }\n  flipY(): SVGMatrix {\n    return new SVGMatrix(\n      multiply_matrices(this, { a: 1, b: 0, c: 0, d: -1, e: 0, f: 0 }),\n    );\n  }\n  skewX(angle: number): SVGMatrix {\n    return new SVGMatrix(\n      multiply_matrices(this, {\n        a: 1,\n        b: 0,\n        c: Math.tan(deg2rad * angle),\n        d: 1,\n        e: 0,\n        f: 0,\n      }),\n    );\n  }\n  skewY(angle: number): SVGMatrix {\n    return new SVGMatrix(\n      multiply_matrices(this, {\n        a: 1,\n        b: Math.tan(deg2rad * angle),\n        c: 0,\n        d: 1,\n        e: 0,\n        f: 0,\n      }),\n    );\n  }\n}\n\nexport function matrixTransform(matrix: Matrix, point: Point): Point {\n  const { a, b, c, d, e, f } = matrix;\n  const { x, y } = point;\n  return {\n    x: a * x + c * y + e,\n    y: b * x + d * y + f,\n  };\n}\n\nexport class SVGPoint implements SVGPoint {\n  constructor(point?: Point) {\n    if (point) {\n      const { x, y } = point;\n      this.x = x;\n      this.y = y;\n    } else {\n      this.x = 0;\n      this.y = 0;\n    }\n  }\n  matrixTransform(matrix: Matrix): SVGPoint {\n    return new SVGPoint(matrixTransform(matrix, this));\n  }\n}\n\nexport const ownerSVGElement = {\n  createSVGPoint(): SVGPoint {\n    return new SVGPoint();\n  },\n  createSVGMatrix(): SVGMatrix {\n    return new SVGMatrix();\n  },\n};\n\nexport default class Shape<P> extends Component<P> {\n  [x: string]: unknown;\n  root: (Shape<P> & NativeMethodsMixinStatic) | null = null;\n  constructor(props: P, context: {}) {\n    super(props, context);\n    SvgTouchableMixin(this);\n  }\n  refMethod: (\n    instance: (Shape<P> & NativeMethodsMixinStatic) | null,\n  ) => void = (instance: (Shape<P> & NativeMethodsMixinStatic) | null) => {\n    this.root = instance;\n  };\n  setNativeProps = (\n    props: Object & {\n      matrix?: [number, number, number, number, number, number];\n    } & TransformProps,\n  ) => {\n    this.root && this.root.setNativeProps(props);\n  };\n  /*\n   * The following native methods are experimental and likely broken in some\n   * ways. If you have a use case for these, please open an issue with a\n   * representative example / reproduction.\n   * */\n  getBBox = (options?: SVGBoundingBoxOptions): SVGRect => {\n    const { fill = true, stroke = true, markers = true, clipped = true } =\n      options || {};\n    const handle = findNodeHandle(this.root as Component);\n    return RNSVGRenderableManager.getBBox(handle, {\n      fill,\n      stroke,\n      markers,\n      clipped,\n    });\n  };\n  getCTM = (): SVGMatrix => {\n    const handle = findNodeHandle(this.root as Component);\n    return new SVGMatrix(RNSVGRenderableManager.getCTM(handle));\n  };\n  getScreenCTM = (): SVGMatrix => {\n    const handle = findNodeHandle(this.root as Component);\n    return new SVGMatrix(RNSVGRenderableManager.getScreenCTM(handle));\n  };\n  isPointInFill = (options: DOMPointInit): boolean => {\n    const handle = findNodeHandle(this.root as Component);\n    return RNSVGRenderableManager.isPointInFill(handle, options);\n  };\n  isPointInStroke = (options: DOMPointInit): boolean => {\n    const handle = findNodeHandle(this.root as Component);\n    return RNSVGRenderableManager.isPointInStroke(handle, options);\n  };\n  getTotalLength = (): number => {\n    const handle = findNodeHandle(this.root as Component);\n    return RNSVGRenderableManager.getTotalLength(handle);\n  };\n  getPointAtLength = (length: number): SVGPoint => {\n    const handle = findNodeHandle(this.root as Component);\n    return new SVGPoint(\n      RNSVGRenderableManager.getPointAtLength(handle, { length }),\n    );\n  };\n}\nShape.prototype.ownerSVGElement = ownerSVGElement;\n"],"mappings":"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"}