0214bc996b9c7403c214954f4151564d
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.saveAccount = exports.login = exports.checkUser = void 0;
var _adapter = _interopRequireDefault(require("../utils/adapter"));
var checkUser = function checkUser() {
  return _adapter.default.get('/me').catch(function (err) {
    var error;
    if (typeof err === 'string') {
      error.message = err;
    } else {
      error = err.response.data.message ? err.response.data : err.response.data.result;
    }
    return Promise.reject(error);
  });
};
exports.checkUser = checkUser;
var saveAccount = function saveAccount(user) {
  user.cards = [];
  return _adapter.default.post('/auth/signup', user).catch(function (err) {
    var error;
    if (typeof err === 'string') {
      error.message = err;
    } else {
      error = err.response.data.message ? err.response.data : err.response.data.result;
    }
    return Promise.reject(error);
  });
};
exports.saveAccount = saveAccount;
var login = function login(email, password) {
  var payload = {
    username: email,
    password: password
  };
  return _adapter.default.post('/auth/signin?scope=customer', payload).catch(function (err) {
    var error;
    if (typeof err === 'string') {
      error.message = err;
    } else {
      error = err.response.data.message ? err.response.data : err.response.data.result;
    }
    return Promise.reject(error);
  });
};
exports.login = login;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfYWRhcHRlciIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiY2hlY2tVc2VyIiwiYWRhcHRlciIsImdldCIsImNhdGNoIiwiZXJyIiwiZXJyb3IiLCJtZXNzYWdlIiwicmVzcG9uc2UiLCJkYXRhIiwicmVzdWx0IiwiUHJvbWlzZSIsInJlamVjdCIsImV4cG9ydHMiLCJzYXZlQWNjb3VudCIsInVzZXIiLCJjYXJkcyIsInBvc3QiLCJsb2dpbiIsImVtYWlsIiwicGFzc3dvcmQiLCJwYXlsb2FkIiwidXNlcm5hbWUiXSwic291cmNlcyI6WyJhdXRoLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYWRhcHRlciBmcm9tICcuLi91dGlscy9hZGFwdGVyJztcbmltcG9ydCB7SVVzZXJ9IGZyb20gJy4uL21vZGVscyc7XG5cbmV4cG9ydCBjb25zdCBjaGVja1VzZXIgPSAoKSA9PiB7XG4gIHJldHVybiBhZGFwdGVyLmdldCgnL21lJykuY2F0Y2goZXJyID0+IHtcbiAgICBsZXQgZXJyb3I6IGFueTtcbiAgICBpZiAodHlwZW9mIGVyciA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGVycm9yLm1lc3NhZ2UgPSBlcnI7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVycm9yID0gZXJyLnJlc3BvbnNlLmRhdGEubWVzc2FnZVxuICAgICAgICA/IGVyci5yZXNwb25zZS5kYXRhXG4gICAgICAgIDogZXJyLnJlc3BvbnNlLmRhdGEucmVzdWx0O1xuICAgIH1cbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBzYXZlQWNjb3VudCA9ICh1c2VyOiBJVXNlcikgPT4ge1xuICB1c2VyLmNhcmRzID0gW107XG4gIHJldHVybiBhZGFwdGVyLnBvc3QoJy9hdXRoL3NpZ251cCcsIHVzZXIpLmNhdGNoKGVyciA9PiB7XG4gICAgbGV0IGVycm9yOiBhbnk7XG4gICAgaWYgKHR5cGVvZiBlcnIgPT09ICdzdHJpbmcnKSB7XG4gICAgICBlcnJvci5tZXNzYWdlID0gZXJyO1xuICAgIH0gZWxzZSB7XG4gICAgICBlcnJvciA9IGVyci5yZXNwb25zZS5kYXRhLm1lc3NhZ2VcbiAgICAgICAgPyBlcnIucmVzcG9uc2UuZGF0YVxuICAgICAgICA6IGVyci5yZXNwb25zZS5kYXRhLnJlc3VsdDtcbiAgICB9XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgfSk7XG59O1xuXG5leHBvcnQgY29uc3QgbG9naW4gPSAoZW1haWw6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZykgPT4ge1xuICBjb25zdCBwYXlsb2FkID0ge1xuICAgIHVzZXJuYW1lOiBlbWFpbCxcbiAgICBwYXNzd29yZDogcGFzc3dvcmQsXG4gIH07XG4gIHJldHVybiBhZGFwdGVyLnBvc3QoJy9hdXRoL3NpZ25pbj9zY29wZT1jdXN0b21lcicsIHBheWxvYWQpLmNhdGNoKGVyciA9PiB7XG4gICAgbGV0IGVycm9yOiBhbnk7XG4gICAgaWYgKHR5cGVvZiBlcnIgPT09ICdzdHJpbmcnKSB7XG4gICAgICBlcnJvci5tZXNzYWdlID0gZXJyO1xuICAgIH0gZWxzZSB7XG4gICAgICBlcnJvciA9IGVyci5yZXNwb25zZS5kYXRhLm1lc3NhZ2VcbiAgICAgICAgPyBlcnIucmVzcG9uc2UuZGF0YVxuICAgICAgICA6IGVyci5yZXNwb25zZS5kYXRhLnJlc3VsdDtcbiAgICB9XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgfSk7XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLElBQUFBLFFBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUdPLElBQU1DLFNBQVMsR0FBRyxTQUFaQSxTQUFTQSxDQUFBLEVBQVM7RUFDN0IsT0FBT0MsZ0JBQU8sQ0FBQ0MsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDQyxLQUFLLENBQUMsVUFBQUMsR0FBRyxFQUFJO0lBQ3JDLElBQUlDLEtBQVU7SUFDZCxJQUFJLE9BQU9ELEdBQUcsS0FBSyxRQUFRLEVBQUU7TUFDM0JDLEtBQUssQ0FBQ0MsT0FBTyxHQUFHRixHQUFHO0lBQ3JCLENBQUMsTUFBTTtNQUNMQyxLQUFLLEdBQUdELEdBQUcsQ0FBQ0csUUFBUSxDQUFDQyxJQUFJLENBQUNGLE9BQU8sR0FDN0JGLEdBQUcsQ0FBQ0csUUFBUSxDQUFDQyxJQUFJLEdBQ2pCSixHQUFHLENBQUNHLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDQyxNQUFNO0lBQzlCO0lBQ0EsT0FBT0MsT0FBTyxDQUFDQyxNQUFNLENBQUNOLEtBQUssQ0FBQztFQUM5QixDQUFDLENBQUM7QUFDSixDQUFDO0FBQUNPLE9BQUEsQ0FBQVosU0FBQSxHQUFBQSxTQUFBO0FBRUssSUFBTWEsV0FBVyxHQUFHLFNBQWRBLFdBQVdBLENBQUlDLElBQVcsRUFBSztFQUMxQ0EsSUFBSSxDQUFDQyxLQUFLLEdBQUcsRUFBRTtFQUNmLE9BQU9kLGdCQUFPLENBQUNlLElBQUksQ0FBQyxjQUFjLEVBQUVGLElBQUksQ0FBQyxDQUFDWCxLQUFLLENBQUMsVUFBQUMsR0FBRyxFQUFJO0lBQ3JELElBQUlDLEtBQVU7SUFDZCxJQUFJLE9BQU9ELEdBQUcsS0FBSyxRQUFRLEVBQUU7TUFDM0JDLEtBQUssQ0FBQ0MsT0FBTyxHQUFHRixHQUFHO0lBQ3JCLENBQUMsTUFBTTtNQUNMQyxLQUFLLEdBQUdELEdBQUcsQ0FBQ0csUUFBUSxDQUFDQyxJQUFJLENBQUNGLE9BQU8sR0FDN0JGLEdBQUcsQ0FBQ0csUUFBUSxDQUFDQyxJQUFJLEdBQ2pCSixHQUFHLENBQUNHLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDQyxNQUFNO0lBQzlCO0lBQ0EsT0FBT0MsT0FBTyxDQUFDQyxNQUFNLENBQUNOLEtBQUssQ0FBQztFQUM5QixDQUFDLENBQUM7QUFDSixDQUFDO0FBQUNPLE9BQUEsQ0FBQUMsV0FBQSxHQUFBQSxXQUFBO0FBRUssSUFBTUksS0FBSyxHQUFHLFNBQVJBLEtBQUtBLENBQUlDLEtBQWEsRUFBRUMsUUFBZ0IsRUFBSztFQUN4RCxJQUFNQyxPQUFPLEdBQUc7SUFDZEMsUUFBUSxFQUFFSCxLQUFLO0lBQ2ZDLFFBQVEsRUFBRUE7RUFDWixDQUFDO0VBQ0QsT0FBT2xCLGdCQUFPLENBQUNlLElBQUksQ0FBQyw2QkFBNkIsRUFBRUksT0FBTyxDQUFDLENBQUNqQixLQUFLLENBQUMsVUFBQUMsR0FBRyxFQUFJO0lBQ3ZFLElBQUlDLEtBQVU7SUFDZCxJQUFJLE9BQU9ELEdBQUcsS0FBSyxRQUFRLEVBQUU7TUFDM0JDLEtBQUssQ0FBQ0MsT0FBTyxHQUFHRixHQUFHO0lBQ3JCLENBQUMsTUFBTTtNQUNMQyxLQUFLLEdBQUdELEdBQUcsQ0FBQ0csUUFBUSxDQUFDQyxJQUFJLENBQUNGLE9BQU8sR0FDN0JGLEdBQUcsQ0FBQ0csUUFBUSxDQUFDQyxJQUFJLEdBQ2pCSixHQUFHLENBQUNHLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDQyxNQUFNO0lBQzlCO0lBQ0EsT0FBT0MsT0FBTyxDQUFDQyxNQUFNLENBQUNOLEtBQUssQ0FBQztFQUM5QixDQUFDLENBQUM7QUFDSixDQUFDO0FBQUNPLE9BQUEsQ0FBQUssS0FBQSxHQUFBQSxLQUFBIn0=