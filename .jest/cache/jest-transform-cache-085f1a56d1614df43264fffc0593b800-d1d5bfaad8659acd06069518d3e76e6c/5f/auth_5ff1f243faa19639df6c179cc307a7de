30e98e435fa6e7be6253d6bdad4a6fc3
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.saveAccount = exports.login = exports.checkUser = void 0;
var _adapter = _interopRequireDefault(require("../utils/adapter"));
var checkUser = function checkUser() {
  return _adapter.default.get('/me').catch(function (err) {
    var error;
    if (typeof err === 'string') {
      error.message = err;
    } else {
      error = err.response.data.message ? err.response.data : err.response.data.result;
    }
    return Promise.reject(error);
  });
};
exports.checkUser = checkUser;
var saveAccount = function saveAccount(user) {
  return _adapter.default.post('/auth/signup', user).catch(function (err) {
    var error;
    if (typeof err === 'string') {
      error.message = err;
    } else {
      error = err.response.data.message ? err.response.data : err.response.data.result;
    }
    return Promise.reject(error);
  });
};
exports.saveAccount = saveAccount;
var login = function login(email, password) {
  var payload = {
    username: email,
    password: password
  };
  return _adapter.default.post('/auth/signin?scope=customer', payload).catch(function (err) {
    var error;
    if (typeof err === 'string') {
      error.message = err;
    } else {
      error = err.response.data.message ? err.response.data : err.response.data.result;
    }
    return Promise.reject(error);
  });
};
exports.login = login;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfYWRhcHRlciIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiY2hlY2tVc2VyIiwiYWRhcHRlciIsImdldCIsImNhdGNoIiwiZXJyIiwiZXJyb3IiLCJtZXNzYWdlIiwicmVzcG9uc2UiLCJkYXRhIiwicmVzdWx0IiwiUHJvbWlzZSIsInJlamVjdCIsImV4cG9ydHMiLCJzYXZlQWNjb3VudCIsInVzZXIiLCJwb3N0IiwibG9naW4iLCJlbWFpbCIsInBhc3N3b3JkIiwicGF5bG9hZCIsInVzZXJuYW1lIl0sInNvdXJjZXMiOlsiYXV0aC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFkYXB0ZXIgZnJvbSAnLi4vdXRpbHMvYWRhcHRlcic7XG5pbXBvcnQge0lVc2VyfSBmcm9tICcuLi9tb2RlbHMnO1xuXG5leHBvcnQgY29uc3QgY2hlY2tVc2VyID0gKCkgPT4ge1xuICByZXR1cm4gYWRhcHRlci5nZXQoJy9tZScpLmNhdGNoKGVyciA9PiB7XG4gICAgbGV0IGVycm9yOiBhbnk7XG4gICAgaWYgKHR5cGVvZiBlcnIgPT09ICdzdHJpbmcnKSB7XG4gICAgICBlcnJvci5tZXNzYWdlID0gZXJyO1xuICAgIH0gZWxzZSB7XG4gICAgICBlcnJvciA9IGVyci5yZXNwb25zZS5kYXRhLm1lc3NhZ2VcbiAgICAgICAgPyBlcnIucmVzcG9uc2UuZGF0YVxuICAgICAgICA6IGVyci5yZXNwb25zZS5kYXRhLnJlc3VsdDtcbiAgICB9XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgfSk7XG59O1xuXG5leHBvcnQgY29uc3Qgc2F2ZUFjY291bnQgPSAodXNlcjogSVVzZXIpID0+IHtcbiAgcmV0dXJuIGFkYXB0ZXIucG9zdCgnL2F1dGgvc2lnbnVwJywgdXNlcikuY2F0Y2goZXJyID0+IHtcbiAgICBsZXQgZXJyb3I6IGFueTtcbiAgICBpZiAodHlwZW9mIGVyciA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGVycm9yLm1lc3NhZ2UgPSBlcnI7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVycm9yID0gZXJyLnJlc3BvbnNlLmRhdGEubWVzc2FnZVxuICAgICAgICA/IGVyci5yZXNwb25zZS5kYXRhXG4gICAgICAgIDogZXJyLnJlc3BvbnNlLmRhdGEucmVzdWx0O1xuICAgIH1cbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBsb2dpbiA9IChlbWFpbDogc3RyaW5nLCBwYXNzd29yZDogc3RyaW5nKSA9PiB7XG4gIGNvbnN0IHBheWxvYWQgPSB7XG4gICAgdXNlcm5hbWU6IGVtYWlsLFxuICAgIHBhc3N3b3JkOiBwYXNzd29yZCxcbiAgfTtcbiAgcmV0dXJuIGFkYXB0ZXIucG9zdCgnL2F1dGgvc2lnbmluP3Njb3BlPWN1c3RvbWVyJywgcGF5bG9hZCkuY2F0Y2goZXJyID0+IHtcbiAgICBsZXQgZXJyb3I6IGFueTtcbiAgICBpZiAodHlwZW9mIGVyciA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGVycm9yLm1lc3NhZ2UgPSBlcnI7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVycm9yID0gZXJyLnJlc3BvbnNlLmRhdGEubWVzc2FnZVxuICAgICAgICA/IGVyci5yZXNwb25zZS5kYXRhXG4gICAgICAgIDogZXJyLnJlc3BvbnNlLmRhdGEucmVzdWx0O1xuICAgIH1cbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICB9KTtcbn07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFBQSxRQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFHTyxJQUFNQyxTQUFTLEdBQUcsU0FBWkEsU0FBU0EsQ0FBQSxFQUFTO0VBQzdCLE9BQU9DLGdCQUFPLENBQUNDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQ0MsS0FBSyxDQUFDLFVBQUFDLEdBQUcsRUFBSTtJQUNyQyxJQUFJQyxLQUFVO0lBQ2QsSUFBSSxPQUFPRCxHQUFHLEtBQUssUUFBUSxFQUFFO01BQzNCQyxLQUFLLENBQUNDLE9BQU8sR0FBR0YsR0FBRztJQUNyQixDQUFDLE1BQU07TUFDTEMsS0FBSyxHQUFHRCxHQUFHLENBQUNHLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDRixPQUFPLEdBQzdCRixHQUFHLENBQUNHLFFBQVEsQ0FBQ0MsSUFBSSxHQUNqQkosR0FBRyxDQUFDRyxRQUFRLENBQUNDLElBQUksQ0FBQ0MsTUFBTTtJQUM5QjtJQUNBLE9BQU9DLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDTixLQUFLLENBQUM7RUFDOUIsQ0FBQyxDQUFDO0FBQ0osQ0FBQztBQUFDTyxPQUFBLENBQUFaLFNBQUEsR0FBQUEsU0FBQTtBQUVLLElBQU1hLFdBQVcsR0FBRyxTQUFkQSxXQUFXQSxDQUFJQyxJQUFXLEVBQUs7RUFDMUMsT0FBT2IsZ0JBQU8sQ0FBQ2MsSUFBSSxDQUFDLGNBQWMsRUFBRUQsSUFBSSxDQUFDLENBQUNYLEtBQUssQ0FBQyxVQUFBQyxHQUFHLEVBQUk7SUFDckQsSUFBSUMsS0FBVTtJQUNkLElBQUksT0FBT0QsR0FBRyxLQUFLLFFBQVEsRUFBRTtNQUMzQkMsS0FBSyxDQUFDQyxPQUFPLEdBQUdGLEdBQUc7SUFDckIsQ0FBQyxNQUFNO01BQ0xDLEtBQUssR0FBR0QsR0FBRyxDQUFDRyxRQUFRLENBQUNDLElBQUksQ0FBQ0YsT0FBTyxHQUM3QkYsR0FBRyxDQUFDRyxRQUFRLENBQUNDLElBQUksR0FDakJKLEdBQUcsQ0FBQ0csUUFBUSxDQUFDQyxJQUFJLENBQUNDLE1BQU07SUFDOUI7SUFDQSxPQUFPQyxPQUFPLENBQUNDLE1BQU0sQ0FBQ04sS0FBSyxDQUFDO0VBQzlCLENBQUMsQ0FBQztBQUNKLENBQUM7QUFBQ08sT0FBQSxDQUFBQyxXQUFBLEdBQUFBLFdBQUE7QUFFSyxJQUFNRyxLQUFLLEdBQUcsU0FBUkEsS0FBS0EsQ0FBSUMsS0FBYSxFQUFFQyxRQUFnQixFQUFLO0VBQ3hELElBQU1DLE9BQU8sR0FBRztJQUNkQyxRQUFRLEVBQUVILEtBQUs7SUFDZkMsUUFBUSxFQUFFQTtFQUNaLENBQUM7RUFDRCxPQUFPakIsZ0JBQU8sQ0FBQ2MsSUFBSSxDQUFDLDZCQUE2QixFQUFFSSxPQUFPLENBQUMsQ0FBQ2hCLEtBQUssQ0FBQyxVQUFBQyxHQUFHLEVBQUk7SUFDdkUsSUFBSUMsS0FBVTtJQUNkLElBQUksT0FBT0QsR0FBRyxLQUFLLFFBQVEsRUFBRTtNQUMzQkMsS0FBSyxDQUFDQyxPQUFPLEdBQUdGLEdBQUc7SUFDckIsQ0FBQyxNQUFNO01BQ0xDLEtBQUssR0FBR0QsR0FBRyxDQUFDRyxRQUFRLENBQUNDLElBQUksQ0FBQ0YsT0FBTyxHQUM3QkYsR0FBRyxDQUFDRyxRQUFRLENBQUNDLElBQUksR0FDakJKLEdBQUcsQ0FBQ0csUUFBUSxDQUFDQyxJQUFJLENBQUNDLE1BQU07SUFDOUI7SUFDQSxPQUFPQyxPQUFPLENBQUNDLE1BQU0sQ0FBQ04sS0FBSyxDQUFDO0VBQzlCLENBQUMsQ0FBQztBQUNKLENBQUM7QUFBQ08sT0FBQSxDQUFBSSxLQUFBLEdBQUFBLEtBQUEifQ==