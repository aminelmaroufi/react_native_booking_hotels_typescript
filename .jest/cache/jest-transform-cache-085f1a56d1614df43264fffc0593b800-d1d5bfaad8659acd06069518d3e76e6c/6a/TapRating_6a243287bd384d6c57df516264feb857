642b0464e470143ae71d9962d616428c
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _lodash = _interopRequireDefault(require("lodash"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _Star = _interopRequireDefault(require("./components/Star"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var TapRating = function TapRating(props) {
  var _useState = (0, _react.useState)(props.defaultRating),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    position = _useState2[0],
    setPosition = _useState2[1];
  (0, _react.useEffect)(function () {
    var defaultRating = props.defaultRating;
    if (defaultRating === null || defaultRating === undefined) {
      setPosition(3);
    } else {
      setPosition(defaultRating);
    }
  }, [props.defaultRating]);
  var renderStars = function renderStars(rating_array) {
    return _lodash.default.map(rating_array, function (star) {
      return star;
    });
  };
  var _starSelectedInPosition = function starSelectedInPosition(position) {
    var onFinishRating = props.onFinishRating;
    if (typeof onFinishRating === "function") {
      onFinishRating(position);
    }
    setPosition(position);
  };
  var count = props.count,
    reviews = props.reviews,
    showRating = props.showRating,
    reviewColor = props.reviewColor,
    reviewSize = props.reviewSize;
  var rating_array = [];
  var starContainerStyle = [styles.starContainer];
  if (props.starContainerStyle) {
    starContainerStyle.push(props.starContainerStyle);
  }
  _lodash.default.times(count, function (index) {
    rating_array.push((0, _jsxRuntime.jsx)(_Star.default, (0, _extends2.default)({
      position: index + 1,
      starSelectedInPosition: function starSelectedInPosition(value) {
        _starSelectedInPosition(value);
      },
      fill: position >= index + 1
    }, props), index));
  });
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.ratingContainer,
    children: [showRating && (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: [styles.reviewText, {
        fontSize: reviewSize,
        color: reviewColor
      }],
      children: reviews[position - 1]
    }), (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: starContainerStyle,
      children: renderStars(rating_array)
    })]
  });
};
TapRating.defaultProps = {
  defaultRating: 3,
  reviews: ["Terrible", "Bad", "Okay", "Good", "Great"],
  count: 5,
  showRating: true,
  reviewColor: "rgba(230, 196, 46, 1)",
  reviewSize: 25
};
var styles = _reactNative.StyleSheet.create({
  ratingContainer: {
    backgroundColor: "transparent",
    flexDirection: "column",
    alignItems: "center",
    justifyContent: "center"
  },
  reviewText: {
    fontWeight: "bold",
    margin: 10
  },
  starContainer: {
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "center"
  }
});
var _default = TapRating;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,