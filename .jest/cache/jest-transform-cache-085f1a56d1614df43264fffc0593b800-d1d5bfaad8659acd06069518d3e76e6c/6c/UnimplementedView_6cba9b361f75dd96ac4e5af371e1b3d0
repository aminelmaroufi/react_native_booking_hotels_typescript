6ee3283a469aead07f386057d8bcd48e
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var React = _interopRequireWildcard(require("react"));
var _StyleSheet = _interopRequireDefault(require("../../StyleSheet/StyleSheet"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var UnimplementedView = function (_React$Component) {
  (0, _inherits2.default)(UnimplementedView, _React$Component);
  var _super = _createSuper(UnimplementedView);
  function UnimplementedView() {
    (0, _classCallCheck2.default)(this, UnimplementedView);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(UnimplementedView, [{
    key: "render",
    value: function render() {
      var View = require('../View/View');
      return (0, _jsxRuntime.jsx)(View, {
        style: [styles.unimplementedView, this.props.style],
        children: this.props.children
      });
    }
  }]);
  return UnimplementedView;
}(React.Component);
var styles = _StyleSheet.default.create({
  unimplementedView: __DEV__ ? {
    alignSelf: 'flex-start',
    borderColor: 'red',
    borderWidth: 1
  } : {}
});
module.exports = UnimplementedView;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9jbGFzc0NhbGxDaGVjazIiLCJfY3JlYXRlQ2xhc3MyIiwiX2luaGVyaXRzMiIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMiIsIl9nZXRQcm90b3R5cGVPZjIiLCJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX1N0eWxlU2hlZXQiLCJfanN4UnVudGltZSIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJfY3JlYXRlU3VwZXIiLCJEZXJpdmVkIiwiaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIl9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJfY3JlYXRlU3VwZXJJbnRlcm5hbCIsIlN1cGVyIiwicmVzdWx0IiwiTmV3VGFyZ2V0IiwiY29uc3RydWN0b3IiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiYXJndW1lbnRzIiwiYXBwbHkiLCJzaGFtIiwiUHJveHkiLCJCb29sZWFuIiwidmFsdWVPZiIsImUiLCJVbmltcGxlbWVudGVkVmlldyIsIl9SZWFjdCRDb21wb25lbnQiLCJfc3VwZXIiLCJ2YWx1ZSIsInJlbmRlciIsIlZpZXciLCJqc3giLCJzdHlsZSIsInN0eWxlcyIsInVuaW1wbGVtZW50ZWRWaWV3IiwicHJvcHMiLCJjaGlsZHJlbiIsIkNvbXBvbmVudCIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJfX0RFVl9fIiwiYWxpZ25TZWxmIiwiYm9yZGVyQ29sb3IiLCJib3JkZXJXaWR0aCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJVbmltcGxlbWVudGVkVmlldy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93IHN0cmljdC1sb2NhbFxuICogQGZvcm1hdFxuICovXG5cbid1c2Ugc3RyaWN0JztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBTdHlsZVNoZWV0IGZyb20gJy4uLy4uL1N0eWxlU2hlZXQvU3R5bGVTaGVldCc7XG5cbi8qKlxuICogQ29tbW9uIGltcGxlbWVudGF0aW9uIGZvciBhIHNpbXBsZSBzdHViYmVkIHZpZXcuIFNpbXBseSBhcHBsaWVzIHRoZSB2aWV3J3Mgc3R5bGVzIHRvIHRoZSBpbm5lclxuICogVmlldyBjb21wb25lbnQgYW5kIHJlbmRlcnMgaXRzIGNoaWxkcmVuLlxuICovXG5jbGFzcyBVbmltcGxlbWVudGVkVmlldyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDwkRmxvd0ZpeE1lUHJvcHM+IHtcbiAgcmVuZGVyKCk6IFJlYWN0Lk5vZGUge1xuICAgIC8vIFdvcmthcm91bmQgcmVxdWlyZSBjeWNsZSBmcm9tIHJlcXVpcmVOYXRpdmVDb21wb25lbnRcbiAgICBjb25zdCBWaWV3ID0gcmVxdWlyZSgnLi4vVmlldy9WaWV3Jyk7XG4gICAgcmV0dXJuIChcbiAgICAgIDxWaWV3IHN0eWxlPXtbc3R5bGVzLnVuaW1wbGVtZW50ZWRWaWV3LCB0aGlzLnByb3BzLnN0eWxlXX0+XG4gICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgPC9WaWV3PlxuICAgICk7XG4gIH1cbn1cblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICB1bmltcGxlbWVudGVkVmlldzogX19ERVZfX1xuICAgID8ge1xuICAgICAgICBhbGlnblNlbGY6ICdmbGV4LXN0YXJ0JyxcbiAgICAgICAgYm9yZGVyQ29sb3I6ICdyZWQnLFxuICAgICAgICBib3JkZXJXaWR0aDogMSxcbiAgICAgIH1cbiAgICA6IHt9LFxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gVW5pbXBsZW1lbnRlZFZpZXc7XG4iXSwibWFwcGluZ3MiOiJBQVVBLFlBQVk7O0FBQUMsSUFBQUEsc0JBQUEsR0FBQUMsT0FBQTtBQUFBLElBQUFDLGdCQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFBQSxJQUFBRSxhQUFBLEdBQUFILHNCQUFBLENBQUFDLE9BQUE7QUFBQSxJQUFBRyxVQUFBLEdBQUFKLHNCQUFBLENBQUFDLE9BQUE7QUFBQSxJQUFBSSwyQkFBQSxHQUFBTCxzQkFBQSxDQUFBQyxPQUFBO0FBQUEsSUFBQUssZ0JBQUEsR0FBQU4sc0JBQUEsQ0FBQUMsT0FBQTtBQUNiLElBQUFNLEtBQUEsR0FBQUMsdUJBQUEsQ0FBQVAsT0FBQTtBQUNBLElBQUFRLFdBQUEsR0FBQVQsc0JBQUEsQ0FBQUMsT0FBQTtBQUFxRCxJQUFBUyxXQUFBLEdBQUFULE9BQUE7QUFBQSxTQUFBVSx5QkFBQUMsV0FBQSxlQUFBQyxPQUFBLGtDQUFBQyxpQkFBQSxPQUFBRCxPQUFBLFFBQUFFLGdCQUFBLE9BQUFGLE9BQUEsWUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLFdBQUEsV0FBQUEsV0FBQSxHQUFBRyxnQkFBQSxHQUFBRCxpQkFBQSxLQUFBRixXQUFBO0FBQUEsU0FBQUosd0JBQUFRLEdBQUEsRUFBQUosV0FBQSxTQUFBQSxXQUFBLElBQUFJLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLFdBQUFELEdBQUEsUUFBQUEsR0FBQSxvQkFB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