{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_components","_reactNativeElements","_FontAwesome","_interopRequireDefault","_reactRedux","_actions","_actionTypes","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Login","props","passwordRef","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray2","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","selectedField","setSelectedField","_useState7","_useState8","secureTextEntry","setSecureTextEntry","_useState9","_useState10","isValid","setIsValid","_useState11","_useState12","emailIsValid","setEmailIsValid","_useState13","_useState14","emailValueIsValid","setEmailValueIsValid","_useState15","_useState16","pwdIsValid","setPwdIsValid","renderPasswordIcon","createElement","TouchableWithoutFeedback","onPress","toggleSecureEntry","name","size","renderValidInputIcon","color","renderInvalidInputIcon","updateFields","field","value","validateFields","emailValid","test","useEffect","login","loginRequest","navigation","validateForm","Layout","style","styles","container","Image","source","logo","View","form","inputContainer","Input","autoFocus","label","placeholder","placeholderTextColor","keyboardType","status","accessoryRight","onChangeText","text","onSubmitEditing","focus","errorContainer","errorIcon","Text","errorStyle","LoginFormMessages","emailNotValid","ref","buttonContainer","Button","title","containerStyle","width","buttonStyle","button","titleStyle","textButton","type","disabled","StyleSheet","create","flex","alignContent","alignItems","backgroundColor","paddingTop","height","marginBottom","row","flexDirection","padding","textInput","fontSize","marginTop","borderRadius","fontWeight","textAlign","paddingLeft","marginLeft","_default","exports"],"sources":["Login.tsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport {\n  StyleSheet,\n  TouchableWithoutFeedback,\n  Text,\n  View,\n  Image,\n} from 'react-native';\nimport {Layout, Input} from '@ui-kitten/components';\nimport {Button} from 'react-native-elements';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport {NativeStackNavigationProp} from '@react-navigation/native-stack';\nimport {useDispatch} from 'react-redux';\nimport {RootState} from '../redux/reducers';\nimport {loginRequest} from '../redux/actions';\nimport {LoginFormMessages} from '../utils/actionTypes';\n\ntype Props = {\n  navigation: NativeStackNavigationProp<any>;\n};\n\nconst Login: React.FC<Props> = props => {\n  let passwordRef: any = null;\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [selectedField, setSelectedField] = useState('');\n  const [secureTextEntry, setSecureTextEntry] = useState(true);\n  const [isValid, setIsValid] = useState(null);\n  const [emailIsValid, setEmailIsValid] = useState(null);\n  const [emailValueIsValid, setEmailValueIsValid] = useState(null);\n  const [pwdIsValid, setPwdIsValid] = useState(null);\n\n  const renderPasswordIcon = () => (\n    <TouchableWithoutFeedback onPress={toggleSecureEntry}>\n      <Icon name={secureTextEntry ? 'eye-slash' : 'eye'} size={20} />\n    </TouchableWithoutFeedback>\n  );\n\n  const renderValidInputIcon = () => (\n    <TouchableWithoutFeedback onPress={toggleSecureEntry}>\n      <Icon name={'check-circle'} size={20} color={'green'} />\n    </TouchableWithoutFeedback>\n  );\n\n  const renderInvalidInputIcon = () => (\n    <TouchableWithoutFeedback onPress={toggleSecureEntry}>\n      <Icon name={'exclamation-circle'} size={20} color={'#ff375d'} />\n    </TouchableWithoutFeedback>\n  );\n\n  const toggleSecureEntry = () => {\n    setSecureTextEntry(!secureTextEntry);\n  };\n\n  const updateFields = (field: string, value: string) => {\n    if (field === 'email') {\n      setEmail(value);\n    } else {\n      setPassword(value);\n    }\n    setSelectedField(field);\n  };\n\n  const validateFields = () => {\n    switch (selectedField) {\n      case 'email': {\n        const emailValid = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(\n          email,\n        );\n        if (email) {\n          setEmailIsValid(true);\n\n          if (email && !emailValid) {\n            setEmailValueIsValid(false);\n          } else if (emailValid) {\n            setEmailValueIsValid(true);\n          }\n        } else {\n          setEmailValueIsValid(null);\n          setEmailIsValid(false);\n        }\n        break;\n      }\n      case 'password': {\n        if (password) {\n          setPwdIsValid(true);\n        } else {\n          setPwdIsValid(false);\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    validateFields();\n  }, [email, password]);\n\n  const login = () => {\n    dispatch(loginRequest(email, password, props.navigation));\n  };\n\n  useEffect(() => {\n    const validateForm = () => {\n      if (pwdIsValid && emailIsValid && emailValueIsValid) {\n        setIsValid(true);\n      } else {\n        setIsValid(false);\n      }\n    };\n    validateForm();\n  }, [emailIsValid, emailValueIsValid, pwdIsValid]);\n\n  return (\n    <Layout style={styles.container}>\n      <Image source={require('../assets/logo.png')} style={styles.logo} />\n      <View style={styles.form}>\n        <View style={styles.inputContainer}>\n          <Input\n            autoFocus\n            label=\"Email Address\"\n            placeholder=\"Place your email address\"\n            placeholderTextColor=\"#000\"\n            keyboardType=\"email-address\"\n            status={\n              emailIsValid && emailValueIsValid\n                ? 'success'\n                : emailIsValid === false || emailValueIsValid === false\n                ? 'danger'\n                : 'basic'\n            }\n            accessoryRight={\n              emailIsValid && emailValueIsValid\n                ? renderValidInputIcon\n                : emailIsValid === false || emailValueIsValid === false\n                ? renderInvalidInputIcon\n                : null\n            }\n            value={email}\n            onChangeText={text => updateFields('email', text)}\n            onSubmitEditing={() => passwordRef.focus()}\n          />\n          {emailIsValid === false && (\n            <View style={styles.errorContainer}>\n              <Icon\n                name=\"exclamation-triangle\"\n                color={'#ff375d'}\n                size={8}\n                style={styles.errorIcon}\n              />\n              <Text style={styles.errorStyle}>{LoginFormMessages.email}</Text>\n            </View>\n          )}\n          {emailValueIsValid === false && (\n            <View style={styles.errorContainer}>\n              <Icon\n                name=\"exclamation-triangle\"\n                color={'#ff375d'}\n                size={8}\n                style={styles.errorIcon}\n              />\n              <Text style={styles.errorStyle}>\n                {LoginFormMessages.emailNotValid}\n              </Text>\n            </View>\n          )}\n        </View>\n        <View style={styles.inputContainer}>\n          <Input\n            ref={ref => (passwordRef = ref)}\n            label=\"Password\"\n            placeholder=\"Place your password\"\n            placeholderTextColor=\"#000\"\n            secureTextEntry={secureTextEntry}\n            accessoryRight={renderPasswordIcon}\n            value={password}\n            status={\n              pwdIsValid ? 'success' : pwdIsValid === false ? 'danger' : 'basic'\n            }\n            onChangeText={text => updateFields('password', text)}\n            onSubmitEditing={() => login()}\n          />\n          {pwdIsValid === false && (\n            <View style={styles.errorContainer}>\n              <Icon\n                name=\"exclamation-triangle\"\n                color={'#ff375d'}\n                size={8}\n                style={styles.errorIcon}\n              />\n              <Text style={styles.errorStyle}>\n                {LoginFormMessages.password}\n              </Text>\n            </View>\n          )}\n        </View>\n\n        <View style={styles.buttonContainer}>\n          <Button\n            title={'Login'}\n            containerStyle={{width: 'auto'}}\n            buttonStyle={styles.button}\n            titleStyle={styles.textButton}\n            type=\"solid\"\n            disabled={!isValid}\n            onPress={() => login()}\n          />\n        </View>\n      </View>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    // padding: 10,\n    paddingTop: 40,\n  },\n  logo: {\n    height: 200,\n    width: 400,\n    marginBottom: 100,\n  },\n  form: {\n    flex: 1,\n  },\n  row: {\n    flexDirection: 'row',\n    padding: 10,\n  },\n  inputContainer: {\n    width: 300,\n    marginBottom: 25,\n  },\n  textInput: {\n    fontSize: 16,\n  },\n  buttonContainer: {marginTop: 10},\n  button: {\n    backgroundColor: '#2756a1',\n    borderRadius: 10,\n    width: '100%',\n    height: 50,\n  },\n  textButton: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600',\n    textAlign: 'center',\n  },\n  errorContainer: {\n    flexDirection: 'row',\n    marginTop: 5,\n    paddingLeft: 10,\n  },\n  errorIcon: {\n    paddingTop: 4,\n  },\n  errorStyle: {\n    fontSize: 12,\n    marginLeft: 3,\n    color: '#ff375d',\n  },\n});\n\nexport default Login;\n"],"mappings":"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"}