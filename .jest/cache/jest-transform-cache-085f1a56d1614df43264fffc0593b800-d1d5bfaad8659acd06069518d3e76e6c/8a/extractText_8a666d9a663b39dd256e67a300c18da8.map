{"version":3,"names":["_react","_interopRequireWildcard","require","_extractLengthList","_interopRequireDefault","_util","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","fontRegExp","fontFamilyPrefix","fontFamilySuffix","commaReg","cachedFontObjectsFromString","extractSingleFontFamily","fontFamilyString","split","replace","parseFontString","font","match","exec","isBold","isItalic","fontSize","fontWeight","fontStyle","fontFamily","extractFont","props","fontData","fontVariant","fontStretch","textAnchor","textDecoration","letterSpacing","wordSpacing","kerning","fontFeatureSettings","fontVariantLigatures","fontVariationSettings","ownedFont","pickNotNil","baseFont","_extends2","TSpan","setTSpan","TSpanImplementation","getChild","child","createElement","__self","__source","fileName","lineNumber","columnNumber","String","extractText","container","x","y","dx","dy","rotate","children","inlineSize","baselineShift","verticalAlign","alignmentBaseline","textChildren","Children","count","Array","isArray","map","content"],"sources":["extractText.tsx"],"sourcesContent":["import React, { Children, ComponentType } from 'react';\nimport extractLengthList from './extractLengthList';\nimport { pickNotNil } from '../util';\nimport { NumberArray, NumberProp } from './types';\n\nconst fontRegExp =\n  /^\\s*((?:(?:normal|bold|italic)\\s+)*)(?:(\\d+(?:\\.\\d+)?(?:%|px|em|pt|pc|mm|cm|in]))*(?:\\s*\\/.*?)?\\s+)?\\s*\"?([^\"]*)/i;\nconst fontFamilyPrefix = /^[\\s\"']*/;\nconst fontFamilySuffix = /[\\s\"']*$/;\nconst commaReg = /\\s*,\\s*/g;\n\nconst cachedFontObjectsFromString: {\n  [font: string]: {\n    fontStyle: string;\n    fontSize: NumberProp;\n    fontWeight: NumberProp;\n    fontFamily: string | null;\n  } | null;\n} = {};\n\nfunction extractSingleFontFamily(fontFamilyString?: string) {\n  // SVG on the web allows for multiple font-families to be specified.\n  // For compatibility, we extract the first font-family, hoping\n  // we'll get a match.\n  return fontFamilyString\n    ? fontFamilyString\n        .split(commaReg)[0]\n        .replace(fontFamilyPrefix, '')\n        .replace(fontFamilySuffix, '')\n    : null;\n}\n\nfunction parseFontString(font: string) {\n  if (cachedFontObjectsFromString.hasOwnProperty(font)) {\n    return cachedFontObjectsFromString[font];\n  }\n  const match = fontRegExp.exec(font);\n  if (!match) {\n    cachedFontObjectsFromString[font] = null;\n    return null;\n  }\n  const isBold = /bold/.exec(match[1]);\n  const isItalic = /italic/.exec(match[1]);\n  cachedFontObjectsFromString[font] = {\n    fontSize: match[2] || 12,\n    fontWeight: isBold ? 'bold' : 'normal',\n    fontStyle: isItalic ? 'italic' : 'normal',\n    fontFamily: extractSingleFontFamily(match[3]),\n  };\n  return cachedFontObjectsFromString[font];\n}\n\ninterface fontProps {\n  fontData?: unknown;\n  fontStyle?: string;\n  fontVariant?: string;\n  fontWeight?: NumberProp;\n  fontStretch?: string;\n  fontSize?: NumberProp;\n  fontFamily?: string;\n  textAnchor?: string;\n  textDecoration?: string;\n  letterSpacing?: NumberProp;\n  wordSpacing?: NumberProp;\n  kerning?: NumberProp;\n  fontFeatureSettings?: string;\n  fontVariantLigatures?: string;\n  fontVariationSettings?: string;\n  font?: string;\n}\n\nexport function extractFont(props: fontProps) {\n  const {\n    fontData,\n    fontStyle,\n    fontVariant,\n    fontWeight,\n    fontStretch,\n    fontSize,\n    fontFamily,\n    textAnchor,\n    textDecoration,\n    letterSpacing,\n    wordSpacing,\n    kerning,\n    fontFeatureSettings,\n    fontVariantLigatures,\n    fontVariationSettings,\n    font,\n  } = props;\n\n  const ownedFont = pickNotNil({\n    fontData,\n    fontStyle,\n    fontVariant,\n    fontWeight,\n    fontStretch,\n    fontSize,\n    fontFamily: extractSingleFontFamily(fontFamily),\n    textAnchor,\n    textDecoration,\n    letterSpacing,\n    wordSpacing,\n    kerning,\n    fontFeatureSettings,\n    fontVariantLigatures,\n    fontVariationSettings,\n  });\n\n  const baseFont = typeof font === 'string' ? parseFontString(font) : font;\n\n  return { ...baseFont, ...ownedFont };\n}\n\nlet TSpan: ComponentType<React.PropsWithChildren<{}>>;\n\nexport function setTSpan(TSpanImplementation: ComponentType) {\n  TSpan = TSpanImplementation;\n}\n\nexport type TextChild =\n  | (undefined | string | number | ComponentType | React.ReactElement)\n  | TextChild[];\n\nfunction getChild(child: TextChild) {\n  if (typeof child === 'string' || typeof child === 'number') {\n    return <TSpan>{String(child)}</TSpan>;\n  } else {\n    return child;\n  }\n}\n\nexport type TextProps = {\n  x?: NumberArray;\n  y?: NumberArray;\n  dx?: NumberArray;\n  dy?: NumberArray;\n  rotate?: NumberArray;\n  children?: TextChild;\n  inlineSize?: NumberProp;\n  baselineShift?: NumberProp;\n  verticalAlign?: NumberProp;\n  alignmentBaseline?: string;\n} & fontProps;\n\nexport default function extractText(props: TextProps, container: boolean) {\n  const {\n    x,\n    y,\n    dx,\n    dy,\n    rotate,\n    children,\n    inlineSize,\n    baselineShift,\n    verticalAlign,\n    alignmentBaseline,\n  } = props;\n\n  const textChildren =\n    typeof children === 'string' || typeof children === 'number' ? (\n      container ? (\n        <TSpan>{String(children)}</TSpan>\n      ) : null\n    ) : Children.count(children) > 1 || Array.isArray(children) ? (\n      Children.map(children, getChild)\n    ) : (\n      children\n    );\n\n  return {\n    content: textChildren === null ? String(children) : null,\n    children: textChildren,\n    inlineSize,\n    baselineShift,\n    verticalAlign,\n    alignmentBaseline,\n    font: extractFont(props),\n    x: extractLengthList(x),\n    y: extractLengthList(y),\n    dx: extractLengthList(dx),\n    dy: extractLengthList(dy),\n    rotate: extractLengthList(rotate),\n  };\n}\n"],"mappings":"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"}