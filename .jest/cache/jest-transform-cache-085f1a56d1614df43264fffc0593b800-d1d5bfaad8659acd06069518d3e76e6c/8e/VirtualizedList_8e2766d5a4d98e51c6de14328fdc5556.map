{"version":3,"names":["_VirtualizeUtils","require","React","_interopRequireWildcard","_VirtualizedListContext","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","next","bind","Array","isArray","_unsupportedIterableToArray","length","i","done","value","TypeError","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","from","test","arr","len","arr2","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","valueOf","e","Batchinator","FillRateHelper","ReactNative","RefreshControl","ScrollView","StyleSheet","View","ViewabilityHelper","flattenStyle","infoLog","invariant","_usedIndexForKey","_keylessItemComponentName","horizontalOrDefault","horizontal","initialNumToRenderOrDefault","initialNumToRender","maxToRenderPerBatchOrDefault","maxToRenderPerBatch","onEndReachedThresholdOrDefault","onEndReachedThreshold","scrollEventThrottleOrDefault","scrollEventThrottle","windowSizeOrDefault","windowSize","VirtualizedList","_React$PureComponent","_inherits2","_super","props","_this$props$updateCel","_this","_classCallCheck2","_getScrollMetrics","_scrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","context","getOutermostParentListRef","_assertThisInitialized2","_getNestedChildState","existingChildData","_nestedChildLists","state","_registerAsNestedChild","childList","childListsInCell","_cellKeysToChildListKeys","cellKey","Set","add","ref","console","error","describeNestedLists","_extends2","_hasInteracted","recordInteraction","_unregisterAsNestedChild","_onUpdateSeparators","keys","newProps","forEach","_cellRefs","updateSeparatorProps","_getSpacerKey","isVertical","_averageCellLength","Map","_frames","_footerLength","_hasDoneInitialScroll","_hasMore","_hasWarned","_headerLength","_hiPriInProgress","_highestMeasuredFrameIndex","_indicesToKeys","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","offset","timestamp","velocity","visibleLength","_scrollRef","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_viewabilityTuples","_captureScrollRef","_defaultRenderScrollComponent","onRefresh","createElement","_props$refreshing","refreshing","JSON","stringify","refreshControl","progressViewOffset","_onCellUnmount","curr","inLayout","_onLayout","measureLayoutRelativeToContainingList","_selectLength","nativeEvent","layout","onLayout","_scheduleCellsToRenderUpdate","_maybeCallOnEndReached","_onLayoutEmpty","_onLayoutFooter","_triggerRemeasureForChildListsInCell","_getFooterCellKey","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","contentOffset","scrollToIndex","animated","index","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_selectOffset","_this$_convertParentS","Math","max","perf","prevDt","_updateViewableItems","data","_fillRateHelper","activate","_computeBlankness","_onScrollBeginDrag","tuple","viewabilityHelper","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollBegin","onMomentumScrollBegin","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","_this$props","getItemCount","_onEndReachedThreshold","isVirtualizationDisabled","_isVirtualizationDisabled","setState","newState","_this$_scrollMetrics","computeWindowedRenderLimits","_getFrameMetricsApprox","distanceFromEnd","renderAhead","first","last","min","size","newFirst","newLast","ii","cellKeyForIndex","childListKeys","someChildHasMore","_iterator","_step","childKey","hasMore","_createViewToken","isViewable","_this$props2","getItem","item","_keyExtractor","frame","_getFrameMetrics","getItemLayout","_this$props3","__isNative","_updateCellsToRenderBatcher","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","viewabilityConfig","onViewableItemsChanged","push","initialState","storedState","getNestedChildState","_getListKey","frames","_createClass2","scrollToEnd","params","veryLast","scrollTo","warn","x","y","_this$props4","onScrollToIndexFailed","viewOffset","viewPosition","averageItemLength","highestMeasuredFrameIndex","scrollToItem","_this$props5","itemCount","scrollToOffset","t","flashScrollIndicators","getScrollResponder","getScrollableNode","findNodeHandle","getScrollRef","setNativeProps","_getCellKey","_this$context","listKey","_getDebugInfo","_this$context2","parent","debugInfo","componentDidMount","registerAsNestedChild","parentDebugInfo","componentWillUnmount","unregisterAsNestedChild","dispose","abort","deactivateAndFlush","_pushCells","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","_this2","_this$props6","CellRendererComponent","ItemSeparatorComponent","stickyOffset","ListHeaderComponent","end","prevCellKey","_loop","CellRenderer","undefined","fillRateHelper","onUpdateSeparators","_onCellLayout","onUnmount","parentProps","disableVirtualization","nestedContext","keyExtractor","defaultKeyExtractor","String","type","displayName","render","_this3","__DEV__","flatStyles","contentContainerStyle","flexWrap","_this$props7","ListEmptyComponent","ListFooterComponent","_this$props8","inverted","styles","horizontallyInverted","verticallyInverted","element","isValidElement","VirtualizedListCellContextProvider","style","compose","ListHeaderComponentStyle","spacerKey","lastInitialIndex","_this$state","firstAfterInitial","insertedStickySpacer","initBlock","stickyBlock","leadSpace","_defineProperty2","trailSpace","firstSpace","lastFrame","endFrame","tailSpacerLength","cloneElement","event","ListFooterComponentStyle","scrollProps","invertStickyHeaders","innerRet","VirtualizedListContextProvider","getScrollMetrics","renderScrollComponent","ret","Context","Consumer","scrollContext","nesting","debug","_renderDebugOverlay","componentDidUpdate","prevProps","_this$props9","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","_iterator2","_step2","_this4","measureLayout","scrollMetrics","metricsChanged","_iterator3","_step3","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","_this$props10","onEndReached","_this$_scrollMetrics2","threshold","_this$state2","_this$_scrollMetrics3","hiPri","scrollingThreshold","distTop","distBottom","schedule","_this5","onUpdate","getDerivedStateFromProps","prevState","PureComponent","contextType","VirtualizedListContext","_React$Component","_super2","_this6","_len","args","_key","concat","separatorProps","highlighted","leadingItem","_separators","highlight","_this6$props","unhighlight","_this6$props2","updateProps","select","_this6$props3","_renderElement","renderItem","ListItemComponent","separators","_this$props11","enabled","itemSeparator","cellStyle","rowReverse","columnReverse","row","Component","trace","create","transform","scaleY","scaleX","flexDirection","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor","module","exports"],"sources":["VirtualizedList.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nconst Batchinator = require('../Interaction/Batchinator');\nconst FillRateHelper = require('./FillRateHelper');\nconst ReactNative = require('../Renderer/shims/ReactNative');\nconst RefreshControl = require('../Components/RefreshControl/RefreshControl');\nconst ScrollView = require('../Components/ScrollView/ScrollView');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst View = require('../Components/View/View');\nconst ViewabilityHelper = require('./ViewabilityHelper');\n\nconst flattenStyle = require('../StyleSheet/flattenStyle');\nconst infoLog = require('../Utilities/infoLog');\nconst invariant = require('invariant');\n\nimport {\n  keyExtractor as defaultKeyExtractor,\n  computeWindowedRenderLimits,\n} from './VirtualizeUtils';\n\nimport * as React from 'react';\nimport type {ScrollResponderType} from '../Components/ScrollView/ScrollView';\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {\n  ViewabilityConfig,\n  ViewToken,\n  ViewabilityConfigCallbackPair,\n} from './ViewabilityHelper';\nimport {\n  VirtualizedListCellContextProvider,\n  VirtualizedListContext,\n  VirtualizedListContextProvider,\n  type ChildListState,\n  type ListDebugInfo,\n} from './VirtualizedListContext.js';\n\ntype Item = any;\n\nexport type Separators = {\n  highlight: () => void,\n  unhighlight: () => void,\n  updateProps: (select: 'leading' | 'trailing', newProps: Object) => void,\n  ...\n};\n\nexport type RenderItemProps<ItemT> = {\n  item: ItemT,\n  index: number,\n  separators: Separators,\n  ...\n};\n\nexport type RenderItemType<ItemT> = (\n  info: RenderItemProps<ItemT>,\n) => React.Node;\n\ntype ViewabilityHelperCallbackTuple = {\n  viewabilityHelper: ViewabilityHelper,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  ...\n};\n\ntype RequiredProps = {|\n  /**\n   * The default accessor functions assume this is an Array<{key: string} | {id: string}> but you can override\n   * getItem, getItemCount, and keyExtractor to handle any type of index-based data.\n   */\n  data?: any,\n  /**\n   * A generic accessor for extracting an item from any sort of data blob.\n   */\n  getItem: (data: any, index: number) => ?Item,\n  /**\n   * Determines how many items are in the data blob.\n   */\n  getItemCount: (data: any) => number,\n|};\ntype OptionalProps = {|\n  renderItem?: ?RenderItemType<Item>,\n  /**\n   * `debug` will turn on extra logging and visual overlays to aid with debugging both usage and\n   * implementation, but with a significant perf hit.\n   */\n  debug?: ?boolean,\n  /**\n   * DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully\n   * unmounts react instances that are outside of the render window. You should only need to disable\n   * this for debugging purposes. Defaults to false.\n   */\n  disableVirtualization?: ?boolean,\n  /**\n   * A marker property for telling the list to re-render (since it implements `PureComponent`). If\n   * any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the\n   * `data` prop, stick it here and treat it immutably.\n   */\n  extraData?: any,\n  // e.g. height, y\n  getItemLayout?: (\n    data: any,\n    index: number,\n  ) => {\n    length: number,\n    offset: number,\n    index: number,\n    ...\n  },\n  horizontal?: ?boolean,\n  /**\n   * How many items to render in the initial batch. This should be enough to fill the screen but not\n   * much more. Note these items will never be unmounted as part of the windowed rendering in order\n   * to improve perceived performance of scroll-to-top actions.\n   */\n  initialNumToRender?: ?number,\n  /**\n   * Instead of starting at the top with the first item, start at `initialScrollIndex`. This\n   * disables the \"scroll to top\" optimization that keeps the first `initialNumToRender` items\n   * always rendered and immediately renders the items starting at this initial index. Requires\n   * `getItemLayout` to be implemented.\n   */\n  initialScrollIndex?: ?number,\n  /**\n   * Reverses the direction of scroll. Uses scale transforms of -1.\n   */\n  inverted?: ?boolean,\n  keyExtractor?: ?(item: Item, index: number) => string,\n  /**\n   * Each cell is rendered using this element. Can be a React Component Class,\n   * or a render function. Defaults to using View.\n   */\n  CellRendererComponent?: ?React.ComponentType<any>,\n  /**\n   * Rendered in between each item, but not at the top or bottom. By default, `highlighted` and\n   * `leadingItem` props are provided. `renderItem` provides `separators.highlight`/`unhighlight`\n   * which will update the `highlighted` prop, but you can also add custom props with\n   * `separators.updateProps`.\n   */\n  ItemSeparatorComponent?: ?React.ComponentType<any>,\n  /**\n   * Takes an item from `data` and renders it into the list. Example usage:\n   *\n   *     <FlatList\n   *       ItemSeparatorComponent={Platform.OS !== 'android' && ({highlighted}) => (\n   *         <View style={[style.separator, highlighted && {marginLeft: 0}]} />\n   *       )}\n   *       data={[{title: 'Title Text', key: 'item1'}]}\n   *       ListItemComponent={({item, separators}) => (\n   *         <TouchableHighlight\n   *           onPress={() => this._onPress(item)}\n   *           onShowUnderlay={separators.highlight}\n   *           onHideUnderlay={separators.unhighlight}>\n   *           <View style={{backgroundColor: 'white'}}>\n   *             <Text>{item.title}</Text>\n   *           </View>\n   *         </TouchableHighlight>\n   *       )}\n   *     />\n   *\n   * Provides additional metadata like `index` if you need it, as well as a more generic\n   * `separators.updateProps` function which let's you set whatever props you want to change the\n   * rendering of either the leading separator or trailing separator in case the more common\n   * `highlight` and `unhighlight` (which set the `highlighted: boolean` prop) are insufficient for\n   * your use-case.\n   */\n  ListItemComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered when the list is empty. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListEmptyComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered at the bottom of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListFooterComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListFooterComponent\n   */\n  ListFooterComponentStyle?: ViewStyleProp,\n  /**\n   * Rendered at the top of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListHeaderComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListHeaderComponent\n   */\n  ListHeaderComponentStyle?: ViewStyleProp,\n  /**\n   * A unique identifier for this list. If there are multiple VirtualizedLists at the same level of\n   * nesting within another VirtualizedList, this key is necessary for virtualization to\n   * work properly.\n   */\n  listKey?: string,\n  /**\n   * The maximum number of items to render in each incremental render batch. The more rendered at\n   * once, the better the fill rate, but responsiveness may suffer because rendering content may\n   * interfere with responding to button taps or other interactions.\n   */\n  maxToRenderPerBatch?: ?number,\n  /**\n   * Called once when the scroll position gets within `onEndReachedThreshold` of the rendered\n   * content.\n   */\n  onEndReached?: ?(info: {distanceFromEnd: number, ...}) => void,\n  /**\n   * How far from the end (in units of visible length of the list) the bottom edge of the\n   * list must be from the end of the content to trigger the `onEndReached` callback.\n   * Thus a value of 0.5 will trigger `onEndReached` when the end of the content is\n   * within half the visible length of the list.\n   */\n  onEndReachedThreshold?: ?number,\n  /**\n   * If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality. Make\n   * sure to also set the `refreshing` prop correctly.\n   */\n  onRefresh?: ?() => void,\n  /**\n   * Used to handle failures when scrolling to an index that has not been measured yet. Recommended\n   * action is to either compute your own offset and `scrollTo` it, or scroll as far as possible and\n   * then try again after more items have been rendered.\n   */\n  onScrollToIndexFailed?: ?(info: {\n    index: number,\n    highestMeasuredFrameIndex: number,\n    averageItemLength: number,\n    ...\n  }) => void,\n  /**\n   * Called when the viewability of rows changes, as defined by the\n   * `viewabilityConfig` prop.\n   */\n  onViewableItemsChanged?: ?(info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  persistentScrollbar?: ?boolean,\n  /**\n   * Set this when offset is needed for the loading indicator to show correctly.\n   */\n  progressViewOffset?: number,\n  /**\n   * A custom refresh control element. When set, it overrides the default\n   * <RefreshControl> component built internally. The onRefresh and refreshing\n   * props are also ignored. Only works for vertical VirtualizedList.\n   */\n  refreshControl?: ?React.Element<any>,\n  /**\n   * Set this true while waiting for new data from a refresh.\n   */\n  refreshing?: ?boolean,\n  /**\n   * Note: may have bugs (missing content) in some circumstances - use at your own risk.\n   *\n   * This may improve scroll performance for large lists.\n   */\n  removeClippedSubviews?: boolean,\n  /**\n   * Render a custom scroll component, e.g. with a differently styled `RefreshControl`.\n   */\n  renderScrollComponent?: (props: Object) => React.Element<any>,\n  /**\n   * Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off\n   * screen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`.\n   */\n  updateCellsBatchingPeriod?: ?number,\n  /**\n   * See `ViewabilityHelper` for flow type and further documentation.\n   */\n  viewabilityConfig?: ViewabilityConfig,\n  /**\n   * List of ViewabilityConfig/onViewableItemsChanged pairs. A specific onViewableItemsChanged\n   * will be called when its corresponding ViewabilityConfig's conditions are met.\n   */\n  viewabilityConfigCallbackPairs?: Array<ViewabilityConfigCallbackPair>,\n  /**\n   * Determines the maximum number of items rendered outside of the visible area, in units of\n   * visible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will\n   * render the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing\n   * this number will reduce memory consumption and may improve performance, but will increase the\n   * chance that fast scrolling may reveal momentary blank areas of unrendered content.\n   */\n  windowSize?: ?number,\n  /**\n   * The legacy implementation is no longer supported.\n   */\n  legacyImplementation?: empty,\n|};\n\ntype Props = {|\n  ...React.ElementConfig<typeof ScrollView>,\n  ...RequiredProps,\n  ...OptionalProps,\n|};\n\nlet _usedIndexForKey = false;\nlet _keylessItemComponentName: string = '';\n\ntype State = {\n  first: number,\n  last: number,\n};\n\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// horizontalOrDefault(this.props.horizontal)\nfunction horizontalOrDefault(horizontal: ?boolean) {\n  return horizontal ?? false;\n}\n\n// initialNumToRenderOrDefault(this.props.initialNumToRenderOrDefault)\nfunction initialNumToRenderOrDefault(initialNumToRender: ?number) {\n  return initialNumToRender ?? 10;\n}\n\n// maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch: ?number) {\n  return maxToRenderPerBatch ?? 10;\n}\n\n// onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold)\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold: ?number) {\n  return onEndReachedThreshold ?? 2;\n}\n\n// scrollEventThrottleOrDefault(this.props.scrollEventThrottle)\nfunction scrollEventThrottleOrDefault(scrollEventThrottle: ?number) {\n  return scrollEventThrottle ?? 50;\n}\n\n// windowSizeOrDefault(this.props.windowSize)\nfunction windowSizeOrDefault(windowSize: ?number) {\n  return windowSize ?? 21;\n}\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist.html)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist.html) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\n *\n */\nclass VirtualizedList extends React.PureComponent<Props, State> {\n  static contextType: typeof VirtualizedListContext = VirtualizedListContext;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params?: ?{animated?: ?boolean, ...}) {\n    const animated = params ? params.animated : true;\n    const veryLast = this.props.getItemCount(this.props.data) - 1;\n    const frame = this._getFrameMetricsApprox(veryLast);\n    const offset = Math.max(\n      0,\n      frame.offset +\n        frame.length +\n        this._footerLength -\n        this._scrollMetrics.visibleLength,\n    );\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontalOrDefault(this.props.horizontal)\n        ? {x: offset, animated}\n        : {y: offset, animated},\n    );\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }) {\n    const {\n      data,\n      horizontal,\n      getItemCount,\n      getItemLayout,\n      onScrollToIndexFailed,\n    } = this.props;\n    const {animated, index, viewOffset, viewPosition} = params;\n    invariant(\n      index >= 0,\n      `scrollToIndex out of range: requested index ${index} but minimum is 0`,\n    );\n    invariant(\n      getItemCount(data) >= 1,\n      `scrollToIndex out of range: item length ${getItemCount(\n        data,\n      )} but minimum is 1`,\n    );\n    invariant(\n      index < getItemCount(data),\n      `scrollToIndex out of range: requested index ${index} is out of 0 to ${getItemCount(\n        data,\n      ) - 1}`,\n    );\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(\n        !!onScrollToIndexFailed,\n        'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' +\n          'otherwise there is no way to know the location of offscreen indices or handle failures.',\n      );\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index,\n      });\n      return;\n    }\n    const frame = this._getFrameMetricsApprox(index);\n    const offset =\n      Math.max(\n        0,\n        frame.offset -\n          (viewPosition || 0) *\n            (this._scrollMetrics.visibleLength - frame.length),\n      ) - (viewOffset || 0);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: Item,\n    viewPosition?: number,\n    ...\n  }) {\n    const {item} = params;\n    const {data, getItem, getItemCount} = this.props;\n    const itemCount = getItemCount(data);\n    for (let index = 0; index < itemCount; index++) {\n      if (getItem(data, index) === item) {\n        this.scrollToIndex({...params, index});\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number, ...}) {\n    const {animated, offset} = params;\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontalOrDefault(this.props.horizontal)\n        ? {x: offset, animated}\n        : {y: offset, animated},\n    );\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props.data);\n  }\n\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder(): ?ScrollResponderType {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode(): ?number {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return ReactNative.findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef():\n    | ?React.ElementRef<typeof ScrollView>\n    | ?React.ElementRef<typeof View> {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props: Object) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  _getCellKey(): string {\n    return this.context?.cellKey || 'rootList';\n  }\n\n  _getListKey(): string {\n    return this.props.listKey || this._getCellKey();\n  }\n\n  _getDebugInfo(): ListDebugInfo {\n    return {\n      listKey: this._getListKey(),\n      cellKey: this._getCellKey(),\n      horizontal: horizontalOrDefault(this.props.horizontal),\n      parent: this.context?.debugInfo,\n    };\n  }\n\n  _getScrollMetrics = () => {\n    return this._scrollMetrics;\n  };\n\n  hasMore(): boolean {\n    return this._hasMore;\n  }\n\n  _getOutermostParentListRef = () => {\n    if (this._isNestedWithSameOrientation()) {\n      return this.context.getOutermostParentListRef();\n    } else {\n      return this;\n    }\n  };\n\n  _getNestedChildState = (key: string): ?ChildListState => {\n    const existingChildData = this._nestedChildLists.get(key);\n    return existingChildData && existingChildData.state;\n  };\n\n  _registerAsNestedChild = (childList: {\n    cellKey: string,\n    key: string,\n    ref: VirtualizedList,\n    parentDebugInfo: ListDebugInfo,\n    ...\n  }): ?ChildListState => {\n    // Register the mapping between this child key and the cellKey for its cell\n    const childListsInCell =\n      this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n    childListsInCell.add(childList.key);\n    this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n    const existingChildData = this._nestedChildLists.get(childList.key);\n    if (existingChildData && existingChildData.ref !== null) {\n      console.error(\n        'A VirtualizedList contains a cell which itself contains ' +\n          'more than one VirtualizedList of the same orientation as the parent ' +\n          'list. You must pass a unique listKey prop to each sibling list.\\n\\n' +\n          describeNestedLists({\n            ...childList,\n            // We're called from the child's componentDidMount, so it's safe to\n            // read the child's props here (albeit weird).\n            horizontal: !!childList.ref.props.horizontal,\n          }),\n      );\n    }\n    this._nestedChildLists.set(childList.key, {\n      ref: childList.ref,\n      state: null,\n    });\n\n    if (this._hasInteracted) {\n      childList.ref.recordInteraction();\n    }\n  };\n\n  _unregisterAsNestedChild = (childList: {\n    key: string,\n    state: ChildListState,\n    ...\n  }): void => {\n    this._nestedChildLists.set(childList.key, {\n      ref: null,\n      state: childList.state,\n    });\n  };\n\n  state: State;\n\n  constructor(props: Props) {\n    super(props);\n    invariant(\n      // $FlowFixMe[prop-missing]\n      !props.onScroll || !props.onScroll.__isNative,\n      'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' +\n        'to support native onScroll events with useNativeDriver',\n    );\n    invariant(\n      windowSizeOrDefault(props.windowSize) > 0,\n      'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.',\n    );\n\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(\n      this._updateCellsToRender,\n      this.props.updateCellsBatchingPeriod ?? 50,\n    );\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged,\n        }),\n      );\n    } else if (this.props.onViewableItemsChanged) {\n      this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(this.props.viewabilityConfig),\n        // $FlowFixMe[incompatible-call]\n        onViewableItemsChanged: this.props.onViewableItemsChanged,\n      });\n    }\n\n    let initialState = {\n      first: this.props.initialScrollIndex || 0,\n      last:\n        Math.min(\n          this.props.getItemCount(this.props.data),\n          (this.props.initialScrollIndex || 0) +\n            initialNumToRenderOrDefault(this.props.initialNumToRender),\n        ) - 1,\n    };\n\n    if (this._isNestedWithSameOrientation()) {\n      const storedState = this.context.getNestedChildState(this._getListKey());\n      if (storedState) {\n        initialState = storedState;\n        this.state = storedState;\n        this._frames = storedState.frames;\n      }\n    }\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this._getListKey(),\n        ref: this,\n        // NOTE: When the child mounts (here) it's not necessarily safe to read\n        // the parent's props. This is why we explicitly propagate debugInfo\n        // \"down\" via context and \"up\" again via this method call on the\n        // parent.\n        parentDebugInfo: this.context.debugInfo,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({\n        key: this._getListKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames,\n        },\n      });\n    }\n    this._updateViewableItems(null);\n    this._updateCellsToRenderBatcher.dispose({abort: true});\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n  }\n\n  static getDerivedStateFromProps(newProps: Props, prevState: State): State {\n    const {data, getItemCount} = newProps;\n    const maxToRenderPerBatch = maxToRenderPerBatchOrDefault(\n      newProps.maxToRenderPerBatch,\n    );\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    return {\n      first: Math.max(\n        0,\n        Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch),\n      ),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1)),\n    };\n  }\n\n  _pushCells(\n    cells: Array<Object>,\n    stickyHeaderIndices: Array<number>,\n    stickyIndicesFromProps: Set<number>,\n    first: number,\n    last: number,\n    inversionStyle: ViewStyleProp,\n  ) {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      data,\n      getItem,\n      getItemCount,\n      horizontal,\n    } = this.props;\n    const stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    const end = getItemCount(data) - 1;\n    let prevCellKey;\n    last = Math.min(end, last);\n    for (let ii = first; ii <= last; ii++) {\n      const item = getItem(data, ii);\n      const key = this._keyExtractor(item, ii);\n      this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n      cells.push(\n        <CellRenderer\n          CellRendererComponent={CellRendererComponent}\n          ItemSeparatorComponent={ii < end ? ItemSeparatorComponent : undefined}\n          cellKey={key}\n          fillRateHelper={this._fillRateHelper}\n          horizontal={horizontal}\n          index={ii}\n          inversionStyle={inversionStyle}\n          item={item}\n          key={key}\n          prevCellKey={prevCellKey}\n          onUpdateSeparators={this._onUpdateSeparators}\n          onLayout={e => this._onCellLayout(e, key, ii)}\n          onUnmount={this._onCellUnmount}\n          parentProps={this.props}\n          ref={ref => {\n            this._cellRefs[key] = ref;\n          }}\n        />,\n      );\n      prevCellKey = key;\n    }\n  }\n\n  _onUpdateSeparators = (keys: Array<?string>, newProps: Object) => {\n    keys.forEach(key => {\n      const ref = key != null && this._cellRefs[key];\n      ref && ref.updateSeparatorProps(newProps);\n    });\n  };\n\n  _isVirtualizationDisabled(): boolean {\n    return this.props.disableVirtualization || false;\n  }\n\n  _isNestedWithSameOrientation(): boolean {\n    const nestedContext = this.context;\n    return !!(\n      nestedContext &&\n      !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal)\n    );\n  }\n\n  _getSpacerKey = (isVertical: boolean): string =>\n    isVertical ? 'height' : 'width';\n\n  _keyExtractor(item: Item, index: number) {\n    if (this.props.keyExtractor != null) {\n      return this.props.keyExtractor(item, index);\n    }\n\n    const key = defaultKeyExtractor(item, index);\n    if (key === String(index)) {\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n    }\n    return key;\n  }\n\n  render(): React.Node {\n    if (__DEV__) {\n      const flatStyles = flattenStyle(this.props.contentContainerStyle);\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn(\n          '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' +\n            'Consider using `numColumns` with `FlatList` instead.',\n        );\n      }\n    }\n    const {\n      ListEmptyComponent,\n      ListFooterComponent,\n      ListHeaderComponent,\n    } = this.props;\n    const {data, horizontal} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    const inversionStyle = this.props.inverted\n      ? horizontalOrDefault(this.props.horizontal)\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : null;\n    const cells = [];\n    const stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    const stickyHeaderIndices = [];\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      const element = React.isValidElement(ListHeaderComponent) ? (\n        ListHeaderComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListHeaderComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getCellKey() + '-header'}\n          key=\"$header\">\n          <View\n            onLayout={this._onLayoutHeader}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListHeaderComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n    const itemCount = this.props.getItemCount(data);\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      const spacerKey = this._getSpacerKey(!horizontal);\n      const lastInitialIndex = this.props.initialScrollIndex\n        ? -1\n        : initialNumToRenderOrDefault(this.props.initialNumToRender) - 1;\n      const {first, last} = this.state;\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        0,\n        lastInitialIndex,\n        inversionStyle,\n      );\n      const firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        let insertedStickySpacer = false;\n        if (stickyIndicesFromProps.size > 0) {\n          const stickyOffset = ListHeaderComponent ? 1 : 0;\n          // See if there are any sticky headers in the virtualized space that we need to render.\n          for (let ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n              const stickyBlock = this._getFrameMetricsApprox(ii);\n              const leadSpace =\n                stickyBlock.offset -\n                initBlock.offset -\n                (this.props.initialScrollIndex ? 0 : initBlock.length);\n              cells.push(\n                <View key=\"$sticky_lead\" style={{[spacerKey]: leadSpace}} />,\n              );\n              this._pushCells(\n                cells,\n                stickyHeaderIndices,\n                stickyIndicesFromProps,\n                ii,\n                ii,\n                inversionStyle,\n              );\n              const trailSpace =\n                this._getFrameMetricsApprox(first).offset -\n                (stickyBlock.offset + stickyBlock.length);\n              cells.push(\n                <View key=\"$sticky_trail\" style={{[spacerKey]: trailSpace}} />,\n              );\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n        if (!insertedStickySpacer) {\n          const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n          const firstSpace =\n            this._getFrameMetricsApprox(first).offset -\n            (initBlock.offset + initBlock.length);\n          cells.push(\n            <View key=\"$lead_spacer\" style={{[spacerKey]: firstSpace}} />,\n          );\n        }\n      }\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        firstAfterInitial,\n        last,\n        inversionStyle,\n      );\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn(\n          'VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' +\n            'item or provide a custom keyExtractor.',\n          _keylessItemComponentName,\n        );\n        this._hasWarned.keys = true;\n      }\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        const lastFrame = this._getFrameMetricsApprox(last);\n        // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n        const end = this.props.getItemLayout\n          ? itemCount - 1\n          : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n        const endFrame = this._getFrameMetricsApprox(end);\n        const tailSpacerLength =\n          endFrame.offset +\n          endFrame.length -\n          (lastFrame.offset + lastFrame.length);\n        cells.push(\n          <View key=\"$tail_spacer\" style={{[spacerKey]: tailSpacerLength}} />,\n        );\n      }\n    } else if (ListEmptyComponent) {\n      const element: React.Element<any> = ((React.isValidElement(\n        ListEmptyComponent,\n      ) ? (\n        ListEmptyComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListEmptyComponent />\n      )): any);\n      cells.push(\n        React.cloneElement(element, {\n          key: '$empty',\n          onLayout: event => {\n            this._onLayoutEmpty(event);\n            if (element.props.onLayout) {\n              element.props.onLayout(event);\n            }\n          },\n          style: StyleSheet.compose(inversionStyle, element.props.style),\n        }),\n      );\n    }\n    if (ListFooterComponent) {\n      const element = React.isValidElement(ListFooterComponent) ? (\n        ListFooterComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListFooterComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getFooterCellKey()}\n          key=\"$footer\">\n          <View\n            onLayout={this._onLayoutFooter}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListFooterComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n    const scrollProps = {\n      ...this.props,\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: scrollEventThrottleOrDefault(\n        this.props.scrollEventThrottle,\n      ), // TODO: Android support\n      invertStickyHeaders:\n        this.props.invertStickyHeaders !== undefined\n          ? this.props.invertStickyHeaders\n          : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle\n        ? [inversionStyle, this.props.style]\n        : this.props.style,\n    };\n\n    this._hasMore =\n      this.state.last < this.props.getItemCount(this.props.data) - 1;\n\n    const innerRet = (\n      <VirtualizedListContextProvider\n        value={{\n          cellKey: null,\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: horizontalOrDefault(this.props.horizontal),\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          getNestedChildState: this._getNestedChildState,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild,\n          debugInfo: this._getDebugInfo(),\n        }}>\n        {React.cloneElement(\n          (\n            this.props.renderScrollComponent ||\n            this._defaultRenderScrollComponent\n          )(scrollProps),\n          {\n            ref: this._captureScrollRef,\n          },\n          cells,\n        )}\n      </VirtualizedListContextProvider>\n    );\n    let ret = innerRet;\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal ===\n                !horizontalOrDefault(this.props.horizontal) &&\n              !this._hasWarned.nesting &&\n              this.context == null\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }\n    if (this.props.debug) {\n      return (\n        <View style={styles.debug}>\n          {ret}\n          {this._renderDebugOverlay()}\n        </View>\n      );\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {data, extraData} = this.props;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    const hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _averageCellLength = 0;\n  // Maps a cell key to the set of keys for all outermost child lists within that cell\n  _cellKeysToChildListKeys: Map<string, Set<string>> = new Map();\n  _cellRefs = {};\n  _fillRateHelper: FillRateHelper;\n  _frames = {};\n  _footerLength = 0;\n  _hasDoneInitialScroll = false;\n  _hasInteracted = false;\n  _hasMore = false;\n  _hasWarned = {};\n  _headerLength = 0;\n  _hiPriInProgress: boolean = false; // flag to prevent infinite hiPri cell limit update\n  _highestMeasuredFrameIndex = 0;\n  _indicesToKeys: Map<number, string> = new Map();\n  _nestedChildLists: Map<\n    string,\n    {\n      ref: ?VirtualizedList,\n      state: ?ChildListState,\n      ...\n    },\n  > = new Map();\n  _offsetFromParentVirtualizedList: number = 0;\n  _prevParentOffset: number = 0;\n  _scrollMetrics = {\n    contentLength: 0,\n    dOffset: 0,\n    dt: 10,\n    offset: 0,\n    timestamp: 0,\n    velocity: 0,\n    visibleLength: 0,\n  };\n  _scrollRef: ?React.ElementRef<any> = null;\n  _sentEndForContentLength = 0;\n  _totalCellLength = 0;\n  _totalCellsMeasured = 0;\n  _updateCellsToRenderBatcher: Batchinator;\n  _viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];\n\n  _captureScrollRef = ref => {\n    this._scrollRef = ref;\n  };\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(\n      this.props,\n      this.state,\n      this._scrollMetrics,\n    );\n  }\n\n  _defaultRenderScrollComponent = props => {\n    const onRefresh = props.onRefresh;\n    if (this._isNestedWithSameOrientation()) {\n      // $FlowFixMe[prop-missing] - Typing ReactNativeComponent revealed errors\n      return <View {...props} />;\n    } else if (onRefresh) {\n      invariant(\n        typeof props.refreshing === 'boolean',\n        '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n          JSON.stringify(props.refreshing ?? 'undefined') +\n          '`',\n      );\n      return (\n        // $FlowFixMe[prop-missing] Invalid prop usage\n        <ScrollView\n          {...props}\n          refreshControl={\n            props.refreshControl == null ? (\n              <RefreshControl\n                refreshing={props.refreshing}\n                onRefresh={onRefresh}\n                progressViewOffset={props.progressViewOffset}\n              />\n            ) : (\n              props.refreshControl\n            )\n          }\n        />\n      );\n    } else {\n      // $FlowFixMe[prop-missing] Invalid prop usage\n      return <ScrollView {...props} />;\n    }\n  };\n\n  _onCellLayout(e, cellKey, index) {\n    const layout = e.nativeEvent.layout;\n    const next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true,\n    };\n    const curr = this._frames[cellKey];\n    if (\n      !curr ||\n      next.offset !== curr.offset ||\n      next.length !== curr.length ||\n      index !== curr.index\n    ) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength =\n        this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(\n        this._highestMeasuredFrameIndex,\n        index,\n      );\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    this._triggerRemeasureForChildListsInCell(cellKey);\n\n    this._computeBlankness();\n    this._updateViewableItems(this.props.data);\n  }\n\n  _onCellUnmount = (cellKey: string) => {\n    const curr = this._frames[cellKey];\n    if (curr) {\n      this._frames[cellKey] = {...curr, inLayout: false};\n    }\n  };\n\n  _triggerRemeasureForChildListsInCell(cellKey: string): void {\n    const childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n    if (childListKeys) {\n      for (let childKey of childListKeys) {\n        const childList = this._nestedChildLists.get(childKey);\n        childList &&\n          childList.ref &&\n          childList.ref.measureLayoutRelativeToContainingList();\n      }\n    }\n  }\n\n  measureLayoutRelativeToContainingList(): void {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(\n        this.context.getOutermostParentListRef().getScrollRef(),\n        (x, y, width, height) => {\n          this._offsetFromParentVirtualizedList = this._selectOffset({x, y});\n          this._scrollMetrics.contentLength = this._selectLength({\n            width,\n            height,\n          });\n          const scrollMetrics = this._convertParentScrollMetrics(\n            this.context.getScrollMetrics(),\n          );\n\n          const metricsChanged =\n            this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength ||\n            this._scrollMetrics.offset !== scrollMetrics.offset;\n\n          if (metricsChanged) {\n            this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n            this._scrollMetrics.offset = scrollMetrics.offset;\n\n            // If metrics of the scrollView changed, then we triggered remeasure for child list\n            // to ensure VirtualizedList has the right information.\n            this._cellKeysToChildListKeys.forEach(childListKeys => {\n              if (childListKeys) {\n                for (let childKey of childListKeys) {\n                  const childList = this._nestedChildLists.get(childKey);\n                  childList &&\n                    childList.ref &&\n                    childList.ref.measureLayoutRelativeToContainingList();\n                }\n              }\n            });\n          }\n        },\n        error => {\n          console.warn(\n            \"VirtualizedList: Encountered an error while measuring a list's\" +\n              ' offset from its containing VirtualizedList.',\n          );\n        },\n      );\n    } catch (error) {\n      console.warn(\n        'measureLayoutRelativeToContainingList threw an error',\n        error.stack,\n      );\n    }\n  }\n\n  _onLayout = (e: Object) => {\n    if (this._isNestedWithSameOrientation()) {\n      // Need to adjust our scroll metrics to be relative to our containing\n      // VirtualizedList before we can make claims about list item viewability\n      this.measureLayoutRelativeToContainingList();\n    } else {\n      this._scrollMetrics.visibleLength = this._selectLength(\n        e.nativeEvent.layout,\n      );\n    }\n    this.props.onLayout && this.props.onLayout(e);\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  _onLayoutEmpty = e => {\n    this.props.onLayout && this.props.onLayout(e);\n  };\n\n  _getFooterCellKey(): string {\n    return this._getCellKey() + '-footer';\n  }\n\n  _onLayoutFooter = e => {\n    this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n    this._footerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _onLayoutHeader = e => {\n    this._headerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _renderDebugOverlay() {\n    const normalize =\n      this._scrollMetrics.visibleLength /\n      (this._scrollMetrics.contentLength || 1);\n    const framesInLayout = [];\n    const itemCount = this.props.getItemCount(this.props.data);\n    for (let ii = 0; ii < itemCount; ii++) {\n      const frame = this._getFrameMetricsApprox(ii);\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the\n       * error delete this comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    const windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n    const frameLast = this._getFrameMetricsApprox(this.state.last);\n    const windowLen = frameLast.offset + frameLast.length - windowTop;\n    const visTop = this._scrollMetrics.offset;\n    const visLen = this._scrollMetrics.visibleLength;\n\n    return (\n      <View style={[styles.debugOverlayBase, styles.debugOverlay]}>\n        {framesInLayout.map((f, ii) => (\n          <View\n            key={'f' + ii}\n            style={[\n              styles.debugOverlayBase,\n              styles.debugOverlayFrame,\n              {\n                top: f.offset * normalize,\n                height: f.length * normalize,\n              },\n            ]}\n          />\n        ))}\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameLast,\n            {\n              top: windowTop * normalize,\n              height: windowLen * normalize,\n            },\n          ]}\n        />\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameVis,\n            {\n              top: visTop * normalize,\n              height: visLen * normalize,\n            },\n          ]}\n        />\n      </View>\n    );\n  }\n\n  _selectLength(\n    metrics: $ReadOnly<{\n      height: number,\n      width: number,\n      ...\n    }>,\n  ): number {\n    return !horizontalOrDefault(this.props.horizontal)\n      ? metrics.height\n      : metrics.width;\n  }\n\n  _selectOffset(\n    metrics: $ReadOnly<{\n      x: number,\n      y: number,\n      ...\n    }>,\n  ): number {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEndReached() {\n    const {\n      data,\n      getItemCount,\n      onEndReached,\n      onEndReachedThreshold,\n    } = this.props;\n    const {contentLength, visibleLength, offset} = this._scrollMetrics;\n    const distanceFromEnd = contentLength - visibleLength - offset;\n    const threshold =\n      onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : 2;\n    if (\n      onEndReached &&\n      this.state.last === getItemCount(data) - 1 &&\n      distanceFromEnd < threshold &&\n      this._scrollMetrics.contentLength !== this._sentEndForContentLength\n    ) {\n      // Only call onEndReached once for a given content length\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({distanceFromEnd});\n    } else if (distanceFromEnd > threshold) {\n      // If the user scrolls away from the end and back again cause\n      // an onEndReached to be triggered again\n      this._sentEndForContentLength = 0;\n    }\n  }\n\n  _onContentSizeChange = (width: number, height: number) => {\n    if (\n      width > 0 &&\n      height > 0 &&\n      this.props.initialScrollIndex != null &&\n      this.props.initialScrollIndex > 0 &&\n      !this._hasDoneInitialScroll\n    ) {\n      if (this.props.contentOffset == null) {\n        this.scrollToIndex({\n          animated: false,\n          index: this.props.initialScrollIndex,\n        });\n      }\n      this._hasDoneInitialScroll = true;\n    }\n    if (this.props.onContentSizeChange) {\n      this.props.onContentSizeChange(width, height);\n    }\n    this._scrollMetrics.contentLength = this._selectLength({height, width});\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  /* Translates metrics from a scroll event in a parent VirtualizedList into\n   * coordinates relative to the child list.\n   */\n  _convertParentScrollMetrics = (metrics: {\n    visibleLength: number,\n    offset: number,\n    ...\n  }) => {\n    // Offset of the top of the nested list relative to the top of its parent's viewport\n    const offset = metrics.offset - this._offsetFromParentVirtualizedList;\n    // Child's visible length is the same as its parent's\n    const visibleLength = metrics.visibleLength;\n    const dOffset = offset - this._scrollMetrics.offset;\n    const contentLength = this._scrollMetrics.contentLength;\n\n    return {\n      visibleLength,\n      contentLength,\n      offset,\n      dOffset,\n    };\n  };\n\n  _onScroll = (e: Object) => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScroll(e);\n    });\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n    const timestamp = e.timeStamp;\n    let visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n    let contentLength = this._selectLength(e.nativeEvent.contentSize);\n    let offset = this._selectOffset(e.nativeEvent.contentOffset);\n    let dOffset = offset - this._scrollMetrics.offset;\n\n    if (this._isNestedWithSameOrientation()) {\n      if (this._scrollMetrics.contentLength === 0) {\n        // Ignore scroll events until onLayout has been called and we\n        // know our offset from our offset from our parent\n        return;\n      }\n      ({\n        visibleLength,\n        contentLength,\n        offset,\n        dOffset,\n      } = this._convertParentScrollMetrics({\n        visibleLength,\n        offset,\n      }));\n    }\n\n    const dt = this._scrollMetrics.timestamp\n      ? Math.max(1, timestamp - this._scrollMetrics.timestamp)\n      : 1;\n    const velocity = dOffset / dt;\n\n    if (\n      dt > 500 &&\n      this._scrollMetrics.dt > 500 &&\n      contentLength > 5 * visibleLength &&\n      !this._hasWarned.perf\n    ) {\n      infoLog(\n        'VirtualizedList: You have a large list that is slow to update - make sure your ' +\n          'renderItem function renders components that follow React performance best practices ' +\n          'like PureComponent, shouldComponentUpdate, etc.',\n        {dt, prevDt: this._scrollMetrics.dt, contentLength},\n      );\n      this._hasWarned.perf = true;\n    }\n    this._scrollMetrics = {\n      contentLength,\n      dt,\n      dOffset,\n      offset,\n      timestamp,\n      velocity,\n      visibleLength,\n    };\n    this._updateViewableItems(this.props.data);\n    if (!this.props) {\n      return;\n    }\n    this._maybeCallOnEndReached();\n    if (velocity !== 0) {\n      this._fillRateHelper.activate();\n    }\n    this._computeBlankness();\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _scheduleCellsToRenderUpdate() {\n    const {first, last} = this.state;\n    const {offset, visibleLength, velocity} = this._scrollMetrics;\n    const itemCount = this.props.getItemCount(this.props.data);\n    let hiPri = false;\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      this.props.onEndReachedThreshold,\n    );\n    const scrollingThreshold = (onEndReachedThreshold * visibleLength) / 2;\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      const distTop = offset - this._getFrameMetricsApprox(first).offset;\n      hiPri =\n        hiPri || distTop < 0 || (velocity < -2 && distTop < scrollingThreshold);\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (last < itemCount - 1) {\n      const distBottom =\n        this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      hiPri =\n        hiPri ||\n        distBottom < 0 ||\n        (velocity > 2 && distBottom < scrollingThreshold);\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (\n      hiPri &&\n      (this._averageCellLength || this.props.getItemLayout) &&\n      !this._hiPriInProgress\n    ) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({abort: true});\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _onScrollBeginDrag = (e): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScrollBeginDrag(e);\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.recordInteraction();\n    });\n    this._hasInteracted = true;\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  };\n\n  _onScrollEndDrag = (e): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScrollEndDrag(e);\n    });\n    const {velocity} = e.nativeEvent;\n    if (velocity) {\n      this._scrollMetrics.velocity = this._selectOffset(velocity);\n    }\n    this._computeBlankness();\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  };\n\n  _onMomentumScrollBegin = (e): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onMomentumScrollBegin(e);\n    });\n    this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n  };\n\n  _onMomentumScrollEnd = (e): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onMomentumScrollEnd(e);\n    });\n    this._scrollMetrics.velocity = 0;\n    this._computeBlankness();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  };\n\n  _updateCellsToRender = () => {\n    const {\n      data,\n      getItemCount,\n      onEndReachedThreshold: _onEndReachedThreshold,\n    } = this.props;\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      _onEndReachedThreshold,\n    );\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    this._updateViewableItems(data);\n    if (!data) {\n      return;\n    }\n    this.setState(state => {\n      let newState;\n      const {contentLength, offset, visibleLength} = this._scrollMetrics;\n      if (!isVirtualizationDisabled) {\n        // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n        // and wipe out the initialNumToRender rendered elements.\n        // So let's wait until the scroll view metrics have been set up. And until then,\n        // we will trust the initialNumToRender suggestion\n        if (visibleLength > 0 && contentLength > 0) {\n          // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n          // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n          // So let's wait until we've scrolled the view to the right place. And until then,\n          // we will trust the initialScrollIndex suggestion.\n          if (!this.props.initialScrollIndex || this._scrollMetrics.offset) {\n            newState = computeWindowedRenderLimits(\n              this.props.data,\n              this.props.getItemCount,\n              maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch),\n              windowSizeOrDefault(this.props.windowSize),\n              state,\n              this._getFrameMetricsApprox,\n              this._scrollMetrics,\n            );\n          }\n        }\n      } else {\n        const distanceFromEnd = contentLength - visibleLength - offset;\n        const renderAhead =\n          distanceFromEnd < onEndReachedThreshold * visibleLength\n            ? maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\n            : 0;\n        newState = {\n          first: 0,\n          last: Math.min(state.last + renderAhead, getItemCount(data) - 1),\n        };\n      }\n      if (newState && this._nestedChildLists.size > 0) {\n        const newFirst = newState.first;\n        const newLast = newState.last;\n        // If some cell in the new state has a child list in it, we should only render\n        // up through that item, so that we give that list a chance to render.\n        // Otherwise there's churn from multiple child lists mounting and un-mounting\n        // their items.\n        for (let ii = newFirst; ii <= newLast; ii++) {\n          const cellKeyForIndex = this._indicesToKeys.get(ii);\n          const childListKeys =\n            cellKeyForIndex &&\n            this._cellKeysToChildListKeys.get(cellKeyForIndex);\n          if (!childListKeys) {\n            continue;\n          }\n          let someChildHasMore = false;\n          // For each cell, need to check whether any child list in it has more elements to render\n          for (let childKey of childListKeys) {\n            const childList = this._nestedChildLists.get(childKey);\n            if (childList && childList.ref && childList.ref.hasMore()) {\n              someChildHasMore = true;\n              break;\n            }\n          }\n          if (someChildHasMore) {\n            // $FlowFixMe[incompatible-use]\n            newState.last = ii;\n            break;\n          }\n        }\n      }\n      if (\n        newState != null &&\n        newState.first === state.first &&\n        newState.last === state.last\n      ) {\n        newState = null;\n      }\n      return newState;\n    });\n  };\n\n  _createViewToken = (index: number, isViewable: boolean) => {\n    const {data, getItem} = this.props;\n    const item = getItem(data, index);\n    return {index, item, key: this._keyExtractor(item, index), isViewable};\n  };\n\n  _getFrameMetricsApprox = (\n    index: number,\n  ): {\n    length: number,\n    offset: number,\n    ...\n  } => {\n    const frame = this._getFrameMetrics(index);\n    if (frame && frame.index === index) {\n      // check for invalid frames due to row re-ordering\n      return frame;\n    } else {\n      const {getItemLayout} = this.props;\n      invariant(\n        !getItemLayout,\n        'Should not have to estimate frames when a measurement metrics function is provided',\n      );\n      return {\n        length: this._averageCellLength,\n        offset: this._averageCellLength * index,\n      };\n    }\n  };\n\n  _getFrameMetrics = (\n    index: number,\n  ): ?{\n    length: number,\n    offset: number,\n    index: number,\n    inLayout?: boolean,\n    ...\n  } => {\n    const {data, getItem, getItemCount, getItemLayout} = this.props;\n    invariant(\n      getItemCount(data) > index,\n      'Tried to get frame for out of range index ' + index,\n    );\n    const item = getItem(data, index);\n    let frame = item && this._frames[this._keyExtractor(item, index)];\n    if (!frame || frame.index !== index) {\n      if (getItemLayout) {\n        frame = getItemLayout(data, index);\n      }\n    }\n    /* $FlowFixMe[prop-missing] (>=0.63.0 site=react_native_fb) This comment\n     * suppresses an error found when Flow v0.63 was deployed. To see the error\n     * delete this comment and run Flow. */\n    return frame;\n  };\n\n  _updateViewableItems(data: any) {\n    const {getItemCount} = this.props;\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(\n        getItemCount(data),\n        this._scrollMetrics.offset,\n        this._scrollMetrics.visibleLength,\n        this._getFrameMetrics,\n        this._createViewToken,\n        tuple.onViewableItemsChanged,\n        this.state,\n      );\n    });\n  }\n}\n\ntype CellRendererProps = {\n  CellRendererComponent?: ?React.ComponentType<any>,\n  ItemSeparatorComponent: ?React.ComponentType<\n    any | {highlighted: boolean, leadingItem: ?Item},\n  >,\n  cellKey: string,\n  fillRateHelper: FillRateHelper,\n  horizontal: ?boolean,\n  index: number,\n  inversionStyle: ViewStyleProp,\n  item: Item,\n  // This is extracted by ScrollViewStickyHeader\n  onLayout: (event: Object) => void,\n  onUnmount: (cellKey: string) => void,\n  onUpdateSeparators: (cellKeys: Array<?string>, props: Object) => void,\n  parentProps: {\n    // e.g. height, y,\n    getItemLayout?: (\n      data: any,\n      index: number,\n    ) => {\n      length: number,\n      offset: number,\n      index: number,\n      ...\n    },\n    renderItem?: ?RenderItemType<Item>,\n    ListItemComponent?: ?(React.ComponentType<any> | React.Element<any>),\n    ...\n  },\n  prevCellKey: ?string,\n  ...\n};\n\ntype CellRendererState = {\n  separatorProps: $ReadOnly<{|\n    highlighted: boolean,\n    leadingItem: ?Item,\n  |}>,\n  ...\n};\n\nclass CellRenderer extends React.Component<\n  CellRendererProps,\n  CellRendererState,\n> {\n  state = {\n    separatorProps: {\n      highlighted: false,\n      leadingItem: this.props.item,\n    },\n  };\n\n  static getDerivedStateFromProps(\n    props: CellRendererProps,\n    prevState: CellRendererState,\n  ): ?CellRendererState {\n    return {\n      separatorProps: {\n        ...prevState.separatorProps,\n        leadingItem: props.item,\n      },\n    };\n  }\n\n  // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n  _separators = {\n    highlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: true,\n      });\n    },\n    unhighlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: false,\n      });\n    },\n    updateProps: (select: 'leading' | 'trailing', newProps: Object) => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators(\n        [select === 'leading' ? prevCellKey : cellKey],\n        newProps,\n      );\n    },\n  };\n\n  updateSeparatorProps(newProps: Object) {\n    this.setState(state => ({\n      separatorProps: {...state.separatorProps, ...newProps},\n    }));\n  }\n\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n\n  _renderElement(renderItem, ListItemComponent, item, index) {\n    if (renderItem && ListItemComponent) {\n      console.warn(\n        'VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' +\n          ' precedence over renderItem.',\n      );\n    }\n\n    if (ListItemComponent) {\n      /* $FlowFixMe[not-a-component] (>=0.108.0 site=react_native_fb) This\n       * comment suppresses an error found when Flow v0.108 was deployed. To\n       * see the error, delete this comment and run Flow. */\n      /* $FlowFixMe[incompatible-type-arg] (>=0.108.0 site=react_native_fb)\n       * This comment suppresses an error found when Flow v0.108 was deployed.\n       * To see the error, delete this comment and run Flow. */\n      return React.createElement(ListItemComponent, {\n        item,\n        index,\n        separators: this._separators,\n      });\n    }\n\n    if (renderItem) {\n      return renderItem({\n        item,\n        index,\n        separators: this._separators,\n      });\n    }\n\n    invariant(\n      false,\n      'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.',\n    );\n  }\n\n  render() {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      fillRateHelper,\n      horizontal,\n      item,\n      index,\n      inversionStyle,\n      parentProps,\n    } = this.props;\n    const {renderItem, getItemLayout, ListItemComponent} = parentProps;\n    const element = this._renderElement(\n      renderItem,\n      ListItemComponent,\n      item,\n      index,\n    );\n\n    const onLayout =\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the\n       * error delete this comment and run Flow. */\n      getItemLayout && !parentProps.debug && !fillRateHelper.enabled()\n        ? undefined\n        : this.props.onLayout;\n    // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n    const itemSeparator = ItemSeparatorComponent && (\n      <ItemSeparatorComponent {...this.state.separatorProps} />\n    );\n    const cellStyle = inversionStyle\n      ? horizontal\n        ? [styles.rowReverse, inversionStyle]\n        : [styles.columnReverse, inversionStyle]\n      : horizontal\n      ? [styles.row, inversionStyle]\n      : inversionStyle;\n    const result = !CellRendererComponent ? (\n      /* $FlowFixMe[incompatible-type-arg] (>=0.89.0 site=react_native_fb) *\n        This comment suppresses an error found when Flow v0.89 was deployed. *\n        To see the error, delete this comment and run Flow. */\n      <View style={cellStyle} onLayout={onLayout}>\n        {element}\n        {itemSeparator}\n      </View>\n    ) : (\n      <CellRendererComponent\n        {...this.props}\n        style={cellStyle}\n        onLayout={onLayout}>\n        {element}\n        {itemSeparator}\n      </CellRendererComponent>\n    );\n\n    return (\n      <VirtualizedListCellContextProvider cellKey={this.props.cellKey}>\n        {result}\n      </VirtualizedListCellContextProvider>\n    );\n  }\n}\n\nfunction describeNestedLists(childList: {\n  +cellKey: string,\n  +key: string,\n  +ref: VirtualizedList,\n  +parentDebugInfo: ListDebugInfo,\n  +horizontal: boolean,\n  ...\n}) {\n  let trace =\n    'VirtualizedList trace:\\n' +\n    `  Child (${childList.horizontal ? 'horizontal' : 'vertical'}):\\n` +\n    `    listKey: ${childList.key}\\n` +\n    `    cellKey: ${childList.cellKey}`;\n\n  let debugInfo = childList.parentDebugInfo;\n  while (debugInfo) {\n    trace +=\n      `\\n  Parent (${debugInfo.horizontal ? 'horizontal' : 'vertical'}):\\n` +\n      `    listKey: ${debugInfo.listKey}\\n` +\n      `    cellKey: ${debugInfo.cellKey}`;\n    debugInfo = debugInfo.parent;\n  }\n  return trace;\n}\n\nconst styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{scaleY: -1}],\n  },\n  horizontallyInverted: {\n    transform: [{scaleX: -1}],\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse',\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse',\n  },\n  debug: {\n    flex: 1,\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1,\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange',\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2,\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2,\n  },\n});\n\nmodule.exports = VirtualizedList;\n"],"mappings":"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"}