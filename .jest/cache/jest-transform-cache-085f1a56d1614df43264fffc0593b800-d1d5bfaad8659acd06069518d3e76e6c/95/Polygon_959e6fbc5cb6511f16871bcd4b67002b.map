{"version":3,"names":["_react","_interopRequireDefault","require","_Path","_Shape2","_extractPolyPoints","_jsxFileName","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","Polygon","_Shape","_inherits2","_super","_this","_classCallCheck2","_len","length","args","Array","_key","concat","_defineProperty2","_assertThisInitialized2","props","points","d","root","setNativeProps","_createClass2","key","value","render","createElement","_extends2","ref","refMethod","__self","__source","fileName","lineNumber","columnNumber","exports"],"sources":["Polygon.tsx"],"sourcesContent":["import React from 'react';\nimport Path from './Path';\nimport Shape from './Shape';\nimport { CommonPathProps, NumberProp } from '../lib/extract/types';\nimport extractPolyPoints from '../lib/extract/extractPolyPoints';\n\nexport interface PolygonProps extends CommonPathProps {\n  opacity?: NumberProp;\n  points?: string | ReadonlyArray<NumberProp>;\n}\n\nexport default class Polygon extends Shape<PolygonProps> {\n  static displayName = 'Polygon';\n\n  static defaultProps = {\n    points: '',\n  };\n\n  setNativeProps = (\n    props: Object & {\n      points?: string | NumberProp[];\n      d?: string;\n    },\n  ) => {\n    const { points } = props;\n    if (points) {\n      props.d = `M${extractPolyPoints(points)}z`;\n    }\n    this.root && this.root.setNativeProps(props);\n  };\n\n  render() {\n    const { props } = this;\n    const { points } = props;\n    return (\n      <Path\n        ref={this.refMethod as (instance: Path | null) => void}\n        d={points && `M${extractPolyPoints(points)}z`}\n        {...props}\n      />\n    );\n  }\n}\n"],"mappings":"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"}