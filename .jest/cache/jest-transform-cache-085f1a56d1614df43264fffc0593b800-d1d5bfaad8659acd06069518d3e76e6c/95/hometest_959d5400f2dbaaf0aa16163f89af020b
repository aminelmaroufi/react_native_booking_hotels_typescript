2e57975f8fd098a4e4fc10230084ddcc
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var eva = _interopRequireWildcard(require("@eva-design/eva"));
var _components = require("@ui-kitten/components");
var _store = _interopRequireDefault(require("../../redux/store"));
var _Home = _interopRequireDefault(require("../Home"));
var _reactRedux = require("react-redux");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var mockStore = (0, _store.default)();
var navigation = {
  navigate: jest.fn(),
  goBack: jest.fn()
};
var setup = function setup(store) {
  return (0, _reactNative.render)(_react.default.createElement(_components.ApplicationProvider, (0, _extends2.default)({}, eva, {
    theme: eva.light
  }), _react.default.createElement(_reactRedux.Provider, {
    store: store
  }, _react.default.createElement(_Home.default, null))));
};
describe('Test homepage screen', function () {
  beforeEach(function () {
    mockStore.dispatch = jest.fn();
  });
  afterEach(_reactNative.cleanup);
  it('should display the list of hotels', function () {
    var store = mockStore({
      hotels: {
        hotels: [],
        isLoading: true,
        error: null
      }
    });
    setup(store);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsImV2YSIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX2NvbXBvbmVudHMiLCJfc3RvcmUiLCJfSG9tZSIsIl9yZWFjdFJlZHV4IiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJjYWNoZSIsImhhcyIsImdldCIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsIm1vY2tTdG9yZSIsImNvbmZpZ3VyZVN0b3JlIiwibmF2aWdhdGlvbiIsIm5hdmlnYXRlIiwiamVzdCIsImZuIiwiZ29CYWNrIiwic2V0dXAiLCJzdG9yZSIsInJlbmRlciIsImNyZWF0ZUVsZW1lbnQiLCJBcHBsaWNhdGlvblByb3ZpZGVyIiwiX2V4dGVuZHMyIiwidGhlbWUiLCJsaWdodCIsIlByb3ZpZGVyIiwiZGVzY3JpYmUiLCJiZWZvcmVFYWNoIiwiZGlzcGF0Y2giLCJhZnRlckVhY2giLCJjbGVhbnVwIiwiaXQiLCJob3RlbHMiLCJpc0xvYWRpbmciLCJlcnJvciJdLCJzb3VyY2VzIjpbImhvbWUudGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHtcbiAgY2xlYW51cCxcbiAgZmlyZUV2ZW50LFxuICByZW5kZXIsXG4gIHNjcmVlbixcbn0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnO1xuXG5pbXBvcnQgKiBhcyBldmEgZnJvbSAnQGV2YS1kZXNpZ24vZXZhJztcbmltcG9ydCB7QXBwbGljYXRpb25Qcm92aWRlcn0gZnJvbSAnQHVpLWtpdHRlbi9jb21wb25lbnRzJztcbmltcG9ydCBjb25maWd1cmVTdG9yZSBmcm9tICcuLi8uLi9yZWR1eC9zdG9yZSc7XG5pbXBvcnQgSG9tZSBmcm9tICcuLi9Ib21lJztcbmltcG9ydCB7Z2V0SG90ZWxzfSBmcm9tICcuLi8uLi9yZWR1eC9hY3Rpb25zJztcbmltcG9ydCB7UHJvdmlkZXJ9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCBob3RlbHNfcmVzcG9uc2UgZnJvbSAnLi9maXh0dXJlcy9ob3RlbHNfcmVzcG9uc2UnO1xuXG5sZXQgbW9ja1N0b3JlID0gY29uZmlndXJlU3RvcmUoKTtcblxuY29uc3QgbmF2aWdhdGlvbiA9IHtcbiAgbmF2aWdhdGU6IGplc3QuZm4oKSxcbiAgZ29CYWNrOiBqZXN0LmZuKCksXG59O1xuXG5jb25zdCBzZXR1cCA9IHN0b3JlID0+XG4gIHJlbmRlcihcbiAgICA8QXBwbGljYXRpb25Qcm92aWRlciB7Li4uZXZhfSB0aGVtZT17ZXZhLmxpZ2h0fT5cbiAgICAgIDxQcm92aWRlciBzdG9yZT17c3RvcmV9PlxuICAgICAgICA8SG9tZSAvPlxuICAgICAgPC9Qcm92aWRlcj5cbiAgICA8L0FwcGxpY2F0aW9uUHJvdmlkZXI+LFxuICApO1xuXG5kZXNjcmliZSgnVGVzdCBob21lcGFnZSBzY3JlZW4nLCAoKSA9PiB7XG4gIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgIG1vY2tTdG9yZS5kaXNwYXRjaCA9IGplc3QuZm4oKTtcbiAgfSk7XG5cbiAgYWZ0ZXJFYWNoKGNsZWFudXApO1xuXG4gIGl0KCdzaG91bGQgZGlzcGxheSB0aGUgbGlzdCBvZiBob3RlbHMnLCAoKSA9PiB7XG4gICAgY29uc3Qgc3RvcmUgPSBtb2NrU3RvcmUoe1xuICAgICAgaG90ZWxzOiB7XG4gICAgICAgIGhvdGVsczogW10sXG4gICAgICAgIGlzTG9hZGluZzogdHJ1ZSxcbiAgICAgICAgZXJyb3I6IG51bGwsXG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgc2V0dXAoc3RvcmUpO1xuICB9KTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBRUEsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBT0EsSUFBQUUsR0FBQSxHQUFBQyx1QkFBQSxDQUFBSCxPQUFBO0FBQ0EsSUFBQUksV0FBQSxHQUFBSixPQUFBO0FBQ0EsSUFBQUssTUFBQSxHQUFBTixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQU0sS0FBQSxHQUFBUCxzQkFBQSxDQUFBQyxPQUFBO0FBRUEsSUFBQU8sV0FBQSxHQUFBUCxPQUFBO0FBQXFDLFNBQUFRLHlCQUFBQyxXQUFBLGVBQUFDLE9BQUEsa0NBQUFDLGlCQUFBLE9BQUFELE9BQUEsUUFBQUUsZ0JBQUEsT0FBQUYsT0FBQSxZQUFBRix3QkFBQSxZQUFBQSx5QkFBQUMsV0FBQSxXQUFBQSxXQUFBLEdBQUFHLGdCQUFBLEdBQUFELGlCQUFBLEtBQUFGLFdBQUE7QUFBQSxTQUFBTix3QkFBQVUsR0FBQSxFQUFBSixXQUFBLFNBQUFBLFdBQUEsSUFBQUksR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsV0FBQUQsR0FBQSxRQUFBQSxHQUFBLG9CQUFBQSxHQUFBLHdCQUFBQSxHQUFBLDRCQUFBRSxPQUFBLEVBQUFGLEdBQUEsVUFBQUcsS0FBQSxHQUFBUix3QkFBQSxDQUFBQyxXQUFBLE9BQUFPLEtBQUEsSUFBQUEsS0FBQSxDQUFBQyxHQUFBLENBQUFKLEdBQUEsWUFBQUcsS0FBQSxDQUFBRSxHQUFBLENBQUFMLEdBQUEsU0FBQU0sTUFBQSxXQUFBQyxxQkFBQSxHQUFBQyxNQUFBLENBQUFDLGNBQUEsSUFBQUQsTUFBQSxDQUFBRSx3QkFBQSxXQUFBQyxHQUFBLElBQUFYLEdBQUEsUUFBQVcsR0FBQSxrQkFBQUgsTUFBQSxDQUFBSSxTQUFBLENBQUFDLGNBQUEsQ0FBQUMsSUFBQSxDQUFBZCxHQUFBLEVBQUFXLEdBQUEsU0FBQUksSUFBQSxHQUFBUixxQkFBQSxHQUFBQyxNQUFBLENBQUFFLHdCQUFBLENBQUFWLEdBQUEsRUFBQVcsR0FBQSxjQUFBSSxJQUFBLEtBQUFBLElBQUEsQ0FBQVYsR0FBQSxJQUFBVSxJQUFBLENBQUFDLEdBQUEsS0FBQVIsTUFBQSxDQUFBQyxjQUFBLENBQUFILE1BQUEsRUFBQUssR0FBQSxFQUFBSSxJQUFBLFlBQUFULE1BQUEsQ0FBQUssR0FBQSxJQUFBWCxHQUFBLENBQUFXLEdBQUEsU0FBQUwsTUFBQSxDQUFBSixPQUFBLEdBQUFGLEdBQUEsTUFBQUcsS0FBQSxJQUFBQSxLQUFBLENBQUFhLEdBQUEsQ0FBQWhCLEdBQUEsRUFBQU0sTUFBQSxZQUFBQSxNQUFBO0FBR3JDLElBQUlXLFNBQVMsR0FBRyxJQUFBQyxjQUFjLEdBQUU7QUFFaEMsSUFBTUMsVUFBVSxHQUFHO0VBQ2pCQyxRQUFRLEVBQUVDLElBQUksQ0FBQ0MsRUFBRSxFQUFFO0VBQ25CQyxNQUFNLEVBQUVGLElBQUksQ0FBQ0MsRUFBRTtBQUNqQixDQUFDO0FBRUQsSUFBTUUsS0FBSyxHQUFHLFNBQVJBLEtBQUtBLENBQUdDLEtBQUs7RUFBQSxPQUNqQixJQUFBQyxtQkFBTSxFQUNKekMsTUFBQSxDQUFBaUIsT0FBQSxDQUFBeUIsYUFBQSxDQUFDcEMsV0FBQSxDQUFBcUMsbUJBQW1CLE1BQUFDLFNBQUEsQ0FBQTNCLE9BQUEsTUFBS2IsR0FBRztJQUFFeUMsS0FBSyxFQUFFekMsR0FBRyxDQUFDMEM7RUFBTSxJQUM3QzlDLE1BQUEsQ0FBQWlCLE9BQUEsQ0FBQXlCLGFBQUEsQ0FBQ2pDLFdBQUEsQ0FBQXNDLFFBQVE7SUFBQ1AsS0FBSyxFQUFFQTtFQUFNLEdBQ3JCeEMsTUFBQSxDQUFBaUIsT0FBQSxDQUFBeUIsYUFBQSxDQUFDbEMsS0FBQSxDQUFBUyxPQUFJLE9BQUcsQ0FDQyxDQUNTLENBQ3ZCO0FBQUE7QUFFSCtCLFFBQVEsQ0FBQyxzQkFBc0IsRUFBRSxZQUFNO0VBQ3JDQyxVQUFVLENBQUMsWUFBTTtJQUNmakIsU0FBUyxDQUFDa0IsUUFBUSxHQUFHZCxJQUFJLENBQUNDLEVBQUUsRUFBRTtFQUNoQyxDQUFDLENBQUM7RUFFRmMsU0FBUyxDQUFDQyxvQkFBTyxDQUFDO0VBRWxCQyxFQUFFLENBQUMsbUNBQW1DLEVBQUUsWUFBTTtJQUM1QyxJQUFNYixLQUFLLEdBQUdSLFNBQVMsQ0FBQztNQUN0QnNCLE1BQU0sRUFBRTtRQUNOQSxNQUFNLEVBQUUsRUFBRTtRQUNWQyxTQUFTLEVBQUUsSUFBSTtRQUNmQyxLQUFLLEVBQUU7TUFDVDtJQUNGLENBQUMsQ0FBQztJQUVGakIsS0FBSyxDQUFDQyxLQUFLLENBQUM7RUFDZCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUMifQ==