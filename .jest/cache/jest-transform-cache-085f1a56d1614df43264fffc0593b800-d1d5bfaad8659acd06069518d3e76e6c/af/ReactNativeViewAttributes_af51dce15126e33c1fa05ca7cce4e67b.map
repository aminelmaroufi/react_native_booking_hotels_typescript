{"version":3,"names":["_interopRequireDefault","require","_extends2","_ReactNativeStyleAttributes","UIView","pointerEvents","accessible","accessibilityActions","accessibilityLabel","accessibilityLiveRegion","accessibilityRole","accessibilityState","accessibilityValue","accessibilityHint","importantForAccessibility","nativeID","testID","renderToHardwareTextureAndroid","shouldRasterizeIOS","onLayout","onAccessibilityAction","onAccessibilityTap","onMagicTap","onAccessibilityEscape","collapsable","needsOffscreenAlphaCompositing","style","ReactNativeStyleAttributes","RCTView","default","removeClippedSubviews","ReactNativeViewAttributes","module","exports"],"sources":["ReactNativeViewAttributes.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\nimport ReactNativeStyleAttributes from './ReactNativeStyleAttributes';\n\nconst UIView = {\n  pointerEvents: true,\n  accessible: true,\n  accessibilityActions: true,\n  accessibilityLabel: true,\n  accessibilityLiveRegion: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  accessibilityValue: true,\n  accessibilityHint: true,\n  importantForAccessibility: true,\n  nativeID: true,\n  testID: true,\n  renderToHardwareTextureAndroid: true,\n  shouldRasterizeIOS: true,\n  onLayout: true,\n  onAccessibilityAction: true,\n  onAccessibilityTap: true,\n  onMagicTap: true,\n  onAccessibilityEscape: true,\n  collapsable: true,\n  needsOffscreenAlphaCompositing: true,\n  style: ReactNativeStyleAttributes,\n};\n\nconst RCTView = {\n  ...UIView,\n\n  // This is a special performance property exposed by RCTView and useful for\n  // scrolling content when there are many subviews, most of which are offscreen.\n  // For this property to be effective, it must be applied to a view that contains\n  // many subviews that extend outside its bound. The subviews must also have\n  // overflow: hidden, as should the containing view (or one of its superviews).\n  removeClippedSubviews: true,\n};\n\nconst ReactNativeViewAttributes = {\n  UIView: UIView,\n  RCTView: RCTView,\n};\n\nmodule.exports = ReactNativeViewAttributes;\n"],"mappings":"AAUA,YAAY;;AAAC,IAAAA,sBAAA,GAAAC,OAAA;AAAA,IAAAC,SAAA,GAAAF,sBAAA,CAAAC,OAAA;AACb,IAAAE,2BAAA,GAAAH,sBAAA,CAAAC,OAAA;AAEA,IAAMG,MAAM,GAAG;EACbC,aAAa,EAAE,IAAI;EACnBC,UAAU,EAAE,IAAI;EAChBC,oBAAoB,EAAE,IAAI;EAC1BC,kBAAkB,EAAE,IAAI;EACxBC,uBAAuB,EAAE,IAAI;EAC7BC,iBAAiB,EAAE,IAAI;EACvBC,kBAAkB,EAAE,IAAI;EACxBC,kBAAkB,EAAE,IAAI;EACxBC,iBAAiB,EAAE,IAAI;EACvBC,yBAAyB,EAAE,IAAI;EAC/BC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE,IAAI;EACZC,8BAA8B,EAAE,IAAI;EACpCC,kBAAkB,EAAE,IAAI;EACxBC,QAAQ,EAAE,IAAI;EACdC,qBAAqB,EAAE,IAAI;EAC3BC,kBAAkB,EAAE,IAAI;EACxBC,UAAU,EAAE,IAAI;EAChBC,qBAAqB,EAAE,IAAI;EAC3BC,WAAW,EAAE,IAAI;EACjBC,8BAA8B,EAAE,IAAI;EACpCC,KAAK,EAAEC;AACT,CAAC;AAED,IAAMC,OAAO,OAAA1B,SAAA,CAAA2B,OAAA,MACRzB,MAAM;EAOT0B,qBAAqB,EAAE;AAAI,EAC5B;AAED,IAAMC,yBAAyB,GAAG;EAChC3B,MAAM,EAAEA,MAAM;EACdwB,OAAO,EAAEA;AACX,CAAC;AAEDI,MAAM,CAACC,OAAO,GAAGF,yBAAyB"}