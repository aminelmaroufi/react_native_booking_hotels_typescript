d695c4ad40fa4f87076c7038dc881886
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _components = require("@ui-kitten/components");
var _FontAwesome = _interopRequireDefault(require("react-native-vector-icons/FontAwesome"));
var _reactRedux = require("react-redux");
var _operators = require("rxjs/operators");
var _rxjs = require("rxjs");
var _native = require("@react-navigation/native");
var _actions = require("../redux/actions");
var _HotelItem = require("../components/home/HotelItem");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var Home = function Home(props) {
  var navigation = (0, _native.useNavigation)();
  var dispatch = (0, _reactRedux.useDispatch)();
  var _useSelector = (0, _reactRedux.useSelector)(function (state) {
      return state.hotel;
    }),
    hotels = _useSelector.hotels,
    pages = _useSelector.pages,
    page = _useSelector.page;
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    refreshing = _useState2[0],
    setRefreshing = _useState2[1];
  var _useState3 = (0, _react.useState)(function () {
      return new _rxjs.Subject();
    }),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    searchTerm = _useState4[0],
    setSearchTerm = _useState4[1];
  var _useState5 = (0, _react.useState)(''),
    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
    q = _useState6[0],
    setTermText = _useState6[1];
  var SearchIcon = function SearchIcon(IconProps) {
    return _react.default.createElement(_FontAwesome.default, (0, _extends2.default)({
      style: styles.searchIcon
    }, IconProps, {
      name: "search",
      size: 20,
      color: "#444"
    }));
  };
  (0, _react.useEffect)(function () {
    dispatch((0, _actions.getHotels)({
      q: '',
      page: 1
    }));
  }, [dispatch]);
  (0, _react.useEffect)(function () {
    setRefreshing(false);
  }, [hotels]);
  (0, _react.useEffect)(function () {
    var subscription = searchTerm.pipe((0, _operators.debounceTime)(300)).subscribe(function (term) {
      if (term.length === 0 || term.length > 2) {
        var params = {
          q: term,
          page: 1
        };
        dispatch((0, _actions.getHotels)(params));
      }
    });
    return function () {
      subscription.unsubscribe();
    };
  }, [searchTerm]);
  (0, _react.useEffect)(function () {
    searchTerm.next(q);
  }, [q]);
  var _renderItem = function _renderItem(_ref) {
    var item = _ref.item;
    return _react.default.createElement(_HotelItem.HotelItem, {
      item: item,
      onSelectHotel: onSelectHotel
    });
  };
  var onSelectHotel = function onSelectHotel(item) {
    dispatch((0, _actions.selectHotel)(item));
    navigation == null ? void 0 : navigation.navigate('HotelDetails');
  };
  var _handleRefresh = function _handleRefresh() {
    console.log('refreshing...');
    setRefreshing(true);
    dispatch((0, _actions.getMoreHotels)({
      q: '',
      page: 1
    }));
  };
  var onLoadMore = function onLoadMore() {
    if (page < pages) {
      dispatch((0, _actions.getMoreHotels)({
        q: '',
        page: page + 1
      }));
    }
  };
  var do_search = function do_search() {};
  return _react.default.createElement(_components.Layout, {
    style: styles.container
  }, _react.default.createElement(_components.Input, {
    placeholder: "Search hotel by name, city ....",
    accessoryRight: SearchIcon,
    onChangeText: function onChangeText(nextValue) {
      return setTermText(nextValue);
    },
    onSubmitEditing: function onSubmitEditing() {
      return do_search();
    },
    style: styles.searchInput
  }), hotels.length > 0 && _react.default.createElement(_reactNative.FlatList, {
    data: hotels,
    numColumns: 1,
    keyExtractor: function keyExtractor(item) {
      return item._id;
    },
    renderItem: _renderItem,
    onEndReachedThreshold: 0.7,
    onEndReached: onLoadMore,
    refreshing: refreshing,
    onRefresh: _handleRefresh
  }));
};
var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    padding: 10,
    paddingTop: 0
  },
  searchInput: {
    backgroundColor: '#ddd',
    borderRadius: 100,
    marginTop: 10
  },
  searchIcon: {
    marginTop: 60
  },
  hotelRow: {
    flexDirection: 'row',
    padding: 10,
    paddingBottom: 15,
    borderBottomWidth: 3,
    borderBottomColor: '#f4ab49'
  },
  row: {
    flexDirection: 'row',
    padding: 10
  },
  info: {
    flex: 1,
    padding: 10
  },
  title: {
    fontSize: 16,
    color: '#000',
    fontWeight: 'bold',
    marginRight: 7
  },
  adress: {
    fontSize: 14,
    color: '#000'
  },
  room: {
    fontSize: 12,
    color: '#000'
  },
  price: {
    fontSize: 17,
    fontWeight: 'bold',
    color: '#000',
    marginTop: 5
  },
  typeStyle: {
    alignItems: 'flex-end',
    position: 'absolute',
    bottom: 5,
    right: 10
  },
  imageStyle: {
    height: 190,
    width: 130
  },
  iconAdressStyle: {
    marginRight: 5,
    marginTop: 2
  }
});
var _default = Home;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfcmVhY3ROYXRpdmUiLCJfY29tcG9uZW50cyIsIl9Gb250QXdlc29tZSIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfcmVhY3RSZWR1eCIsIl9vcGVyYXRvcnMiLCJfcnhqcyIsIl9uYXRpdmUiLCJfYWN0aW9ucyIsIl9Ib3RlbEl0ZW0iLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJub2RlSW50ZXJvcCIsIldlYWtNYXAiLCJjYWNoZUJhYmVsSW50ZXJvcCIsImNhY2hlTm9kZUludGVyb3AiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImNhY2hlIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJkZXNjIiwic2V0IiwiSG9tZSIsInByb3BzIiwibmF2aWdhdGlvbiIsInVzZU5hdmlnYXRpb24iLCJkaXNwYXRjaCIsInVzZURpc3BhdGNoIiwiX3VzZVNlbGVjdG9yIiwidXNlU2VsZWN0b3IiLCJzdGF0ZSIsImhvdGVsIiwiaG90ZWxzIiwicGFnZXMiLCJwYWdlIiwiX3VzZVN0YXRlIiwidXNlU3RhdGUiLCJfdXNlU3RhdGUyIiwiX3NsaWNlZFRvQXJyYXkyIiwicmVmcmVzaGluZyIsInNldFJlZnJlc2hpbmciLCJfdXNlU3RhdGUzIiwiU3ViamVjdCIsIl91c2VTdGF0ZTQiLCJzZWFyY2hUZXJtIiwic2V0U2VhcmNoVGVybSIsIl91c2VTdGF0ZTUiLCJfdXNlU3RhdGU2IiwicSIsInNldFRlcm1UZXh0IiwiU2VhcmNoSWNvbiIsIkljb25Qcm9wcyIsImNyZWF0ZUVsZW1lbnQiLCJfZXh0ZW5kczIiLCJzdHlsZSIsInN0eWxlcyIsInNlYXJjaEljb24iLCJuYW1lIiwic2l6ZSIsImNvbG9yIiwidXNlRWZmZWN0IiwiZ2V0SG90ZWxzIiwic3Vic2NyaXB0aW9uIiwicGlwZSIsImRlYm91bmNlVGltZSIsInN1YnNjcmliZSIsInRlcm0iLCJsZW5ndGgiLCJwYXJhbXMiLCJ1bnN1YnNjcmliZSIsIm5leHQiLCJfcmVuZGVySXRlbSIsIl9yZWYiLCJpdGVtIiwiSG90ZWxJdGVtIiwib25TZWxlY3RIb3RlbCIsInNlbGVjdEhvdGVsIiwibmF2aWdhdGUiLCJfaGFuZGxlUmVmcmVzaCIsImNvbnNvbGUiLCJsb2ciLCJnZXRNb3JlSG90ZWxzIiwib25Mb2FkTW9yZSIsImRvX3NlYXJjaCIsIkxheW91dCIsImNvbnRhaW5lciIsIklucHV0IiwicGxhY2Vob2xkZXIiLCJhY2Nlc3NvcnlSaWdodCIsIm9uQ2hhbmdlVGV4dCIsIm5leHRWYWx1ZSIsIm9uU3VibWl0RWRpdGluZyIsInNlYXJjaElucHV0IiwiRmxhdExpc3QiLCJkYXRhIiwibnVtQ29sdW1ucyIsImtleUV4dHJhY3RvciIsIl9pZCIsInJlbmRlckl0ZW0iLCJvbkVuZFJlYWNoZWRUaHJlc2hvbGQiLCJvbkVuZFJlYWNoZWQiLCJvblJlZnJlc2giLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiZmxleCIsImJhY2tncm91bmRDb2xvciIsInBhZGRpbmciLCJwYWRkaW5nVG9wIiwiYm9yZGVyUmFkaXVzIiwibWFyZ2luVG9wIiwiaG90ZWxSb3ciLCJmbGV4RGlyZWN0aW9uIiwicGFkZGluZ0JvdHRvbSIsImJvcmRlckJvdHRvbVdpZHRoIiwiYm9yZGVyQm90dG9tQ29sb3IiLCJyb3ciLCJpbmZvIiwidGl0bGUiLCJmb250U2l6ZSIsImZvbnRXZWlnaHQiLCJtYXJnaW5SaWdodCIsImFkcmVzcyIsInJvb20iLCJwcmljZSIsInR5cGVTdHlsZSIsImFsaWduSXRlbXMiLCJwb3NpdGlvbiIsImJvdHRvbSIsInJpZ2h0IiwiaW1hZ2VTdHlsZSIsImhlaWdodCIsIndpZHRoIiwiaWNvbkFkcmVzc1N0eWxlIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiSG9tZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7dXNlRWZmZWN0LCB1c2VTdGF0ZX0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtGbGF0TGlzdCwgU3R5bGVTaGVldH0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCB7TGF5b3V0LCBJbnB1dH0gZnJvbSAnQHVpLWtpdHRlbi9jb21wb25lbnRzJztcbmltcG9ydCBJY29uIGZyb20gJ3JlYWN0LW5hdGl2ZS12ZWN0b3ItaWNvbnMvRm9udEF3ZXNvbWUnO1xuaW1wb3J0IHt1c2VEaXNwYXRjaCwgdXNlU2VsZWN0b3J9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCB7ZGVib3VuY2VUaW1lfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQge1N1YmplY3R9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHt1c2VOYXZpZ2F0aW9ufSBmcm9tICdAcmVhY3QtbmF2aWdhdGlvbi9uYXRpdmUnO1xuaW1wb3J0IHtnZXRIb3RlbHMsIGdldE1vcmVIb3RlbHMsIHNlbGVjdEhvdGVsfSBmcm9tICcuLi9yZWR1eC9hY3Rpb25zJztcbmltcG9ydCB7Um9vdFN0YXRlfSBmcm9tICcuLi9yZWR1eC9yZWR1Y2Vycyc7XG5pbXBvcnQge0lIb3RlbH0gZnJvbSAnLi4vbW9kZWxzJztcbmltcG9ydCB7SG90ZWxJdGVtfSBmcm9tICcuLi9jb21wb25lbnRzL2hvbWUvSG90ZWxJdGVtJztcblxudHlwZSBQcm9wcyA9IHtcbiAgaG90ZWxzOiBBcnJheTxJSG90ZWw+O1xufTtcblxuY29uc3QgSG9tZTogUmVhY3QuRkM8UHJvcHM+ID0gcHJvcHMgPT4ge1xuICBjb25zdCBuYXZpZ2F0aW9uID0gdXNlTmF2aWdhdGlvbigpO1xuICBjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XG4gIGNvbnN0IHtob3RlbHMsIHBhZ2VzLCBwYWdlfSA9IHVzZVNlbGVjdG9yKChzdGF0ZTogUm9vdFN0YXRlKSA9PiBzdGF0ZS5ob3RlbCk7XG4gIGNvbnN0IFtyZWZyZXNoaW5nLCBzZXRSZWZyZXNoaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW3NlYXJjaFRlcm0sIHNldFNlYXJjaFRlcm1dID0gdXNlU3RhdGUoKCkgPT4gbmV3IFN1YmplY3QoKSk7XG4gIGNvbnN0IFtxLCBzZXRUZXJtVGV4dF0gPSB1c2VTdGF0ZSgnJyk7XG5cbiAgY29uc3QgU2VhcmNoSWNvbiA9IChJY29uUHJvcHM6IGFueSkgPT4gKFxuICAgIDxJY29uXG4gICAgICBzdHlsZT17c3R5bGVzLnNlYXJjaEljb259XG4gICAgICB7Li4uSWNvblByb3BzfVxuICAgICAgbmFtZT1cInNlYXJjaFwiXG4gICAgICBzaXplPXsyMH1cbiAgICAgIGNvbG9yPVwiIzQ0NFwiXG4gICAgLz5cbiAgKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGRpc3BhdGNoKGdldEhvdGVscyh7cTogJycsIHBhZ2U6IDF9KSk7XG4gIH0sIFtkaXNwYXRjaF0pO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0UmVmcmVzaGluZyhmYWxzZSk7XG4gIH0sIFtob3RlbHNdKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHN1YnNjcmlwdGlvbiA9IHNlYXJjaFRlcm1cbiAgICAgIC5waXBlKGRlYm91bmNlVGltZSgzMDApKVxuICAgICAgLnN1YnNjcmliZSgodGVybTogc3RyaW5nKSA9PiB7XG4gICAgICAgIGlmICh0ZXJtLmxlbmd0aCA9PT0gMCB8fCB0ZXJtLmxlbmd0aCA+IDIpIHtcbiAgICAgICAgICBjb25zdCBwYXJhbXMgPSB7XG4gICAgICAgICAgICBxOiB0ZXJtLFxuICAgICAgICAgICAgcGFnZTogMSxcbiAgICAgICAgICB9O1xuICAgICAgICAgIGRpc3BhdGNoKGdldEhvdGVscyhwYXJhbXMpKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgIH07XG4gIH0sIFtzZWFyY2hUZXJtXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZWFyY2hUZXJtLm5leHQocSk7XG4gIH0sIFtxXSk7XG5cbiAgY29uc3QgX3JlbmRlckl0ZW0gPSAoe2l0ZW19OiB7aXRlbTogSUhvdGVsfSkgPT4ge1xuICAgIHJldHVybiA8SG90ZWxJdGVtIGl0ZW09e2l0ZW19IG9uU2VsZWN0SG90ZWw9e29uU2VsZWN0SG90ZWx9IC8+O1xuICB9O1xuXG4gIGNvbnN0IG9uU2VsZWN0SG90ZWwgPSAoaXRlbTogSUhvdGVsKSA9PiB7XG4gICAgZGlzcGF0Y2goc2VsZWN0SG90ZWwoaXRlbSkpO1xuICAgIG5hdmlnYXRpb24/Lm5hdmlnYXRlKCdIb3RlbERldGFpbHMnKTtcbiAgfTtcblxuICBjb25zdCBfaGFuZGxlUmVmcmVzaCA9ICgpID0+IHtcbiAgICBjb25zb2xlLmxvZygncmVmcmVzaGluZy4uLicpO1xuICAgIHNldFJlZnJlc2hpbmcodHJ1ZSk7XG4gICAgZGlzcGF0Y2goZ2V0TW9yZUhvdGVscyh7cTogJycsIHBhZ2U6IDF9KSk7XG4gIH07XG5cbiAgY29uc3Qgb25Mb2FkTW9yZSA9ICgpID0+IHtcbiAgICBpZiAocGFnZSA8IHBhZ2VzKSB7XG4gICAgICBkaXNwYXRjaChnZXRNb3JlSG90ZWxzKHtxOiAnJywgcGFnZTogcGFnZSArIDF9KSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGRvX3NlYXJjaCA9ICgpID0+IHtcbiAgICAvLyBkaXNwYXRjaChnZXRIb3RlbHMoe3E6IHZhbHVlLCBwYWdlOiBwYWdlICsgMX0pKTtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxMYXlvdXQgc3R5bGU9e3N0eWxlcy5jb250YWluZXJ9PlxuICAgICAgey8qIDxJbnB1dFxuICAgICAgICBwbGFjZWhvbGRlcj1cIlNlYXJjaFwiXG4gICAgICAgIGljb249e1NlYXJjaEljb259XG4gICAgICAgIHN0eWxlPXt7YmFja2dyb3VuZENvbG9yOiAnI2RkZCcsIGJvcmRlclJhZGl1czogMTAwLCBtYXJnaW5Ub3A6IDV9fVxuICAgICAgLz4gKi99XG4gICAgICA8SW5wdXRcbiAgICAgICAgcGxhY2Vob2xkZXI9XCJTZWFyY2ggaG90ZWwgYnkgbmFtZSwgY2l0eSAuLi4uXCJcbiAgICAgICAgYWNjZXNzb3J5UmlnaHQ9e1NlYXJjaEljb259XG4gICAgICAgIG9uQ2hhbmdlVGV4dD17bmV4dFZhbHVlID0+IHNldFRlcm1UZXh0KG5leHRWYWx1ZSl9XG4gICAgICAgIG9uU3VibWl0RWRpdGluZz17KCkgPT4gZG9fc2VhcmNoKCl9XG4gICAgICAgIHN0eWxlPXtzdHlsZXMuc2VhcmNoSW5wdXR9XG4gICAgICAvPlxuICAgICAge2hvdGVscy5sZW5ndGggPiAwICYmIChcbiAgICAgICAgPEZsYXRMaXN0XG4gICAgICAgICAgZGF0YT17aG90ZWxzfVxuICAgICAgICAgIG51bUNvbHVtbnM9ezF9XG4gICAgICAgICAga2V5RXh0cmFjdG9yPXsoaXRlbTogSUhvdGVsKSA9PiBpdGVtLl9pZH1cbiAgICAgICAgICByZW5kZXJJdGVtPXtfcmVuZGVySXRlbX1cbiAgICAgICAgICBvbkVuZFJlYWNoZWRUaHJlc2hvbGQ9ezAuN31cbiAgICAgICAgICBvbkVuZFJlYWNoZWQ9e29uTG9hZE1vcmV9XG4gICAgICAgICAgcmVmcmVzaGluZz17cmVmcmVzaGluZ31cbiAgICAgICAgICBvblJlZnJlc2g9e19oYW5kbGVSZWZyZXNofVxuICAgICAgICAvPlxuICAgICAgKX1cbiAgICA8L0xheW91dD5cbiAgKTtcbn07XG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIGNvbnRhaW5lcjoge1xuICAgIGZsZXg6IDEsXG4gICAgYmFja2dyb3VuZENvbG9yOiAnI2ZmZicsXG4gICAgcGFkZGluZzogMTAsXG4gICAgcGFkZGluZ1RvcDogMCxcbiAgfSxcbiAgc2VhcmNoSW5wdXQ6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjZGRkJyxcbiAgICBib3JkZXJSYWRpdXM6IDEwMCxcbiAgICBtYXJnaW5Ub3A6IDEwLFxuICB9LFxuICBzZWFyY2hJY29uOiB7XG4gICAgbWFyZ2luVG9wOiA2MCxcbiAgfSxcbiAgaG90ZWxSb3c6IHtcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICBwYWRkaW5nOiAxMCxcbiAgICBwYWRkaW5nQm90dG9tOiAxNSxcbiAgICBib3JkZXJCb3R0b21XaWR0aDogMyxcbiAgICBib3JkZXJCb3R0b21Db2xvcjogJyNmNGFiNDknLFxuICB9LFxuICByb3c6IHtcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICBwYWRkaW5nOiAxMCxcbiAgfSxcbiAgaW5mbzoge1xuICAgIGZsZXg6IDEsXG4gICAgcGFkZGluZzogMTAsXG4gIH0sXG4gIHRpdGxlOiB7XG4gICAgZm9udFNpemU6IDE2LFxuICAgIGNvbG9yOiAnIzAwMCcsXG4gICAgZm9udFdlaWdodDogJ2JvbGQnLFxuICAgIG1hcmdpblJpZ2h0OiA3LFxuICB9LFxuICBhZHJlc3M6IHtcbiAgICBmb250U2l6ZTogMTQsXG4gICAgY29sb3I6ICcjMDAwJyxcbiAgfSxcbiAgcm9vbToge1xuICAgIGZvbnRTaXplOiAxMixcbiAgICBjb2xvcjogJyMwMDAnLFxuICB9LFxuICBwcmljZToge1xuICAgIGZvbnRTaXplOiAxNyxcbiAgICBmb250V2VpZ2h0OiAnYm9sZCcsXG4gICAgY29sb3I6ICcjMDAwJyxcbiAgICBtYXJnaW5Ub3A6IDUsXG4gIH0sXG4gIHR5cGVTdHlsZToge1xuICAgIGFsaWduSXRlbXM6ICdmbGV4LWVuZCcsXG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgYm90dG9tOiA1LFxuICAgIHJpZ2h0OiAxMCxcbiAgfSxcbiAgaW1hZ2VTdHlsZToge1xuICAgIGhlaWdodDogMTkwLFxuICAgIHdpZHRoOiAxMzAsXG4gIH0sXG4gIGljb25BZHJlc3NTdHlsZToge21hcmdpblJpZ2h0OiA1LCBtYXJnaW5Ub3A6IDJ9LFxufSk7XG5leHBvcnQgZGVmYXVs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