bbcc103f2b67f072d7e092c50c19c1e8
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _reduxMockStore = _interopRequireDefault(require("redux-mock-store"));
var _reactNative = require("@testing-library/react-native");
var eva = _interopRequireWildcard(require("@eva-design/eva"));
var _components = require("@ui-kitten/components");
var _Home = _interopRequireDefault(require("../Home"));
var _reactRedux = require("react-redux");
var _hotels_response = _interopRequireDefault(require("./fixtures/hotels_response"));
var _native = require("@react-navigation/native");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var mockStore = (0, _reduxMockStore.default)();
var navigation = {
  navigate: jest.fn(),
  goBack: jest.fn()
};
var setup = function setup(store) {
  return (0, _reactNative.render)(_react.default.createElement(_reactRedux.Provider, {
    store: store
  }, _react.default.createElement(_components.ApplicationProvider, (0, _extends2.default)({}, eva, {
    theme: eva.light
  }), _react.default.createElement(_native.NavigationContainer, null, _react.default.createElement(_Home.default, {
    hotels: _hotels_response.default.result.hotels
  })))));
};
describe('Test homepage screen', function () {
  beforeEach(function () {
    mockStore.dispatch = jest.fn();
  });
  afterEach(_reactNative.cleanup);
  it('should display the list of hotels', function () {
    var store = mockStore({
      hotel: {
        hotels: _hotels_response.default.result.hotels
      }
    });
    setup(store);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWR1eE1vY2tTdG9yZSIsIl9yZWFjdE5hdGl2ZSIsImV2YSIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX2NvbXBvbmVudHMiLCJfSG9tZSIsIl9yZWFjdFJlZHV4IiwiX2hvdGVsc19yZXNwb25zZSIsIl9uYXRpdmUiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJub2RlSW50ZXJvcCIsIldlYWtNYXAiLCJjYWNoZUJhYmVsSW50ZXJvcCIsImNhY2hlTm9kZUludGVyb3AiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImNhY2hlIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJkZXNjIiwic2V0IiwibW9ja1N0b3JlIiwiY29uZmlndXJlU3RvcmUiLCJuYXZpZ2F0aW9uIiwibmF2aWdhdGUiLCJqZXN0IiwiZm4iLCJnb0JhY2siLCJzZXR1cCIsInN0b3JlIiwicmVuZGVyIiwiY3JlYXRlRWxlbWVudCIsIlByb3ZpZGVyIiwiQXBwbGljYXRpb25Qcm92aWRlciIsIl9leHRlbmRzMiIsInRoZW1lIiwibGlnaHQiLCJOYXZpZ2F0aW9uQ29udGFpbmVyIiwiaG90ZWxzIiwiaG90ZWxzX3Jlc3BvbnNlIiwicmVzdWx0IiwiZGVzY3JpYmUiLCJiZWZvcmVFYWNoIiwiZGlzcGF0Y2giLCJhZnRlckVhY2giLCJjbGVhbnVwIiwiaXQiLCJob3RlbCJdLCJzb3VyY2VzIjpbImhvbWUudGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjb25maWd1cmVTdG9yZSBmcm9tICdyZWR1eC1tb2NrLXN0b3JlJztcbmltcG9ydCB7XG4gIGNsZWFudXAsXG4gIGZpcmVFdmVudCxcbiAgcmVuZGVyLFxuICBzY3JlZW4sXG59IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJztcblxuaW1wb3J0ICogYXMgZXZhIGZyb20gJ0BldmEtZGVzaWduL2V2YSc7XG5pbXBvcnQge0FwcGxpY2F0aW9uUHJvdmlkZXJ9IGZyb20gJ0B1aS1raXR0ZW4vY29tcG9uZW50cyc7XG4vLyBpbXBvcnQgY29uZmlndXJlU3RvcmUgZnJvbSAnLi4vLi4vcmVkdXgvc3RvcmUnO1xuaW1wb3J0IEhvbWUgZnJvbSAnLi4vSG9tZSc7XG5pbXBvcnQge2dldEhvdGVsc30gZnJvbSAnLi4vLi4vcmVkdXgvYWN0aW9ucyc7XG5pbXBvcnQge1Byb3ZpZGVyfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgaG90ZWxzX3Jlc3BvbnNlIGZyb20gJy4vZml4dHVyZXMvaG90ZWxzX3Jlc3BvbnNlJztcbmltcG9ydCB7TmF2aWdhdGlvbkNvbnRhaW5lcn0gZnJvbSAnQHJlYWN0LW5hdmlnYXRpb24vbmF0aXZlJztcbmxldCBtb2NrU3RvcmUgPSBjb25maWd1cmVTdG9yZSgpO1xuXG5jb25zdCBuYXZpZ2F0aW9uID0ge1xuICBuYXZpZ2F0ZTogamVzdC5mbigpLFxuICBnb0JhY2s6IGplc3QuZm4oKSxcbn07XG5cbmNvbnN0IHNldHVwID0gc3RvcmUgPT5cbiAgcmVuZGVyKFxuICAgIDxQcm92aWRlciBzdG9yZT17c3RvcmV9PlxuICAgICAgPEFwcGxpY2F0aW9uUHJvdmlkZXIgey4uLmV2YX0gdGhlbWU9e2V2YS5saWdodH0+XG4gICAgICAgIDxOYXZpZ2F0aW9uQ29udGFpbmVyPlxuICAgICAgICAgIDxIb21lIGhvdGVscz17aG90ZWxzX3Jlc3BvbnNlLnJlc3VsdC5ob3RlbHN9IC8+XG4gICAgICAgIDwvTmF2aWdhdGlvbkNvbnRhaW5lcj5cbiAgICAgIDwvQXBwbGljYXRpb25Qcm92aWRlcj5cbiAgICA8L1Byb3ZpZGVyPixcbiAgKTtcblxuZGVzY3JpYmUoJ1Rlc3QgaG9tZXBhZ2Ugc2NyZWVuJywgKCkgPT4ge1xuICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICBtb2NrU3RvcmUuZGlzcGF0Y2ggPSBqZXN0LmZuKCk7XG4gIH0pO1xuXG4gIGFmdGVyRWFjaChjbGVhbnVwKTtcblxuICBpdCgnc2hvdWxkIGRpc3BsYXkgdGhlIGxpc3Qgb2YgaG90ZWxzJywgKCkgPT4ge1xuICAgIGNvbnN0IHN0b3JlID0gbW9ja1N0b3JlKHtcbiAgICAgIGhvdGVsOiB7XG4gICAgICAgIGhvdGVsczogaG90ZWxzX3Jlc3BvbnNlLnJlc3VsdC5ob3RlbHMsXG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgc2V0dXAoc3RvcmUpO1xuICB9KTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsZUFBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUUsWUFBQSxHQUFBRixPQUFBO0FBT0EsSUFBQUcsR0FBQSxHQUFBQyx1QkFBQSxDQUFBSixPQUFBO0FBQ0EsSUFBQUssV0FBQSxHQUFBTCxPQUFBO0FBRUEsSUFBQU0sS0FBQSxHQUFBUCxzQkFBQSxDQUFBQyxPQUFBO0FBRUEsSUFBQU8sV0FBQSxHQUFBUCxPQUFBO0FBQ0EsSUFBQVEsZ0JBQUEsR0FBQVQsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFTLE9BQUEsR0FBQVQsT0FBQTtBQUE2RCxTQUFBVSx5QkFBQUMsV0FBQSxlQUFBQyxPQUFBLGtDQUFBQyxpQkFBQSxPQUFBRCxPQUFBLFFBQUFFLGdCQUFBLE9BQUFGLE9BQUEsWUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLFdBQUEsV0FBQUEsV0FBQSxHQUFBRyxnQkFBQSxHQUFBRCxpQkFBQSxLQUFBRixXQUFBO0FBQUEsU0FBQVAsd0JBQUFXLEdBQUEsRUFBQUosV0FBQSxTQUFBQSxXQUFBLElBQUFJLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLFdB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