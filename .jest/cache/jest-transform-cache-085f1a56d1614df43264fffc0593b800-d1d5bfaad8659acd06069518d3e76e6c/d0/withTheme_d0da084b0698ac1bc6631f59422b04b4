0d57ef6b9679a481f79c67035bc14ae2
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _deepmerge = _interopRequireDefault(require("deepmerge"));
var _hoistNonReactStatics = _interopRequireDefault(require("hoist-non-react-statics"));
var _ThemeProvider = require("./ThemeProvider");
var _theme = _interopRequireDefault(require("./theme"));
var _jsxRuntime = require("react/jsx-runtime");
var __rest = this && this.__rest || function (s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
var isClassComponent = function isClassComponent(Component) {
  return Boolean(Component.prototype && Component.prototype.isReactComponent);
};
var ThemedComponent = function ThemedComponent(WrappedComponent, themeKey, displayName) {
  return (0, _extends2.default)(function (props, forwardedRef) {
    var _children = props.children,
      rest = __rest(props, ["children"]);
    return (0, _jsxRuntime.jsx)(_ThemeProvider.ThemeConsumer, {
      children: function children(context) {
        if (!context) {
          var _newProps = (0, _extends2.default)((0, _extends2.default)({}, rest), {
            theme: _theme.default,
            children: _children
          });
          return isClassComponent(WrappedComponent) ? (0, _jsxRuntime.jsx)(WrappedComponent, (0, _extends2.default)({
            ref: forwardedRef
          }, _newProps)) : (0, _jsxRuntime.jsx)(WrappedComponent, (0, _extends2.default)({}, _newProps));
        }
        var theme = context.theme,
          updateTheme = context.updateTheme,
          replaceTheme = context.replaceTheme;
        var newProps = (0, _extends2.default)((0, _extends2.default)({
          theme: theme,
          updateTheme: updateTheme,
          replaceTheme: replaceTheme
        }, (0, _deepmerge.default)(themeKey && theme[themeKey] || {}, rest, {
          clone: false
        })), {
          children: _children
        });
        if (isClassComponent(WrappedComponent)) {
          return (0, _jsxRuntime.jsx)(WrappedComponent, (0, _extends2.default)({
            ref: forwardedRef
          }, newProps));
        }
        return (0, _jsxRuntime.jsx)(WrappedComponent, (0, _extends2.default)({}, newProps));
      }
    });
  }, {
    displayName: displayName
  });
};
function withTheme(WrappedComponent, themeKey) {
  var name = themeKey ? "Themed." + themeKey : "Themed." + (WrappedComponent.displayName || WrappedComponent.name || 'Component');
  var Component = ThemedComponent(WrappedComponent, themeKey, name);
  if (isClassComponent(WrappedComponent)) {
    return (0, _hoistNonReactStatics.default)(_react.default.forwardRef(Component), WrappedComponent);
  }
  return Component;
}
var _default = withTheme;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,