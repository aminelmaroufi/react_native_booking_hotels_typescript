c88a5e4b7a55116f4d5e57421bc19f92
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.TextElement = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _config = require("../config");
var _helpers = require("../helpers");
var _normalizeText = _interopRequireDefault(require("../helpers/normalizeText"));
var _jsxRuntime = require("react/jsx-runtime");
var __rest = this && this.__rest || function (s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
var TextElement = function TextElement(props) {
  var _a;
  var style = props.style,
    theme = props.theme,
    _props$children = props.children,
    children = _props$children === void 0 ? '' : _props$children,
    h1 = props.h1,
    h2 = props.h2,
    h3 = props.h3,
    h4 = props.h4,
    h1Style = props.h1Style,
    h2Style = props.h2Style,
    h3Style = props.h3Style,
    h4Style = props.h4Style,
    rest = __rest(props, ["style", "theme", "children", "h1", "h2", "h3", "h4", "h1Style", "h2Style", "h3Style", "h4Style"]);
  return (0, _jsxRuntime.jsx)(_reactNative.Text, (0, _extends2.default)({
    style: _reactNative.StyleSheet.flatten([(0, _extends2.default)((0, _extends2.default)({}, _reactNative.Platform.select({
      android: (0, _extends2.default)({}, _config.fonts.android.regular)
    })), {
      color: (_a = theme === null || theme === void 0 ? void 0 : theme.colors) === null || _a === void 0 ? void 0 : _a.black
    }), style, (h1 || h2 || h3 || h4) && styles.bold, h1 && _reactNative.StyleSheet.flatten([{
      fontSize: (0, _normalizeText.default)(40)
    }, h1Style]), h2 && _reactNative.StyleSheet.flatten([{
      fontSize: (0, _normalizeText.default)(34)
    }, h2Style]), h3 && _reactNative.StyleSheet.flatten([{
      fontSize: (0, _normalizeText.default)(28)
    }, h3Style]), h4 && _reactNative.StyleSheet.flatten([{
      fontSize: (0, _normalizeText.default)(22)
    }, h4Style])])
  }, (0, _helpers.patchWebProps)(rest), {
    children: children
  }));
};
exports.TextElement = TextElement;
TextElement.defaultProps = {
  h1: false,
  h2: false,
  h3: false,
  h4: false,
  style: {},
  h1Style: {},
  h2Style: {},
  h3Style: {},
  h4Style: {}
};
var styles = _reactNative.StyleSheet.create({
  bold: (0, _extends2.default)({}, _reactNative.Platform.select({
    android: (0, _extends2.default)({}, _config.fonts.android.bold)
  }))
});
var _default = (0, _config.withTheme)(TextElement, 'Text');
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,