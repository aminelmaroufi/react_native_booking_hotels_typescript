3fb7f78169861394ee6294d69e62a087
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var eva = _interopRequireWildcard(require("@eva-design/eva"));
var _components = require("@ui-kitten/components");
var _store = _interopRequireDefault(require("../../redux/store"));
var _Login = _interopRequireDefault(require("../Login"));
var _reactRedux = require("react-redux");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var store = (0, _store.default)();
var email = 'test@test.com';
var password = 'Azerty123@@';
var navigation = {
  navigate: jest.fn()
};
var setup = function setup() {
  return (0, _reactNative.render)(_react.default.createElement(_components.ApplicationProvider, (0, _extends2.default)({}, eva, {
    theme: eva.light
  }), _react.default.createElement(_reactRedux.Provider, {
    store: store
  }, _react.default.createElement(_Login.default, {
    navigation: navigation
  }))));
};
describe('Test Login Component', function () {
  beforeEach(function () {
    store.dispatch = jest.fn();
  });
  afterEach(_reactNative.cleanup);
  it('should render all form element', function () {
    setup();
    expect(_reactNative.screen.getByTestId('logo')).toBeDefined();
    expect(_reactNative.screen.getByTestId('email')).toBeDefined();
    expect(_reactNative.screen.getByTestId('password')).toBeDefined();
    expect(_reactNative.screen.getByTestId('login-btn')).toBeDefined();
  });
  it('should show password value after clicking show passwrd icon', function () {
    setup();
    var passwordInput = _reactNative.screen.getByTestId('password');
    expect(passwordInput.props.secureTextEntry).toBe(true);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsImV2YSIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX2NvbXBvbmVudHMiLCJfc3RvcmUiLCJfTG9naW4iLCJfcmVhY3RSZWR1eCIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJzdG9yZSIsImNvbmZpZ3VyZVN0b3JlIiwiZW1haWwiLCJwYXNzd29yZCIsIm5hdmlnYXRpb24iLCJuYXZpZ2F0ZSIsImplc3QiLCJmbiIsInNldHVwIiwicmVuZGVyIiwiY3JlYXRlRWxlbWVudCIsIkFwcGxpY2F0aW9uUHJvdmlkZXIiLCJfZXh0ZW5kczIiLCJ0aGVtZSIsImxpZ2h0IiwiUHJvdmlkZXIiLCJkZXNjcmliZSIsImJlZm9yZUVhY2giLCJkaXNwYXRjaCIsImFmdGVyRWFjaCIsImNsZWFudXAiLCJpdCIsImV4cGVjdCIsInNjcmVlbiIsImdldEJ5VGVzdElkIiwidG9CZURlZmluZWQiLCJwYXNzd29yZElucHV0IiwicHJvcHMiLCJzZWN1cmVUZXh0RW50cnkiLCJ0b0JlIl0sInNvdXJjZXMiOlsibG9naW4udGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7Y2xlYW51cCwgcmVuZGVyLCBzY3JlZW59IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJztcblxuaW1wb3J0IHVzZXJFdmVudCBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3VzZXItZXZlbnQnO1xuaW1wb3J0ICogYXMgZXZhIGZyb20gJ0BldmEtZGVzaWduL2V2YSc7XG5pbXBvcnQge0FwcGxpY2F0aW9uUHJvdmlkZXIsIExheW91dCwgU3Bpbm5lcn0gZnJvbSAnQHVpLWtpdHRlbi9jb21wb25lbnRzJztcbmltcG9ydCBjb25maWd1cmVTdG9yZSBmcm9tICcuLi8uLi9yZWR1eC9zdG9yZSc7XG5pbXBvcnQgTG9naW4gZnJvbSAnLi4vTG9naW4nO1xuaW1wb3J0IHtsb2dpblJlcXVlc3R9IGZyb20gJy4uLy4uL2FjdGlvbnMnO1xuaW1wb3J0IHtQcm92aWRlcn0gZnJvbSAncmVhY3QtcmVkdXgnO1xuXG5sZXQgc3RvcmUgPSBjb25maWd1cmVTdG9yZSgpO1xuXG5jb25zdCBlbWFpbCA9ICd0ZXN0QHRlc3QuY29tJztcbmNvbnN0IHBhc3N3b3JkID0gJ0F6ZXJ0eTEyM0BAJztcblxuY29uc3QgbmF2aWdhdGlvbiA9IHtcbiAgbmF2aWdhdGU6IGplc3QuZm4oKSxcbn07XG5jb25zdCBzZXR1cCA9ICgpID0+XG4gIHJlbmRlcihcbiAgICA8QXBwbGljYXRpb25Qcm92aWRlciB7Li4uZXZhfSB0aGVtZT17ZXZhLmxpZ2h0fT5cbiAgICAgIDxQcm92aWRlciBzdG9yZT17c3RvcmV9PlxuICAgICAgICA8TG9naW4gbmF2aWdhdGlvbj17bmF2aWdhdGlvbn0gLz5cbiAgICAgIDwvUHJvdmlkZXI+XG4gICAgPC9BcHBsaWNhdGlvblByb3ZpZGVyPixcbiAgKTtcblxuZGVzY3JpYmUoJ1Rlc3QgTG9naW4gQ29tcG9uZW50JywgKCkgPT4ge1xuICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICBzdG9yZS5kaXNwYXRjaCA9IGplc3QuZm4oKTtcbiAgfSk7XG5cbiAgYWZ0ZXJFYWNoKGNsZWFudXApO1xuXG4gIGl0KCdzaG91bGQgcmVuZGVyIGFsbCBmb3JtIGVsZW1lbnQnLCAoKSA9PiB7XG4gICAgc2V0dXAoKTtcblxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXN0SWQoJ2xvZ28nKSkudG9CZURlZmluZWQoKTtcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGVzdElkKCdlbWFpbCcpKS50b0JlRGVmaW5lZCgpO1xuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXN0SWQoJ3Bhc3N3b3JkJykpLnRvQmVEZWZpbmVkKCk7XG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRlc3RJZCgnbG9naW4tYnRuJykpLnRvQmVEZWZpbmVkKCk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgc2hvdyBwYXNzd29yZCB2YWx1ZSBhZnRlciBjbGlja2luZyBzaG93IHBhc3N3cmQgaWNvbicsICgpID0+IHtcbiAgICBzZXR1cCgpO1xuICAgIGNvbnN0IHBhc3N3b3JkSW5wdXQgPSBzY3JlZW4uZ2V0QnlUZXN0SWQoJ3Bhc3N3b3JkJyk7XG4gICAgZXhwZWN0KHBhc3N3b3JkSW5wdXQucHJvcHMuc2VjdXJlVGV4dEVudHJ5KS50b0JlKHRydWUpO1xuICB9KTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBR0EsSUFBQUUsR0FBQSxHQUFBQyx1QkFBQSxDQUFBSCxPQUFBO0FBQ0EsSUFBQUksV0FBQSxHQUFBSixPQUFBO0FBQ0EsSUFBQUssTUFBQSxHQUFBTixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQU0sTUFBQSxHQUFBUCxzQkFBQSxDQUFBQyxPQUFBO0FBRUEsSUFBQU8sV0FBQSxHQUFBUCxPQUFBO0FBQXFDLFNBQUFRLHlCQUFBQyxXQUFBLGVBQUFDLE9BQUEsa0NBQUFDLGlCQUFBLE9BQUFELE9BQUEsUUFBQUUsZ0JBQUEsT0FBQUYsT0FBQSxZQUFBRix3QkFBQSxZQUFBQSx5QkFBQUMsV0FBQSxXQUFBQSxXQUFBLEdBQUFHLGdCQUFBLEdBQUFELGlCQUFBLEtBQUFGLFdBQUE7QUFB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