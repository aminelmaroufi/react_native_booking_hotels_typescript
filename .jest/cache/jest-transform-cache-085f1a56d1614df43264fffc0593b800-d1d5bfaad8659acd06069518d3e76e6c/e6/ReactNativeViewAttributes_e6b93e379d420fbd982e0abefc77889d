eca2655694800f4666e16ff8de15d99f
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _ReactNativeStyleAttributes = _interopRequireDefault(require("./ReactNativeStyleAttributes"));
var UIView = {
  pointerEvents: true,
  accessible: true,
  accessibilityActions: true,
  accessibilityLabel: true,
  accessibilityLiveRegion: true,
  accessibilityRole: true,
  accessibilityState: true,
  accessibilityValue: true,
  accessibilityHint: true,
  importantForAccessibility: true,
  nativeID: true,
  testID: true,
  renderToHardwareTextureAndroid: true,
  shouldRasterizeIOS: true,
  onLayout: true,
  onAccessibilityAction: true,
  onAccessibilityTap: true,
  onMagicTap: true,
  onAccessibilityEscape: true,
  collapsable: true,
  needsOffscreenAlphaCompositing: true,
  style: _ReactNativeStyleAttributes.default
};
var RCTView = (0, _extends2.default)({}, UIView, {
  removeClippedSubviews: true
});
var ReactNativeViewAttributes = {
  UIView: UIView,
  RCTView: RCTView
};
module.exports = ReactNativeViewAttributes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9leHRlbmRzMiIsIl9SZWFjdE5hdGl2ZVN0eWxlQXR0cmlidXRlcyIsIlVJVmlldyIsInBvaW50ZXJFdmVudHMiLCJhY2Nlc3NpYmxlIiwiYWNjZXNzaWJpbGl0eUFjdGlvbnMiLCJhY2Nlc3NpYmlsaXR5TGFiZWwiLCJhY2Nlc3NpYmlsaXR5TGl2ZVJlZ2lvbiIsImFjY2Vzc2liaWxpdHlSb2xlIiwiYWNjZXNzaWJpbGl0eVN0YXRlIiwiYWNjZXNzaWJpbGl0eVZhbHVlIiwiYWNjZXNzaWJpbGl0eUhpbnQiLCJpbXBvcnRhbnRGb3JBY2Nlc3NpYmlsaXR5IiwibmF0aXZlSUQiLCJ0ZXN0SUQiLCJyZW5kZXJUb0hhcmR3YXJlVGV4dHVyZUFuZHJvaWQiLCJzaG91bGRSYXN0ZXJpemVJT1MiLCJvbkxheW91dCIsIm9uQWNjZXNzaWJpbGl0eUFjdGlvbiIsIm9uQWNjZXNzaWJpbGl0eVRhcCIsIm9uTWFnaWNUYXAiLCJvbkFjY2Vzc2liaWxpdHlFc2NhcGUiLCJjb2xsYXBzYWJsZSIsIm5lZWRzT2Zmc2NyZWVuQWxwaGFDb21wb3NpdGluZyIsInN0eWxlIiwiUmVhY3ROYXRpdmVTdHlsZUF0dHJpYnV0ZXMiLCJSQ1RWaWV3IiwiZGVmYXVsdCIsInJlbW92ZUNsaXBwZWRTdWJ2aWV3cyIsIlJlYWN0TmF0aXZlVmlld0F0dHJpYnV0ZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiUmVhY3ROYXRpdmVWaWV3QXR0cmlidXRlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93IHN0cmljdC1sb2NhbFxuICogQGZvcm1hdFxuICovXG5cbid1c2Ugc3RyaWN0JztcbmltcG9ydCBSZWFjdE5hdGl2ZVN0eWxlQXR0cmlidXRlcyBmcm9tICcuL1JlYWN0TmF0aXZlU3R5bGVBdHRyaWJ1dGVzJztcblxuY29uc3QgVUlWaWV3ID0ge1xuICBwb2ludGVyRXZlbnRzOiB0cnVlLFxuICBhY2Nlc3NpYmxlOiB0cnVlLFxuICBhY2Nlc3NpYmlsaXR5QWN0aW9uczogdHJ1ZSxcbiAgYWNjZXNzaWJpbGl0eUxhYmVsOiB0cnVlLFxuICBhY2Nlc3NpYmlsaXR5TGl2ZVJlZ2lvbjogdHJ1ZSxcbiAgYWNjZXNzaWJpbGl0eVJvbGU6IHRydWUsXG4gIGFjY2Vzc2liaWxpdHlTdGF0ZTogdHJ1ZSxcbiAgYWNjZXNzaWJpbGl0eVZhbHVlOiB0cnVlLFxuICBhY2Nlc3NpYmlsaXR5SGludDogdHJ1ZSxcbiAgaW1wb3J0YW50Rm9yQWNjZXNzaWJpbGl0eTogdHJ1ZSxcbiAgbmF0aXZlSUQ6IHRydWUsXG4gIHRlc3RJRDogdHJ1ZSxcbiAgcmVuZGVyVG9IYXJkd2FyZVRleHR1cmVBbmRyb2lkOiB0cnVlLFxuICBzaG91bGRSYXN0ZXJpemVJT1M6IHRydWUsXG4gIG9uTGF5b3V0OiB0cnVlLFxuICBvbkFjY2Vzc2liaWxpdHlBY3Rpb246IHRydWUsXG4gIG9uQWNjZXNzaWJpbGl0eVRhcDogdHJ1ZSxcbiAgb25NYWdpY1RhcDogdHJ1ZSxcbiAgb25BY2Nlc3NpYmlsaXR5RXNjYXBlOiB0cnVlLFxuICBjb2xsYXBzYWJsZTogdHJ1ZSxcbiAgbmVlZHNPZmZzY3JlZW5BbHBoYUNvbXBvc2l0aW5nOiB0cnVlLFxuICBzdHlsZTogUmVhY3ROYXRpdmVTdHlsZUF0dHJpYnV0ZXMsXG59O1xuXG5jb25zdCBSQ1RWaWV3ID0ge1xuICAuLi5VSVZpZXcsXG5cbiAgLy8gVGhpcyBpcyBhIHNwZWNpYWwgcGVyZm9ybWFuY2UgcHJvcGVydHkgZXhwb3NlZCBieSBSQ1RWaWV3IGFuZCB1c2VmdWwgZm9yXG4gIC8vIHNjcm9sbGluZyBjb250ZW50IHdoZW4gdGhlcmUgYXJlIG1hbnkgc3Vidmlld3MsIG1vc3Qgb2Ygd2hpY2ggYXJlIG9mZnNjcmVlbi5cbiAgLy8gRm9yIHRoaXMgcHJvcGVydHkgdG8gYmUgZWZmZWN0aXZlLCBpdCBtdXN0IGJlIGFwcGxpZWQgdG8gYSB2aWV3IHRoYXQgY29udGFpbnNcbiAgLy8gbWFueSBzdWJ2aWV3cyB0aGF0IGV4dGVuZCBvdXRzaWRlIGl0cyBib3VuZC4gVGhlIHN1YnZpZXdzIG11c3QgYWxzbyBoYXZlXG4gIC8vIG92ZXJmbG93OiBoaWRkZW4sIGFzIHNob3VsZCB0aGUgY29udGFpbmluZyB2aWV3IChvciBvbmUgb2YgaXRzIHN1cGVydmlld3MpLlxuICByZW1vdmVDbGlwcGVkU3Vidmlld3M6IHRydWUsXG59O1xuXG5jb25zdCBSZWFjdE5hdGl2ZVZpZXdBdHRyaWJ1dGVzID0ge1xuICBVSVZpZXc6IFVJVmlldyxcbiAgUkNUVmlldzogUkNUVmlldyxcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3ROYXRpdmVWaWV3QXR0cmlidXRlcztcbiJdLCJtYXBwaW5ncyI6IkFBVUEsWUFBWTs7QUFBQyxJQUFBQSxzQkFBQSxHQUFBQyxPQUFBO0FBQUEsSUFBQUMsU0FBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBQ2IsSUFBQUUsMkJBQUEsR0FBQUgsc0JBQUEsQ0FBQUMsT0FBQTtBQUVBLElBQU1HLE1BQU0sR0FBRztFQUNiQyxhQUFhLEVBQUUsSUFBSTtFQUNuQkMsVUFBVSxFQUFFLElBQUk7RUFDaEJDLG9CQUFvQixFQUFFLElBQUk7RUFDMUJDLGtCQUFrQixFQUFFLElBQUk7RUFDeEJDLHVCQUF1QixFQUFFLElBQUk7RUFDN0JDLGlCQUFpQixFQUFFLElBQUk7RUFDdkJDLGtCQUFrQixFQUFFLElBQUk7RUFDeEJDLGtCQUFrQixFQUFFLElBQUk7RUFDeEJDLGlCQUFpQixFQUFFLElBQUk7RUFDdkJDLHlCQUF5QixFQUFFLElBQUk7RUFDL0JDLFFBQVEsRUFBRSxJQUFJO0VBQ2RDLE1BQU0sRUFBRSxJQUFJO0VBQ1pDLDhCQUE4QixFQUFFLElBQUk7RUFDcENDLGtCQUFrQixFQUFFLElBQUk7RUFDeEJDLFFBQVEsRUFBRSxJQUFJO0VBQ2RDLHFCQUFxQixFQUFFLElBQUk7RUFDM0JDLGtCQUFrQixFQUFFLElBQUk7RUFDeEJDLFVBQVUsRUFBRSxJQUFJO0VBQ2hCQyxxQkFBcUIsRUFBRSxJQUFJO0VBQzNCQyxXQUFXLEVBQUUsSUFBSTtFQUNqQkMsOEJBQThCLEVBQUUsSUFBSTtFQUNwQ0MsS0FBSyxFQUFFQztBQUNULENBQUM7QUFFRCxJQUFNQyxPQUFPLE9BQUExQixTQUFBLENBQUEyQixPQUFBLE1BQ1J6QixNQUFNO0VBT1QwQixxQkFBcUIsRUFBRTtBQUFJLEVBQzVCO0FBRUQsSUFBTUMseUJBQXlCLEdBQUc7RUFDaEMzQixNQUFNLEVBQUVBLE1BQU07RUFDZHdCLE9BQU8sRUFBRUE7QUFDWCxDQUFDO0FBRURJLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHRix5QkFBeUIifQ==