d58a75b72330f770f61fac5f5f8ece37
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _reduxMockStore = _interopRequireDefault(require("redux-mock-store"));
var _reactNative = require("@testing-library/react-native");
var eva = _interopRequireWildcard(require("@eva-design/eva"));
var _components = require("@ui-kitten/components");
var _Home = _interopRequireDefault(require("../Home"));
var _reactRedux = require("react-redux");
var _hotels_response = _interopRequireDefault(require("./fixtures/hotels_response"));
var _native = require("@react-navigation/native");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var mockStore = (0, _reduxMockStore.default)();
var navigation = {
  navigate: jest.fn(),
  goBack: jest.fn()
};
var setup = function setup(store) {
  return (0, _reactNative.render)(_react.default.createElement(_reactRedux.Provider, {
    store: store
  }, _react.default.createElement(_components.ApplicationProvider, (0, _extends2.default)({}, eva, {
    theme: eva.light
  }), _react.default.createElement(_native.NavigationContainer, null, _react.default.createElement(_Home.default, {
    hotels: _hotels_response.default.result.hotels
  })))));
};
describe('Test homepage screen', function () {
  beforeEach(function () {
    mockStore.dispatch = jest.fn();
    var store = mockStore({
      hotel: {
        hotels: _hotels_response.default.result.hotels
      }
    });
    setup(store);
  });
  afterEach(_reactNative.cleanup);
  it('should display the list of hotels', function () {
    expect(_reactNative.screen.getByTestId('search-box')).toBeDefined();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWR1eE1vY2tTdG9yZSIsIl9yZWFjdE5hdGl2ZSIsImV2YSIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX2NvbXBvbmVudHMiLCJfSG9tZSIsIl9yZWFjdFJlZHV4IiwiX2hvdGVsc19yZXNwb25zZSIsIl9uYXRpdmUiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJub2RlSW50ZXJvcCIsIldlYWtNYXAiLCJjYWNoZUJhYmVsSW50ZXJvcCIsImNhY2hlTm9kZUludGVyb3AiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImNhY2hlIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJkZXNjIiwic2V0IiwibW9ja1N0b3JlIiwiY29uZmlndXJlU3RvcmUiLCJuYXZpZ2F0aW9uIiwibmF2aWdhdGUiLCJqZXN0IiwiZm4iLCJnb0JhY2siLCJzZXR1cCIsInN0b3JlIiwicmVuZGVyIiwiY3JlYXRlRWxlbWVudCIsIlByb3ZpZGVyIiwiQXBwbGljYXRpb25Qcm92aWRlciIsIl9leHRlbmRzMiIsInRoZW1lIiwibGlnaHQiLCJOYXZpZ2F0aW9uQ29udGFpbmVyIiwiaG90ZWxzIiwiaG90ZWxzX3Jlc3BvbnNlIiwicmVzdWx0IiwiZGVzY3JpYmUiLCJiZWZvcmVFYWNoIiwiZGlzcGF0Y2giLCJob3RlbCIsImFmdGVyRWFjaCIsImNsZWFudXAiLCJpdCIsImV4cGVjdCIsInNjcmVlbiIsImdldEJ5VGVzdElkIiwidG9CZURlZmluZWQiXSwic291cmNlcyI6WyJob21lLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY29uZmlndXJlU3RvcmUgZnJvbSAncmVkdXgtbW9jay1zdG9yZSc7XG5pbXBvcnQge1xuICBjbGVhbnVwLFxuICBmaXJlRXZlbnQsXG4gIHJlbmRlcixcbiAgc2NyZWVuLFxufSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZSc7XG5cbmltcG9ydCAqIGFzIGV2YSBmcm9tICdAZXZhLWRlc2lnbi9ldmEnO1xuaW1wb3J0IHtBcHBsaWNhdGlvblByb3ZpZGVyfSBmcm9tICdAdWkta2l0dGVuL2NvbXBvbmVudHMnO1xuLy8gaW1wb3J0IGNvbmZpZ3VyZVN0b3JlIGZyb20gJy4uLy4uL3JlZHV4L3N0b3JlJztcbmltcG9ydCBIb21lIGZyb20gJy4uL0hvbWUnO1xuaW1wb3J0IHtnZXRIb3RlbHN9IGZyb20gJy4uLy4uL3JlZHV4L2FjdGlvbnMnO1xuaW1wb3J0IHtQcm92aWRlcn0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IGhvdGVsc19yZXNwb25zZSBmcm9tICcuL2ZpeHR1cmVzL2hvdGVsc19yZXNwb25zZSc7XG5pbXBvcnQge05hdmlnYXRpb25Db250YWluZXJ9IGZyb20gJ0ByZWFjdC1uYXZpZ2F0aW9uL25hdGl2ZSc7XG5sZXQgbW9ja1N0b3JlID0gY29uZmlndXJlU3RvcmUoKTtcblxuY29uc3QgbmF2aWdhdGlvbiA9IHtcbiAgbmF2aWdhdGU6IGplc3QuZm4oKSxcbiAgZ29CYWNrOiBqZXN0LmZuKCksXG59O1xuXG5jb25zdCBzZXR1cCA9IHN0b3JlID0+XG4gIHJlbmRlcihcbiAgICA8UHJvdmlkZXIgc3RvcmU9e3N0b3JlfT5cbiAgICAgIDxBcHBsaWNhdGlvblByb3ZpZGVyIHsuLi5ldmF9IHRoZW1lPXtldmEubGlnaHR9PlxuICAgICAgICA8TmF2aWdhdGlvbkNvbnRhaW5lcj5cbiAgICAgICAgICA8SG9tZSBob3RlbHM9e2hvdGVsc19yZXNwb25zZS5yZXN1bHQuaG90ZWxzfSAvPlxuICAgICAgICA8L05hdmlnYXRpb25Db250YWluZXI+XG4gICAgICA8L0FwcGxpY2F0aW9uUHJvdmlkZXI+XG4gICAgPC9Qcm92aWRlcj4sXG4gICk7XG5cbmRlc2NyaWJlKCdUZXN0IGhvbWVwYWdlIHNjcmVlbicsICgpID0+IHtcbiAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgbW9ja1N0b3JlLmRpc3BhdGNoID0gamVzdC5mbigpO1xuICAgIGNvbnN0IHN0b3JlID0gbW9ja1N0b3JlKHtcbiAgICAgIGhvdGVsOiB7XG4gICAgICAgIGhvdGVsczogaG90ZWxzX3Jlc3BvbnNlLnJlc3VsdC5ob3RlbHMsXG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgc2V0dXAoc3RvcmUpO1xuICB9KTtcblxuICBhZnRlckVhY2goY2xlYW51cCk7XG5cbiAgaXQoJ3Nob3VsZCBkaXNwbGF5IHRoZSBsaXN0IG9mIGhvdGVscycsICgpID0+IHtcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGVzdElkKCdzZWFyY2gtYm94JykpLnRvQmVEZWZpbmVkKCk7XG4gIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxlQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxZQUFBLEdBQUFGLE9BQUE7QUFPQSxJQUFBRyxHQUFBLEdBQUFDLHVCQUFBLENBQUFKLE9BQUE7QUFDQSxJQUFBSyxXQUFBLEdBQUFMLE9BQUE7QUFFQSxJQUFBTSxLQUFBLEdBQUFQLHNCQUFBLENBQUFDLE9BQUE7QUFFQSxJQUFBTyxXQUFBLEdBQUFQLE9BQUE7QUFDQSxJQUFBUSxnQkFBQSxHQUFBVCxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQVMsT0FBQSxHQUFBVCxPQUFBO0FBQTZELFNBQUFVLHlCQUFBQyxXQUFBLGVBQUFDLE9BQUEsa0NBQUFDLGlCQUFBLE9BQUFELE9BQUEsUUFBQUUsZ0JBQUEsT0FBQUYsT0FBQSxZQUFBRix3QkFBQSxZQUFBQSx5QkFBQUMsV0FBQSxXQUFBQSxXQUFBLEdBQUFHLGdC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