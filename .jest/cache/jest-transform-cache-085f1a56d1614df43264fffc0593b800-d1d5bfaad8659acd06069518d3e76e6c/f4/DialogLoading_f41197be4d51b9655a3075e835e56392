b5e7604cf1de573f115fba4cff49cbae
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _config = require("../config");
var _jsxRuntime = require("react/jsx-runtime");
var DialogLoading = function DialogLoading(_ref) {
  var loadingStyle = _ref.loadingStyle,
    loadingProps = _ref.loadingProps,
    theme = _ref.theme;
  var _a, _b;
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: styles.loadingView,
    children: (0, _jsxRuntime.jsx)(_reactNative.ActivityIndicator, (0, _extends2.default)({
      style: _reactNative.StyleSheet.flatten([styles.loading, loadingStyle]),
      color: (_a = loadingProps.color) !== null && _a !== void 0 ? _a : theme.colors.primary,
      size: (_b = loadingProps.size) !== null && _b !== void 0 ? _b : 'large',
      testID: "Dialog__Loading"
    }, loadingProps))
  });
};
DialogLoading.defaultProps = {
  loadingProps: {
    size: 'large'
  }
};
var styles = _reactNative.StyleSheet.create({
  loading: {
    marginVertical: 20
  },
  loadingView: {
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center'
  }
});
var _default = (0, _config.withTheme)(DialogLoading, 'DialogLoading');
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9jb25maWciLCJfanN4UnVudGltZSIsIkRpYWxvZ0xvYWRpbmciLCJfcmVmIiwibG9hZGluZ1N0eWxlIiwibG9hZGluZ1Byb3BzIiwidGhlbWUiLCJfYSIsIl9iIiwianN4IiwiVmlldyIsInN0eWxlIiwic3R5bGVzIiwibG9hZGluZ1ZpZXciLCJjaGlsZHJlbiIsIkFjdGl2aXR5SW5kaWNhdG9yIiwiX2V4dGVuZHMyIiwiZGVmYXVsdCIsIlN0eWxlU2hlZXQiLCJmbGF0dGVuIiwibG9hZGluZyIsImNvbG9yIiwiY29sb3JzIiwicHJpbWFyeSIsInNpemUiLCJ0ZXN0SUQiLCJkZWZhdWx0UHJvcHMiLCJjcmVhdGUiLCJtYXJnaW5WZXJ0aWNhbCIsImZsZXhEaXJlY3Rpb24iLCJqdXN0aWZ5Q29udGVudCIsImFsaWduSXRlbXMiLCJfZGVmYXVsdCIsIndpdGhUaGVtZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJEaWFsb2dMb2FkaW5nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBBY3Rpdml0eUluZGljYXRvciwgVmlldywgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHsgd2l0aFRoZW1lIH0gZnJvbSAnLi4vY29uZmlnJztcbmNvbnN0IERpYWxvZ0xvYWRpbmcgPSAoeyBsb2FkaW5nU3R5bGUsIGxvYWRpbmdQcm9wcywgdGhlbWUsIH0pID0+IHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIHJldHVybiAoPFZpZXcgc3R5bGU9e3N0eWxlcy5sb2FkaW5nVmlld30+XG4gICAgICA8QWN0aXZpdHlJbmRpY2F0b3Igc3R5bGU9e1N0eWxlU2hlZXQuZmxhdHRlbihbc3R5bGVzLmxvYWRpbmcsIGxvYWRpbmdTdHlsZV0pfSBjb2xvcj17KF9hID0gbG9hZGluZ1Byb3BzLmNvbG9yKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiB0aGVtZS5jb2xvcnMucHJpbWFyeX0gc2l6ZT17KF9iID0gbG9hZGluZ1Byb3BzLnNpemUpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6ICdsYXJnZSd9IHRlc3RJRD1cIkRpYWxvZ19fTG9hZGluZ1wiIHsuLi5sb2FkaW5nUHJvcHN9Lz5cbiAgICA8L1ZpZXc+KTtcbn07XG5EaWFsb2dMb2FkaW5nLmRlZmF1bHRQcm9wcyA9IHtcbiAgICBsb2FkaW5nUHJvcHM6IHsgc2l6ZTogJ2xhcmdlJyB9LFxufTtcbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgICBsb2FkaW5nOiB7XG4gICAgICAgIG1hcmdpblZlcnRpY2FsOiAyMCxcbiAgICB9LFxuICAgIGxvYWRpbmdWaWV3OiB7XG4gICAgICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIH0sXG59KTtcbmV4cG9ydCBkZWZhdWx0IHdpdGhUaGVtZShEaWFsb2dMb2FkaW5nLCAnRGlhbG9nTG9hZGluZycpO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxZQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxPQUFBLEdBQUFGLE9BQUE7QUFBc0MsSUFBQUcsV0FBQSxHQUFBSCxPQUFBO0FBQ3RDLElBQU1JLGFBQWEsR0FBRyxTQUFoQkEsYUFBYUEsQ0FBQUMsSUFBQSxFQUErQztFQUFBLElBQXpDQyxZQUFZLEdBQUFELElBQUEsQ0FBWkMsWUFBWTtJQUFFQyxZQUFZLEdBQUFGLElBQUEsQ0FBWkUsWUFBWTtJQUFFQyxLQUFLLEdBQUFILElBQUEsQ0FBTEcsS0FBSztFQUN0RCxJQUFJQyxFQUFFLEVBQUVDLEVBQUU7RUFDVixPQUFRLElBQUFQLFdBQUEsQ0FBQVEsR0FBQSxFQUFDVixZQUFBLENBQUFXLElBQUk7SUFBQ0MsS0FBSyxFQUFFQyxNQUFNLENBQUNDLFdBQVk7SUFBQUMsUUFBQSxFQUN0QyxJQUFBYixXQUFBLENBQUFRLEdBQUEsRUFBQ1YsWUFBQSxDQUFBZ0IsaUJBQWlCLE1BQUFDLFNBQUEsQ0FBQUMsT0FBQTtNQUFDTixLQUFLLEVBQUVPLHVCQUFVLENBQUNDLE9BQU8sQ0FBQyxDQUFDUCxNQUFNLENBQUNRLE9BQU8sRUFBRWhCLFlBQVksQ0FBQyxDQUFFO01BQUNpQixLQUFLLEVBQUUsQ0FBQ2QsRUFBRSxHQUFHRixZQUFZLENBQUNnQixLQUFLLE1BQU0sSUFBSSxJQUFJZCxFQUFFLEtBQUssS0FBSyxDQUFDLEdBQUdBLEVBQUUsR0FBR0QsS0FBSyxDQUFDZ0IsTUFBTSxDQUFDQyxPQUFRO01BQUNDLElBQUksRUFBRSxDQUFDaEIsRUFBRSxHQUFHSCxZQUFZLENBQUNtQixJQUFJLE1BQU0sSUFBSSxJQUFJaEIsRUFBRSxLQUFLLEtBQUssQ0FBQyxHQUFHQSxFQUFFLEdBQUcsT0FBUTtNQUFDaUIsTUFBTSxFQUFDO0lBQWlCLEdBQUtwQixZQUFZO0VBQUcsRUFDdFI7QUFDWCxDQUFDO0FBQ0RILGFBQWEsQ0FBQ3dCLFlBQVksR0FBRztFQUN6QnJCLFlBQVksRUFBRTtJQUFFbUIsSUFBSSxFQUFFO0VBQVE7QUFDbEMsQ0FBQztBQUNELElBQU1aLE1BQU0sR0FBR00sdUJBQVUsQ0FBQ1MsTUFBTSxDQUFDO0VBQzdCUCxPQUFPLEVBQUU7SUFDTFEsY0FBYyxFQUFFO0VBQ3BCLENBQUM7RUFDRGYsV0FBVyxFQUFFO0lBQ1RnQixhQUFhLEVBQUUsS0FBSztJQUNwQkMsY0FBYyxFQUFFLFFBQVE7SUFDeEJDLFVBQVUsRUFBRTtFQUNoQjtBQUNKLENBQUMsQ0FBQztBQUFDLElBQUFDLFFBQUEsR0FDWSxJQUFBQyxpQkFBUyxFQUFDL0IsYUFBYSxFQUFFLGVBQWUsQ0FBQztBQUFBZ0MsT0FBQSxDQUFBakIsT0FBQSxHQUFBZSxRQUFBIn0=