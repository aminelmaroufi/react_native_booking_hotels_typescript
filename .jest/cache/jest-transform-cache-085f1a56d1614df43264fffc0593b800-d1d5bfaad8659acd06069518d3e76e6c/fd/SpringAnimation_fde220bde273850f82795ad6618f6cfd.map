{"version":3,"names":["_interopRequireDefault","require","_classCallCheck2","_createClass2","_get2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","AnimatedValue","AnimatedValueXY","AnimatedInterpolation","Animation","SpringConfig","invariant","_require","shouldUseNativeDriver","SpringAnimation","_Animation","_super","config","_config$overshootClam","_config$restDisplacem","_config$restSpeedThre","_config$velocity","_config$velocity2","_config$delay","_config$isInteraction","_config$iterations","_this","_overshootClamping","overshootClamping","_restDisplacementThreshold","restDisplacementThreshold","_restSpeedThreshold","restSpeedThreshold","_initialVelocity","velocity","_lastVelocity","_toValue","toValue","_delay","delay","_useNativeDriver","__isInteraction","isInteraction","__iterations","iterations","stiffness","undefined","damping","mass","_config$stiffness","_config$damping","_config$mass","bounciness","speed","tension","friction","_stiffness","_damping","_mass","_config$bounciness","_config$speed","springConfig","fromBouncinessAndSpeed","_config$tension","_config$friction","fromOrigamiTensionAndFriction","key","value","__getNativeAnimationConfig","_this$_initialVelocit","type","initialVelocity","start","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","_this2","__active","_startPosition","_lastPosition","_onUpdate","__onEnd","_lastTime","Date","now","_frameTime","internalState","getInternalState","lastPosition","lastVelocity","lastTime","__startNativeAnimation","_timeout","setTimeout","MAX_STEPS","deltaTime","c","m","k","v0","zeta","Math","sqrt","omega0","omega1","x0","position","t","envelope","exp","sin","cos","isOvershooting","isVelocity","abs","isDisplacement","__debouncedOnEnd","finished","_animationFrame","requestAnimationFrame","bind","stop","clearTimeout","global","cancelAnimationFrame","module","exports"],"sources":["SpringAnimation.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst AnimatedValue = require('../nodes/AnimatedValue');\nconst AnimatedValueXY = require('../nodes/AnimatedValueXY');\nconst AnimatedInterpolation = require('../nodes/AnimatedInterpolation');\nconst Animation = require('./Animation');\nconst SpringConfig = require('../SpringConfig');\n\nconst invariant = require('invariant');\n\nconst {shouldUseNativeDriver} = require('../NativeAnimatedHelper');\n\nimport type {AnimationConfig, EndCallback} from './Animation';\n\nexport type SpringAnimationConfig = {\n  ...AnimationConfig,\n  toValue:\n    | number\n    | AnimatedValue\n    | {\n        x: number,\n        y: number,\n        ...\n      }\n    | AnimatedValueXY\n    | AnimatedInterpolation,\n  overshootClamping?: boolean,\n  restDisplacementThreshold?: number,\n  restSpeedThreshold?: number,\n  velocity?:\n    | number\n    | {\n        x: number,\n        y: number,\n        ...\n      },\n  bounciness?: number,\n  speed?: number,\n  tension?: number,\n  friction?: number,\n  stiffness?: number,\n  damping?: number,\n  mass?: number,\n  delay?: number,\n};\n\nexport type SpringAnimationConfigSingle = {\n  ...AnimationConfig,\n  toValue: number | AnimatedValue | AnimatedInterpolation,\n  overshootClamping?: boolean,\n  restDisplacementThreshold?: number,\n  restSpeedThreshold?: number,\n  velocity?: number,\n  bounciness?: number,\n  speed?: number,\n  tension?: number,\n  friction?: number,\n  stiffness?: number,\n  damping?: number,\n  mass?: number,\n  delay?: number,\n};\n\nclass SpringAnimation extends Animation {\n  _overshootClamping: boolean;\n  _restDisplacementThreshold: number;\n  _restSpeedThreshold: number;\n  _lastVelocity: number;\n  _startPosition: number;\n  _lastPosition: number;\n  _fromValue: number;\n  _toValue: any;\n  _stiffness: number;\n  _damping: number;\n  _mass: number;\n  _initialVelocity: number;\n  _delay: number;\n  _timeout: any;\n  _startTime: number;\n  _lastTime: number;\n  _frameTime: number;\n  _onUpdate: (value: number) => void;\n  _animationFrame: any;\n  _useNativeDriver: boolean;\n\n  constructor(config: SpringAnimationConfigSingle) {\n    super();\n\n    this._overshootClamping = config.overshootClamping ?? false;\n    this._restDisplacementThreshold = config.restDisplacementThreshold ?? 0.001;\n    this._restSpeedThreshold = config.restSpeedThreshold ?? 0.001;\n    this._initialVelocity = config.velocity ?? 0;\n    this._lastVelocity = config.velocity ?? 0;\n    this._toValue = config.toValue;\n    this._delay = config.delay ?? 0;\n    this._useNativeDriver = shouldUseNativeDriver(config);\n    this.__isInteraction = config.isInteraction ?? !this._useNativeDriver;\n    this.__iterations = config.iterations ?? 1;\n\n    if (\n      config.stiffness !== undefined ||\n      config.damping !== undefined ||\n      config.mass !== undefined\n    ) {\n      invariant(\n        config.bounciness === undefined &&\n          config.speed === undefined &&\n          config.tension === undefined &&\n          config.friction === undefined,\n        'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one',\n      );\n      this._stiffness = config.stiffness ?? 100;\n      this._damping = config.damping ?? 10;\n      this._mass = config.mass ?? 1;\n    } else if (config.bounciness !== undefined || config.speed !== undefined) {\n      // Convert the origami bounciness/speed values to stiffness/damping\n      // We assume mass is 1.\n      invariant(\n        config.tension === undefined &&\n          config.friction === undefined &&\n          config.stiffness === undefined &&\n          config.damping === undefined &&\n          config.mass === undefined,\n        'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one',\n      );\n      const springConfig = SpringConfig.fromBouncinessAndSpeed(\n        config.bounciness ?? 8,\n        config.speed ?? 12,\n      );\n      this._stiffness = springConfig.stiffness;\n      this._damping = springConfig.damping;\n      this._mass = 1;\n    } else {\n      // Convert the origami tension/friction values to stiffness/damping\n      // We assume mass is 1.\n      const springConfig = SpringConfig.fromOrigamiTensionAndFriction(\n        config.tension ?? 40,\n        config.friction ?? 7,\n      );\n      this._stiffness = springConfig.stiffness;\n      this._damping = springConfig.damping;\n      this._mass = 1;\n    }\n\n    invariant(this._stiffness > 0, 'Stiffness value must be greater than 0');\n    invariant(this._damping > 0, 'Damping value must be greater than 0');\n    invariant(this._mass > 0, 'Mass value must be greater than 0');\n  }\n\n  __getNativeAnimationConfig(): {|\n    damping: number,\n    initialVelocity: number,\n    iterations: number,\n    mass: number,\n    overshootClamping: boolean,\n    restDisplacementThreshold: number,\n    restSpeedThreshold: number,\n    stiffness: number,\n    toValue: any,\n    type: $TEMPORARY$string<'spring'>,\n  |} {\n    return {\n      type: 'spring',\n      overshootClamping: this._overshootClamping,\n      restDisplacementThreshold: this._restDisplacementThreshold,\n      restSpeedThreshold: this._restSpeedThreshold,\n      stiffness: this._stiffness,\n      damping: this._damping,\n      mass: this._mass,\n      initialVelocity: this._initialVelocity ?? this._lastVelocity,\n      toValue: this._toValue,\n      iterations: this.__iterations,\n    };\n  }\n\n  start(\n    fromValue: number,\n    onUpdate: (value: number) => void,\n    onEnd: ?EndCallback,\n    previousAnimation: ?Animation,\n    animatedValue: AnimatedValue,\n  ): void {\n    this.__active = true;\n    this._startPosition = fromValue;\n    this._lastPosition = this._startPosition;\n\n    this._onUpdate = onUpdate;\n    this.__onEnd = onEnd;\n    this._lastTime = Date.now();\n    this._frameTime = 0.0;\n\n    if (previousAnimation instanceof SpringAnimation) {\n      const internalState = previousAnimation.getInternalState();\n      this._lastPosition = internalState.lastPosition;\n      this._lastVelocity = internalState.lastVelocity;\n      // Set the initial velocity to the last velocity\n      this._initialVelocity = this._lastVelocity;\n      this._lastTime = internalState.lastTime;\n    }\n\n    const start = () => {\n      if (this._useNativeDriver) {\n        this.__startNativeAnimation(animatedValue);\n      } else {\n        this.onUpdate();\n      }\n    };\n\n    //  If this._delay is more than 0, we start after the timeout.\n    if (this._delay) {\n      this._timeout = setTimeout(start, this._delay);\n    } else {\n      start();\n    }\n  }\n\n  getInternalState(): Object {\n    return {\n      lastPosition: this._lastPosition,\n      lastVelocity: this._lastVelocity,\n      lastTime: this._lastTime,\n    };\n  }\n\n  /**\n   * This spring model is based off of a damped harmonic oscillator\n   * (https://en.wikipedia.org/wiki/Harmonic_oscillator#Damped_harmonic_oscillator).\n   *\n   * We use the closed form of the second order differential equation:\n   *\n   * x'' + (2ζ⍵_0)x' + ⍵^2x = 0\n   *\n   * where\n   *    ⍵_0 = √(k / m) (undamped angular frequency of the oscillator),\n   *    ζ = c / 2√mk (damping ratio),\n   *    c = damping constant\n   *    k = stiffness\n   *    m = mass\n   *\n   * The derivation of the closed form is described in detail here:\n   * http://planetmath.org/sites/default/files/texpdf/39745.pdf\n   *\n   * This algorithm happens to match the algorithm used by CASpringAnimation,\n   * a QuartzCore (iOS) API that creates spring animations.\n   */\n  onUpdate(): void {\n    // If for some reason we lost a lot of frames (e.g. process large payload or\n    // stopped in the debugger), we only advance by 4 frames worth of\n    // computation and will continue on the next frame. It's better to have it\n    // running at faster speed than jumping to the end.\n    const MAX_STEPS = 64;\n    let now = Date.now();\n    if (now > this._lastTime + MAX_STEPS) {\n      now = this._lastTime + MAX_STEPS;\n    }\n\n    const deltaTime = (now - this._lastTime) / 1000;\n    this._frameTime += deltaTime;\n\n    const c: number = this._damping;\n    const m: number = this._mass;\n    const k: number = this._stiffness;\n    const v0: number = -this._initialVelocity;\n\n    const zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n    const omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n    const omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta); // exponential decay\n    const x0 = this._toValue - this._startPosition; // calculate the oscillation from x0 = 1 to x = 0\n\n    let position = 0.0;\n    let velocity = 0.0;\n    const t = this._frameTime;\n    if (zeta < 1) {\n      // Under damped\n      const envelope = Math.exp(-zeta * omega0 * t);\n      position =\n        this._toValue -\n        envelope *\n          (((v0 + zeta * omega0 * x0) / omega1) * Math.sin(omega1 * t) +\n            x0 * Math.cos(omega1 * t));\n      // This looks crazy -- it's actually just the derivative of the\n      // oscillation function\n      velocity =\n        zeta *\n          omega0 *\n          envelope *\n          ((Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0)) / omega1 +\n            x0 * Math.cos(omega1 * t)) -\n        envelope *\n          (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) -\n            omega1 * x0 * Math.sin(omega1 * t));\n    } else {\n      // Critically damped\n      const envelope = Math.exp(-omega0 * t);\n      position = this._toValue - envelope * (x0 + (v0 + omega0 * x0) * t);\n      velocity =\n        envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));\n    }\n\n    this._lastTime = now;\n    this._lastPosition = position;\n    this._lastVelocity = velocity;\n\n    this._onUpdate(position);\n    if (!this.__active) {\n      // a listener might have stopped us in _onUpdate\n      return;\n    }\n\n    // Conditions for stopping the spring animation\n    let isOvershooting = false;\n    if (this._overshootClamping && this._stiffness !== 0) {\n      if (this._startPosition < this._toValue) {\n        isOvershooting = position > this._toValue;\n      } else {\n        isOvershooting = position < this._toValue;\n      }\n    }\n    const isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;\n    let isDisplacement = true;\n    if (this._stiffness !== 0) {\n      isDisplacement =\n        Math.abs(this._toValue - position) <= this._restDisplacementThreshold;\n    }\n\n    if (isOvershooting || (isVelocity && isDisplacement)) {\n      if (this._stiffness !== 0) {\n        // Ensure that we end up with a round value\n        this._lastPosition = this._toValue;\n        this._lastVelocity = 0;\n        this._onUpdate(this._toValue);\n      }\n\n      this.__debouncedOnEnd({finished: true});\n      return;\n    }\n    // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n    this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n  }\n\n  stop(): void {\n    super.stop();\n    this.__active = false;\n    clearTimeout(this._timeout);\n    global.cancelAnimationFrame(this._animationFrame);\n    this.__debouncedOnEnd({finished: false});\n  }\n}\n\nmodule.exports = SpringAnimation;\n"],"mappings":"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"}