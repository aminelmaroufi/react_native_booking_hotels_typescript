341abd3bfbbb4c4bd50d3f459d1db51f
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _requireNativeComponent = _interopRequireDefault(require("../../Libraries/ReactNative/requireNativeComponent"));
var _UIManager = _interopRequireDefault(require("../ReactNative/UIManager"));
function codegenNativeComponent(componentName, options) {
  var componentNameInUse = options && options.paperComponentName != null ? options.paperComponentName : componentName;
  if (options != null && options.paperComponentNameDeprecated != null) {
    if (_UIManager.default.getViewManagerConfig(componentName)) {
      componentNameInUse = componentName;
    } else if (options.paperComponentNameDeprecated != null && _UIManager.default.getViewManagerConfig(options.paperComponentNameDeprecated)) {
      componentNameInUse = options.paperComponentNameDeprecated;
    } else {
      var _options$paperCompone;
      throw new Error("Failed to find native component for either " + componentName + " or " + ((_options$paperCompone = options.paperComponentNameDeprecated) != null ? _options$paperCompone : '(unknown)'));
    }
  }
  return (0, _requireNativeComponent.default)(componentNameInUse);
}
var _default = codegenNativeComponent;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVxdWlyZU5hdGl2ZUNvbXBvbmVudCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX1VJTWFuYWdlciIsImNvZGVnZW5OYXRpdmVDb21wb25lbnQiLCJjb21wb25lbnROYW1lIiwib3B0aW9ucyIsImNvbXBvbmVudE5hbWVJblVzZSIsInBhcGVyQ29tcG9uZW50TmFtZSIsInBhcGVyQ29tcG9uZW50TmFtZURlcHJlY2F0ZWQiLCJVSU1hbmFnZXIiLCJnZXRWaWV3TWFuYWdlckNvbmZpZyIsIl9vcHRpb25zJHBhcGVyQ29tcG9uZSIsIkVycm9yIiwicmVxdWlyZU5hdGl2ZUNvbXBvbmVudCIsIl9kZWZhdWx0IiwiZXhwb3J0cyIsImRlZmF1bHQiXSwic291cmNlcyI6WyJjb2RlZ2VuTmF0aXZlQ29tcG9uZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogQGZsb3cgc3RyaWN0LWxvY2FsXG4gKi9cblxuLy8gVE9ETzogbW92ZSB0aGlzIGZpbGUgdG8gc2hpbXMvUmVhY3ROYXRpdmUgKHJlcXVpcmVzIFJlYWN0IHVwZGF0ZSBhbmQgc3luYylcblxuaW1wb3J0IHJlcXVpcmVOYXRpdmVDb21wb25lbnQgZnJvbSAnLi4vLi4vTGlicmFyaWVzL1JlYWN0TmF0aXZlL3JlcXVpcmVOYXRpdmVDb21wb25lbnQnO1xuaW1wb3J0IHR5cGUge0hvc3RDb21wb25lbnR9IGZyb20gJy4uLy4uL0xpYnJhcmllcy9SZW5kZXJlci9zaGltcy9SZWFjdE5hdGl2ZVR5cGVzJztcbmltcG9ydCBVSU1hbmFnZXIgZnJvbSAnLi4vUmVhY3ROYXRpdmUvVUlNYW5hZ2VyJztcblxuLy8gVE9ETzogaW1wb3J0IGZyb20gQ29kZWdlblNjaGVtYSBvbmNlIHdvcmtzcGFjZXMgYXJlIGVuYWJsZWRcbnR5cGUgT3B0aW9ucyA9ICRSZWFkT25seTx7fFxuICBpbnRlcmZhY2VPbmx5PzogYm9vbGVhbixcbiAgcGFwZXJDb21wb25lbnROYW1lPzogc3RyaW5nLFxuICBwYXBlckNvbXBvbmVudE5hbWVEZXByZWNhdGVkPzogc3RyaW5nLFxuICBleGNsdWRlZFBsYXRmb3Jtcz86ICRSZWFkT25seUFycmF5PCdpT1MnIHwgJ2FuZHJvaWQnPixcbnx9PjtcblxuZXhwb3J0IHR5cGUgTmF0aXZlQ29tcG9uZW50VHlwZTxUPiA9IEhvc3RDb21wb25lbnQ8VD47XG5cbmZ1bmN0aW9uIGNvZGVnZW5OYXRpdmVDb21wb25lbnQ8UHJvcHM+KFxuICBjb21wb25lbnROYW1lOiBzdHJpbmcsXG4gIG9wdGlvbnM/OiBPcHRpb25zLFxuKTogTmF0aXZlQ29tcG9uZW50VHlwZTxQcm9wcz4ge1xuICBsZXQgY29tcG9uZW50TmFtZUluVXNlID1cbiAgICBvcHRpb25zICYmIG9wdGlvbnMucGFwZXJDb21wb25lbnROYW1lICE9IG51bGxcbiAgICAgID8gb3B0aW9ucy5wYXBlckNvbXBvbmVudE5hbWVcbiAgICAgIDogY29tcG9uZW50TmFtZTtcblxuICBpZiAob3B0aW9ucyAhPSBudWxsICYmIG9wdGlvbnMucGFwZXJDb21wb25lbnROYW1lRGVwcmVjYXRlZCAhPSBudWxsKSB7XG4gICAgaWYgKFVJTWFuYWdlci5nZXRWaWV3TWFuYWdlckNvbmZpZyhjb21wb25lbnROYW1lKSkge1xuICAgICAgY29tcG9uZW50TmFtZUluVXNlID0gY29tcG9uZW50TmFtZTtcbiAgICB9IGVsc2UgaWYgKFxuICAgICAgb3B0aW9ucy5wYXBlckNvbXBvbmVudE5hbWVEZXByZWNhdGVkICE9IG51bGwgJiZcbiAgICAgIFVJTWFuYWdlci5nZXRWaWV3TWFuYWdlckNvbmZpZyhvcHRpb25zLnBhcGVyQ29tcG9uZW50TmFtZURlcHJlY2F0ZWQpXG4gICAgKSB7XG4gICAgICBjb21wb25lbnROYW1lSW5Vc2UgPSBvcHRpb25zLnBhcGVyQ29tcG9uZW50TmFtZURlcHJlY2F0ZWQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYEZhaWxlZCB0byBmaW5kIG5hdGl2ZSBjb21wb25lbnQgZm9yIGVpdGhlciAke2NvbXBvbmVudE5hbWV9IG9yICR7b3B0aW9ucy5wYXBlckNvbXBvbmVudE5hbWVEZXByZWNhdGVkID8/XG4gICAgICAgICAgJyh1bmtub3duKSd9YCxcbiAgICAgICk7XG4gICAgfVxuICB9XG5cbiAgLy8gSWYgdGhpcyBmdW5jdGlvbiBpcyBydW4gYXQgcnVudGltZSB0aGVuIHRoYXQgbWVhbnMgdGhlIHZpZXcgY29uZmlncyB3ZXJlIG5vdFxuICAvLyBnZW5lcmF0ZWQgd2l0aCB0aGUgdmlldyBjb25maWcgYmFiZWwgcGx1Z2luLCBzbyB3ZSBuZWVkIHRvIHJlcXVpcmUgdGhlIG5hdGl2ZSBjb21wb25lbnQuXG4gIC8vXG4gIC8vIFRoaXMgd2lsbCBiZSB1c2VmdWwgZHVyaW5nIG1pZ3JhdGlvbiwgYnV0IGV2ZW50dWFsbHkgdGhpcyB3aWxsIGVycm9yLlxuICByZXR1cm4gKHJlcXVpcmVOYXRpdmVDb21wb25lbnQ8UHJvcHM+KFxuICAgIGNvbXBvbmVudE5hbWVJblVzZSxcbiAgKTogSG9zdENvbXBvbmVudDxQcm9wcz4pO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjb2RlZ2VuTmF0aXZlQ29tcG9uZW50O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBWUEsSUFBQUEsdUJBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUVBLElBQUFDLFVBQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQVlBLFNBQVNFLHNCQUFzQkEsQ0FDN0JDLGFBQXFCLEVBQ3JCQyxPQUFpQixFQUNXO0VBQzVCLElBQUlDLGtCQUFrQixHQUNwQkQsT0FBTyxJQUFJQSxPQUFPLENBQUNFLGtCQUFrQixJQUFJLElBQUksR0FDekNGLE9BQU8sQ0FBQ0Usa0JBQWtCLEdBQzFCSCxhQUFhO0VBRW5CLElBQUlDLE9BQU8sSUFBSSxJQUFJLElBQUlBLE9BQU8sQ0FBQ0csNEJBQTRCLElBQUksSUFBSSxFQUFFO0lBQ25FLElBQUlDLGtCQUFTLENBQUNDLG9CQUFvQixDQUFDTixhQUFhLENBQUMsRUFBRTtNQUNqREUsa0JBQWtCLEdBQUdGLGFBQWE7SUFDcEMsQ0FBQyxNQUFNLElBQ0xDLE9BQU8sQ0FBQ0csNEJBQTRCLElBQUksSUFBSSxJQUM1Q0Msa0JBQVMsQ0FBQ0Msb0JBQW9CLENBQUNMLE9BQU8sQ0FBQ0csNEJBQTRCLENBQUMsRUFDcEU7TUFDQUYsa0JBQWtCLEdBQUdELE9BQU8sQ0FBQ0csNEJBQTRCO0lBQzNELENBQUMsTUFBTTtNQUFBLElBQUFHLHFCQUFBO01BQ0wsTUFBTSxJQUFJQyxLQUFLLGlEQUNpQ1IsYUFBYSxjQUFBTyxxQkFBQSxHQUFPTixPQUFPLENBQUNHLDRCQUE0QixZQUFBRyxxQkFBQSxHQUNwRyxXQUFXLEVBQ2Q7SUFDSDtFQUNGO0VBTUEsT0FBUSxJQUFBRSwrQkFBc0IsRUFDNUJQLGtCQUFrQixDQUNuQjtBQUNIO0FBQUMsSUFBQVEsUUFBQSxHQUVjWCxzQkFBc0I7QUFBQVksT0FBQSxDQUFBQyxPQUFBLEdBQUFGLFFBQUEifQ==