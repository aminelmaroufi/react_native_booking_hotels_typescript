{"version":3,"names":["_react","require","_SvgTouchableMixin","_interopRequireDefault","_reactNative","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","RNSVGRenderableManager","NativeModules","multiply_matrices","l","r","al","a","bl","b","cl","c","dl","d","el","fl","f","ar","br","cr","dr","er","fr","invert","_ref","n","deg2rad","Math","PI","SVGMatrix","matrix","_classCallCheck2","_createClass2","key","value","multiply","secondMatrix","inverse","translate","x","y","scale","scaleFactor","scaleNonUniform","scaleFactorX","scaleFactorY","rotate","angle","cos","sin","rotateFromVector","atan2","flipX","flipY","skewX","tan","skewY","exports","_matrixTransform","matrixTransform","point","SVGPoint","_x","_y","ownerSVGElement","createSVGPoint","createSVGMatrix","Shape","_Component","_inherits2","_super","_props","_this","_defineProperty2","_assertThisInitialized2","instance","root","props","setNativeProps","options","_ref2","_ref2$fill","fill","_ref2$stroke","stroke","_ref2$markers","markers","_ref2$clipped","clipped","handle","findNodeHandle","getBBox","getCTM","getScreenCTM","isPointInFill","isPointInStroke","getTotalLength","length","getPointAtLength","Component"],"sources":["Shape.tsx"],"sourcesContent":["import { Component } from 'react';\nimport SvgTouchableMixin from '../lib/SvgTouchableMixin';\nimport { NativeModules, findNodeHandle, NativeMethods } from 'react-native';\nimport { TransformProps } from '../lib/extract/types';\nconst { RNSVGRenderableManager } = NativeModules;\n\nexport interface SVGBoundingBoxOptions {\n  fill?: boolean;\n  stroke?: boolean;\n  markers?: boolean;\n  clipped?: boolean;\n}\n\nexport interface DOMPointInit {\n  x?: number;\n  y?: number;\n  z?: number;\n  w?: number;\n}\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nexport interface SVGPoint extends Point {\n  constructor(point?: Point): SVGPoint;\n  matrixTransform(matrix: Matrix): SVGPoint;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\nexport interface SVGRect extends Rect {}\n\nexport interface Matrix {\n  a: number;\n  b: number;\n  c: number;\n  d: number;\n  e: number;\n  f: number;\n}\n\nexport interface SVGMatrix extends Matrix {\n  constructor(matrix?: Matrix): SVGMatrix;\n  multiply(secondMatrix: Matrix): SVGMatrix;\n  inverse(): SVGMatrix;\n  translate(x: number, y: number): SVGMatrix;\n  scale(scaleFactor: number): SVGMatrix;\n  scaleNonUniform(scaleFactorX: number, scaleFactorY: number): SVGMatrix;\n  rotate(angle: number): SVGMatrix;\n  rotateFromVector(x: number, y: number): SVGMatrix;\n  flipX(): SVGMatrix;\n  flipY(): SVGMatrix;\n  skewX(angle: number): SVGMatrix;\n  skewY(angle: number): SVGMatrix;\n}\n\nexport function multiply_matrices(l: Matrix, r: Matrix): Matrix {\n  const { a: al, b: bl, c: cl, d: dl, e: el, f: fl } = l;\n  const { a: ar, b: br, c: cr, d: dr, e: er, f: fr } = r;\n\n  const a = al * ar + cl * br;\n  const c = al * cr + cl * dr;\n  const e = al * er + cl * fr + el;\n  const b = bl * ar + dl * br;\n  const d = bl * cr + dl * dr;\n  const f = bl * er + dl * fr + fl;\n\n  return { a, c, e, b, d, f };\n}\n\nexport function invert({ a, b, c, d, e, f }: Matrix): Matrix {\n  const n = a * d - b * c;\n  return {\n    a: d / n,\n    b: -b / n,\n    c: -c / n,\n    d: a / n,\n    e: (c * f - d * e) / n,\n    f: -(a * f - b * e) / n,\n  };\n}\n\nconst deg2rad = Math.PI / 180;\n\nexport class SVGMatrix implements SVGMatrix {\n  constructor(matrix?: Matrix) {\n    if (matrix) {\n      const { a, b, c, d, e, f } = matrix;\n      this.a = a;\n      this.b = b;\n      this.c = c;\n      this.d = d;\n      this.e = e;\n      this.f = f;\n    } else {\n      this.a = 1;\n      this.b = 0;\n      this.c = 0;\n      this.d = 1;\n      this.e = 0;\n      this.f = 0;\n    }\n  }\n  multiply(secondMatrix: Matrix): SVGMatrix {\n    return new SVGMatrix(multiply_matrices(this, secondMatrix));\n  }\n  inverse(): SVGMatrix {\n    return new SVGMatrix(invert(this));\n  }\n  translate(x: number, y: number): SVGMatrix {\n    return new SVGMatrix(\n      multiply_matrices(this, { a: 1, b: 0, c: 0, d: 1, e: x, f: y }),\n    );\n  }\n  scale(scaleFactor: number): SVGMatrix {\n    return new SVGMatrix(\n      multiply_matrices(this, {\n        a: scaleFactor,\n        b: 0,\n        c: 0,\n        d: scaleFactor,\n        e: 0,\n        f: 0,\n      }),\n    );\n  }\n  scaleNonUniform(scaleFactorX: number, scaleFactorY: number): SVGMatrix {\n    return new SVGMatrix(\n      multiply_matrices(this, {\n        a: scaleFactorX,\n        b: 0,\n        c: 0,\n        d: scaleFactorY,\n        e: 0,\n        f: 0,\n      }),\n    );\n  }\n  rotate(angle: number): SVGMatrix {\n    const cos = Math.cos(deg2rad * angle);\n    const sin = Math.sin(deg2rad * angle);\n    return new SVGMatrix(\n      multiply_matrices(this, { a: cos, b: sin, c: -sin, d: cos, e: 0, f: 0 }),\n    );\n  }\n  rotateFromVector(x: number, y: number): SVGMatrix {\n    const angle = Math.atan2(y, x);\n    const cos = Math.cos(deg2rad * angle);\n    const sin = Math.sin(deg2rad * angle);\n    return new SVGMatrix(\n      multiply_matrices(this, { a: cos, b: sin, c: -sin, d: cos, e: 0, f: 0 }),\n    );\n  }\n  flipX(): SVGMatrix {\n    return new SVGMatrix(\n      multiply_matrices(this, { a: -1, b: 0, c: 0, d: 1, e: 0, f: 0 }),\n    );\n  }\n  flipY(): SVGMatrix {\n    return new SVGMatrix(\n      multiply_matrices(this, { a: 1, b: 0, c: 0, d: -1, e: 0, f: 0 }),\n    );\n  }\n  skewX(angle: number): SVGMatrix {\n    return new SVGMatrix(\n      multiply_matrices(this, {\n        a: 1,\n        b: 0,\n        c: Math.tan(deg2rad * angle),\n        d: 1,\n        e: 0,\n        f: 0,\n      }),\n    );\n  }\n  skewY(angle: number): SVGMatrix {\n    return new SVGMatrix(\n      multiply_matrices(this, {\n        a: 1,\n        b: Math.tan(deg2rad * angle),\n        c: 0,\n        d: 1,\n        e: 0,\n        f: 0,\n      }),\n    );\n  }\n}\n\nexport function matrixTransform(matrix: Matrix, point: Point): Point {\n  const { a, b, c, d, e, f } = matrix;\n  const { x, y } = point;\n  return {\n    x: a * x + c * y + e,\n    y: b * x + d * y + f,\n  };\n}\n\nexport class SVGPoint implements SVGPoint {\n  constructor(point?: Point) {\n    if (point) {\n      const { x, y } = point;\n      this.x = x;\n      this.y = y;\n    } else {\n      this.x = 0;\n      this.y = 0;\n    }\n  }\n  matrixTransform(matrix: Matrix): SVGPoint {\n    return new SVGPoint(matrixTransform(matrix, this));\n  }\n}\n\nexport const ownerSVGElement = {\n  createSVGPoint(): SVGPoint {\n    return new SVGPoint();\n  },\n  createSVGMatrix(): SVGMatrix {\n    return new SVGMatrix();\n  },\n};\n\nexport default class Shape<P> extends Component<P> {\n  [x: string]: unknown;\n  root: (Shape<P> & NativeMethods) | null = null;\n  constructor(props: Readonly<P> | P) {\n    super(props);\n    SvgTouchableMixin(this);\n  }\n  refMethod: (instance: (Shape<P> & NativeMethods) | null) => void = (\n    instance: (Shape<P> & NativeMethods) | null,\n  ) => {\n    this.root = instance;\n  };\n  setNativeProps = (\n    props: Object & {\n      matrix?: [number, number, number, number, number, number];\n    } & TransformProps,\n  ) => {\n    this.root && this.root.setNativeProps(props);\n  };\n  /*\n   * The following native methods are experimental and likely broken in some\n   * ways. If you have a use case for these, please open an issue with a\n   * representative example / reproduction.\n   * */\n  getBBox = (options?: SVGBoundingBoxOptions): SVGRect => {\n    const {\n      fill = true,\n      stroke = true,\n      markers = true,\n      clipped = true,\n    } = options || {};\n    const handle = findNodeHandle(this.root as Component);\n    return RNSVGRenderableManager.getBBox(handle, {\n      fill,\n      stroke,\n      markers,\n      clipped,\n    });\n  };\n  getCTM = (): SVGMatrix => {\n    const handle = findNodeHandle(this.root as Component);\n    return new SVGMatrix(RNSVGRenderableManager.getCTM(handle));\n  };\n  getScreenCTM = (): SVGMatrix => {\n    const handle = findNodeHandle(this.root as Component);\n    return new SVGMatrix(RNSVGRenderableManager.getScreenCTM(handle));\n  };\n  isPointInFill = (options: DOMPointInit): boolean => {\n    const handle = findNodeHandle(this.root as Component);\n    return RNSVGRenderableManager.isPointInFill(handle, options);\n  };\n  isPointInStroke = (options: DOMPointInit): boolean => {\n    const handle = findNodeHandle(this.root as Component);\n    return RNSVGRenderableManager.isPointInStroke(handle, options);\n  };\n  getTotalLength = (): number => {\n    const handle = findNodeHandle(this.root as Component);\n    return RNSVGRenderableManager.getTotalLength(handle);\n  };\n  getPointAtLength = (length: number): SVGPoint => {\n    const handle = findNodeHandle(this.root as Component);\n    return new SVGPoint(\n      RNSVGRenderableManager.getPointAtLength(handle, { length }),\n    );\n  };\n}\nShape.prototype.ownerSVGElement = ownerSVGElement;\n"],"mappings":"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"}