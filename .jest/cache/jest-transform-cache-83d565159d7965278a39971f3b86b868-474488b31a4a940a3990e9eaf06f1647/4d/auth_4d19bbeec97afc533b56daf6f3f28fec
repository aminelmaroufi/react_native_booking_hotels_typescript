dd0ae8cf81cf86c6dc11aa5314884e19
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _marked = _regenerator.default.mark(check_user_request),
  _marked2 = _regenerator.default.mark(save_account),
  _marked3 = _regenerator.default.mark(login_request),
  _marked4 = _regenerator.default.mark(watchAuthRequest);
var __createBinding = void 0 && (void 0).__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  var desc = Object.getOwnPropertyDescriptor(m, k);
  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
    desc = {
      enumerable: true,
      get: function get() {
        return m[k];
      }
    };
  }
  Object.defineProperty(o, k2, desc);
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});
var __setModuleDefault = void 0 && (void 0).__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});
var __importStar = void 0 && (void 0).__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  __setModuleDefault(result, mod);
  return result;
};
var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.login_request = exports.save_account = exports.check_user_request = void 0;
var effects_1 = require("redux-saga/effects");
var actionTypes_1 = __importDefault(require("../../utils/actionTypes"));
var native_1 = require("@react-navigation/native");
var api_1 = require("../../api");
var actions_1 = require("../../redux/actions");
var RootNavigation = __importStar(require("../../navigation/rootNavigation"));
function check_user_request() {
  var response, data;
  return _regenerator.default.wrap(function check_user_request$(_context) {
    while (1) switch (_context.prev = _context.next) {
      case 0:
        _context.prev = 0;
        _context.next = 3;
        return (0, effects_1.put)({
          type: actionTypes_1.default.API_CALL_REQUEST
        });
      case 3:
        _context.next = 5;
        return (0, effects_1.call)(api_1.checkUser);
      case 5:
        response = _context.sent;
        data = response.data;
        if (!data.ok) {
          _context.next = 17;
          break;
        }
        if (!data.result.user) {
          _context.next = 13;
          break;
        }
        _context.next = 11;
        return (0, effects_1.all)([(0, effects_1.put)({
          type: actionTypes_1.default.API_CALL_SUCCESS
        }), (0, effects_1.put)({
          type: actionTypes_1.default.CHECK_USER_SUCCESS,
          payload: {
            user: data.result.user
          }
        })]);
      case 11:
        _context.next = 15;
        break;
      case 13:
        _context.next = 15;
        return (0, effects_1.put)({
          type: actionTypes_1.default.API_CALL_SUCCESS
        });
      case 15:
        _context.next = 19;
        break;
      case 17:
        _context.next = 19;
        return (0, effects_1.put)({
          type: actionTypes_1.default.API_CALL_FAILURE,
          payload: {
            message: data.result.message
          }
        });
      case 19:
        _context.next = 25;
        break;
      case 21:
        _context.prev = 21;
        _context.t0 = _context["catch"](0);
        _context.next = 25;
        return (0, effects_1.put)({
          type: actionTypes_1.default.API_CALL_FAILURE,
          payload: {
            message: typeof _context.t0 === 'string' ? _context.t0 : _context.t0.message
          }
        });
      case 25:
      case "end":
        return _context.stop();
    }
  }, _marked, null, [[0, 21]]);
}
exports.check_user_request = check_user_request;
function save_account(action) {
  var user, response, data;
  return _regenerator.default.wrap(function save_account$(_context2) {
    while (1) switch (_context2.prev = _context2.next) {
      case 0:
        _context2.prev = 0;
        _context2.next = 3;
        return (0, effects_1.put)({
          type: actionTypes_1.default.API_CALL_REQUEST
        });
      case 3:
        user = action.account;
        delete user._id;
        _context2.next = 7;
        return (0, effects_1.call)(api_1.saveAccount, action.account);
      case 7:
        response = _context2.sent;
        data = response.data;
        if (!data.ok) {
          _context2.next = 14;
          break;
        }
        _context2.next = 12;
        return (0, effects_1.all)([(0, effects_1.put)({
          type: actionTypes_1.default.SUCCESS_OPERATION,
          payload: {
            message: data.result.message
          }
        }), (0, effects_1.put)({
          type: actionTypes_1.default.CREATE_ACCOUNT_SUCCESS,
          payload: {
            user: data.result.user
          }
        }), (0, effects_1.put)(native_1.CommonActions.goBack()), (0, effects_1.put)(native_1.CommonActions.navigate({
          name: 'Login'
        }))]);
      case 12:
        _context2.next = 16;
        break;
      case 14:
        _context2.next = 16;
        return (0, effects_1.put)({
          type: actionTypes_1.default.API_CALL_FAILURE,
          payload: {
            message: data.result.message
          }
        });
      case 16:
        _context2.next = 22;
        break;
      case 18:
        _context2.prev = 18;
        _context2.t0 = _context2["catch"](0);
        _context2.next = 22;
        return (0, effects_1.put)({
          type: actionTypes_1.default.API_CALL_FAILURE,
          payload: {
            message: typeof _context2.t0 === 'string' ? _context2.t0 : _context2.t0.message
          }
        });
      case 22:
      case "end":
        return _context2.stop();
    }
  }, _marked2, null, [[0, 18]]);
}
exports.save_account = save_account;
function login_request(action) {
  var response, data;
  return _regenerator.default.wrap(function login_request$(_context3) {
    while (1) switch (_context3.prev = _context3.next) {
      case 0:
        _context3.prev = 0;
        _context3.next = 3;
        return (0, effects_1.put)({
          type: actionTypes_1.default.API_CALL_REQUEST
        });
      case 3:
        _context3.next = 5;
        return (0, effects_1.call)(api_1.login, action.email, action.password);
      case 5:
        response = _context3.sent;
        data = response.data;
        if (!data.ok) {
          _context3.next = 13;
          break;
        }
        _context3.next = 10;
        return (0, effects_1.all)([(0, effects_1.put)({
          type: actionTypes_1.default.API_CALL_SUCCESS
        }), (0, effects_1.put)({
          type: actionTypes_1.default.LOGIN_SUCCESS,
          payload: {
            user: data.result.user
          }
        }), (0, effects_1.put)((0, actions_1.navigateToScreen)('Overview', {}))]);
      case 10:
        RootNavigation.navigate('Overview', {});
        _context3.next = 15;
        break;
      case 13:
        _context3.next = 15;
        return (0, effects_1.put)({
          type: actionTypes_1.default.API_CALL_FAILURE,
          payload: {
            message: data.result.message
          }
        });
      case 15:
        _context3.next = 21;
        break;
      case 17:
        _context3.prev = 17;
        _context3.t0 = _context3["catch"](0);
        _context3.next = 21;
        return (0, effects_1.put)({
          type: actionTypes_1.default.API_CALL_FAILURE,
          payload: {
            message: typeof _context3.t0 === 'string' ? _context3.t0 : _context3.t0.message
          }
        });
      case 21:
      case "end":
        return _context3.stop();
    }
  }, _marked3, null, [[0, 17]]);
}
exports.login_request = login_request;
function watchAuthRequest() {
  return _regenerator.default.wrap(function watchAuthRequest$(_context4) {
    while (1) switch (_context4.prev = _context4.next) {
      case 0:
        _context4.next = 2;
        return (0, effects_1.all)([(0, effects_1.takeLatest)(actionTypes_1.default.SAVE_ACCOUNT_REQUEST, save_account), (0, effects_1.takeLatest)(actionTypes_1.default.LOGIN_REQUEST, login_request), (0, effects_1.takeLatest)(actionTypes_1.default.CHECK_USER_REQUEST, check_user_request)]);
      case 2:
      case "end":
        return _context4.stop();
    }
  }, _marked4);
}
exports.default = watchAuthRequest;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,