{"version":3,"names":["check_user_request","_marked2","_regenerator","default","mark","save_account","_marked3","login_request","_marked4","watchAuthRequest","effects_1","require","actionTypes_1","__importDefault","native_1","api_1","actions_1","RootNavigation","__importStar","response","data","wrap","check_user_request$","_context","prev","next","put","type","API_CALL_REQUEST","call","checkUser","sent","ok","result","user","all","API_CALL_SUCCESS","CHECK_USER_SUCCESS","payload","API_CALL_FAILURE","message","t0","stop","_marked","exports","action","save_account$","_context2","account","_id","saveAccount","SUCCESS_OPERATION","CREATE_ACCOUNT_SUCCESS","CommonActions","goBack","navigate","name","login_request$","_context3","login","email","password","LOGIN_SUCCESS","navigateToScreen","watchAuthRequest$","_context4","takeLatest","SAVE_ACCOUNT_REQUEST","LOGIN_REQUEST","CHECK_USER_REQUEST"],"sources":["/Users/Amine/Desktop/projects/BookingHotelsApp/src/redux/sagas/auth.ts"],"sourcesContent":["// import ActionTypes from '../utils/actionTypes';\nimport {put, call, all, takeLatest} from 'redux-saga/effects';\nimport ActionTypes from '../../utils/actionTypes';\nimport {CommonActions} from '@react-navigation/native';\nimport {checkUser, saveAccount, login} from '../../api';\nimport {AxiosResponse} from 'axios';\nimport {navigateToScreen} from '../../redux/actions';\nimport * as RootNavigation from '../../navigation/rootNavigation';\n\nexport function* check_user_request() {\n  try {\n    yield put({type: ActionTypes.API_CALL_REQUEST});\n    let response: AxiosResponse = yield call(checkUser);\n    const data = response.data;\n    if (data.ok) {\n      if (data.result.user) {\n        yield all([\n          put({\n            type: ActionTypes.API_CALL_SUCCESS,\n          }),\n          put({\n            type: ActionTypes.CHECK_USER_SUCCESS,\n            payload: {\n              user: data.result.user,\n            },\n          }),\n        ]);\n      } else {\n        yield put({\n          type: ActionTypes.API_CALL_SUCCESS,\n        });\n      }\n    } else {\n      yield put({\n        type: ActionTypes.API_CALL_FAILURE,\n        payload: {\n          message: data.result.message,\n        },\n      });\n    }\n  } catch (err: any) {\n    yield put({\n      type: ActionTypes.API_CALL_FAILURE,\n      payload: {\n        message: typeof err === 'string' ? err : err.message,\n      },\n    });\n  }\n}\n\nexport function* save_account(action: any) {\n  try {\n    yield put({type: ActionTypes.API_CALL_REQUEST});\n    let user = action.account;\n    delete user._id;\n    let response: AxiosResponse = yield call(saveAccount, action.account);\n    const data = response.data;\n\n    if (data.ok) {\n      yield all([\n        put({\n          type: ActionTypes.SUCCESS_OPERATION,\n          payload: {\n            message: data.result.message,\n          },\n        }),\n        put({\n          type: ActionTypes.CREATE_ACCOUNT_SUCCESS,\n          payload: {\n            user: data.result.user,\n          },\n        }),\n        put(CommonActions.goBack()),\n        put(CommonActions.navigate({name: 'Login'})),\n      ]);\n      // action.navigation.pop();\n      // RootNavigation.navigate('Login', {});\n    } else {\n      yield put({\n        type: ActionTypes.API_CALL_FAILURE,\n        payload: {\n          message: data.result.message,\n        },\n      });\n    }\n  } catch (err: any) {\n    yield put({\n      type: ActionTypes.API_CALL_FAILURE,\n      payload: {\n        message: typeof err === 'string' ? err : err.message,\n      },\n    });\n  }\n}\n\nexport function* login_request(action: any) {\n  try {\n    yield put({type: ActionTypes.API_CALL_REQUEST});\n    let response: AxiosResponse = yield call(\n      login,\n      action.email,\n      action.password,\n    );\n    const data = response.data;\n\n    if (data.ok) {\n      yield all([\n        put({\n          type: ActionTypes.API_CALL_SUCCESS,\n        }),\n        put({\n          type: ActionTypes.LOGIN_SUCCESS,\n          payload: {\n            user: data.result.user,\n          },\n        }),\n        put(navigateToScreen('Overview', {})),\n      ]);\n      // action.navigation.pop(2);\n      RootNavigation.navigate('Overview', {});\n    } else {\n      yield put({\n        type: ActionTypes.API_CALL_FAILURE,\n        payload: {\n          message: data.result.message,\n        },\n      });\n    }\n  } catch (err: any) {\n    yield put({\n      type: ActionTypes.API_CALL_FAILURE,\n      payload: {\n        message: typeof err === 'string' ? err : err.message,\n      },\n    });\n  }\n}\n\nexport default function* watchAuthRequest() {\n  yield all([\n    takeLatest(ActionTypes.SAVE_ACCOUNT_REQUEST, save_account),\n    takeLatest(ActionTypes.LOGIN_REQUEST, login_request),\n    takeLatest(ActionTypes.CHECK_USER_REQUEST, check_user_request),\n  ]);\n}\n"],"mappings":"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"}