8ec99adeefbbdde8cf4138b6bef71732
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.TextElement = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _config = require("../config");
var _helpers = require("../helpers");
var _normalizeText = _interopRequireDefault(require("../helpers/normalizeText"));
var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
var TextElement = function TextElement(props) {
  var _a;
  var style = props.style,
    theme = props.theme,
    _props$children = props.children,
    children = _props$children === void 0 ? '' : _props$children,
    h1 = props.h1,
    h2 = props.h2,
    h3 = props.h3,
    h4 = props.h4,
    h1Style = props.h1Style,
    h2Style = props.h2Style,
    h3Style = props.h3Style,
    h4Style = props.h4Style,
    rest = __rest(props, ["style", "theme", "children", "h1", "h2", "h3", "h4", "h1Style", "h2Style", "h3Style", "h4Style"]);
  return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
    style: _reactNative.StyleSheet.flatten([(0, _extends2.default)((0, _extends2.default)({}, _reactNative.Platform.select({
      android: (0, _extends2.default)({}, _config.fonts.android.regular)
    })), {
      color: (_a = theme === null || theme === void 0 ? void 0 : theme.colors) === null || _a === void 0 ? void 0 : _a.black
    }), style, (h1 || h2 || h3 || h4) && styles.bold, h1 && _reactNative.StyleSheet.flatten([{
      fontSize: (0, _normalizeText.default)(40)
    }, h1Style]), h2 && _reactNative.StyleSheet.flatten([{
      fontSize: (0, _normalizeText.default)(34)
    }, h2Style]), h3 && _reactNative.StyleSheet.flatten([{
      fontSize: (0, _normalizeText.default)(28)
    }, h3Style]), h4 && _reactNative.StyleSheet.flatten([{
      fontSize: (0, _normalizeText.default)(22)
    }, h4Style])])
  }, (0, _helpers.patchWebProps)(rest)), children);
};
exports.TextElement = TextElement;
TextElement.defaultProps = {
  h1: false,
  h2: false,
  h3: false,
  h4: false,
  style: {},
  h1Style: {},
  h2Style: {},
  h3Style: {},
  h4Style: {}
};
var styles = _reactNative.StyleSheet.create({
  bold: (0, _extends2.default)({}, _reactNative.Platform.select({
    android: (0, _extends2.default)({}, _config.fonts.android.bold)
  }))
});
var _default = (0, _config.withTheme)(TextElement, 'Text');
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9jb25maWciLCJfaGVscGVycyIsIl9ub3JtYWxpemVUZXh0IiwiX19yZXN0IiwicyIsImUiLCJ0IiwicCIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImluZGV4T2YiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJpIiwibGVuZ3RoIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJUZXh0RWxlbWVudCIsInByb3BzIiwiX2EiLCJzdHlsZSIsInRoZW1lIiwiX3Byb3BzJGNoaWxkcmVuIiwiY2hpbGRyZW4iLCJoMSIsImgyIiwiaDMiLCJoNCIsImgxU3R5bGUiLCJoMlN0eWxlIiwiaDNTdHlsZSIsImg0U3R5bGUiLCJyZXN0IiwiZGVmYXVsdCIsImNyZWF0ZUVsZW1lbnQiLCJUZXh0IiwiX2V4dGVuZHMyIiwiU3R5bGVTaGVldCIsImZsYXR0ZW4iLCJQbGF0Zm9ybSIsInNlbGVjdCIsImFuZHJvaWQiLCJmb250cyIsInJlZ3VsYXIiLCJjb2xvciIsImNvbG9ycyIsImJsYWNrIiwic3R5bGVzIiwiYm9sZCIsImZvbnRTaXplIiwibm9ybWFsaXplIiwicGF0Y2hXZWJQcm9wcyIsImV4cG9ydHMiLCJkZWZhdWx0UHJvcHMiLCJjcmVhdGUiLCJfZGVmYXVsdCIsIndpdGhUaGVtZSJdLCJzb3VyY2VzIjpbIlRleHQuanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fcmVzdCA9ICh0aGlzICYmIHRoaXMuX19yZXN0KSB8fCBmdW5jdGlvbiAocywgZSkge1xuICAgIHZhciB0ID0ge307XG4gICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApICYmIGUuaW5kZXhPZihwKSA8IDApXG4gICAgICAgIHRbcF0gPSBzW3BdO1xuICAgIGlmIChzICE9IG51bGwgJiYgdHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09IFwiZnVuY3Rpb25cIilcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIHAgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHMpOyBpIDwgcC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGUuaW5kZXhPZihwW2ldKSA8IDAgJiYgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHMsIHBbaV0pKVxuICAgICAgICAgICAgICAgIHRbcFtpXV0gPSBzW3BbaV1dO1xuICAgICAgICB9XG4gICAgcmV0dXJuIHQ7XG59O1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFRleHQsIFN0eWxlU2hlZXQsIFBsYXRmb3JtLCB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgeyBmb250cywgd2l0aFRoZW1lIH0gZnJvbSAnLi4vY29uZmlnJztcbmltcG9ydCB7IHBhdGNoV2ViUHJvcHMgfSBmcm9tICcuLi9oZWxwZXJzJztcbmltcG9ydCBub3JtYWxpemUgZnJvbSAnLi4vaGVscGVycy9ub3JtYWxpemVUZXh0JztcbmNvbnN0IFRleHRFbGVtZW50ID0gKHByb3BzKSA9PiB7XG4gICAgdmFyIF9hO1xuICAgIGNvbnN0IHsgc3R5bGUsIHRoZW1lLCBjaGlsZHJlbiA9ICcnLCBoMSwgaDIsIGgzLCBoNCwgaDFTdHlsZSwgaDJTdHlsZSwgaDNTdHlsZSwgaDRTdHlsZSB9ID0gcHJvcHMsIHJlc3QgPSBfX3Jlc3QocHJvcHMsIFtcInN0eWxlXCIsIFwidGhlbWVcIiwgXCJjaGlsZHJlblwiLCBcImgxXCIsIFwiaDJcIiwgXCJoM1wiLCBcImg0XCIsIFwiaDFTdHlsZVwiLCBcImgyU3R5bGVcIiwgXCJoM1N0eWxlXCIsIFwiaDRTdHlsZVwiXSk7XG4gICAgcmV0dXJuICg8VGV4dCBzdHlsZT17U3R5bGVTaGVldC5mbGF0dGVuKFtcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgUGxhdGZvcm0uc2VsZWN0KHtcbiAgICAgICAgICAgICAgICBhbmRyb2lkOiBPYmplY3QuYXNzaWduKHt9LCBmb250cy5hbmRyb2lkLnJlZ3VsYXIpLFxuICAgICAgICAgICAgfSkpLCB7IGNvbG9yOiAoX2EgPSB0aGVtZSA9PT0gbnVsbCB8fCB0aGVtZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogdGhlbWUuY29sb3JzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuYmxhY2sgfSksXG4gICAgICAgICAgICBzdHlsZSxcbiAgICAgICAgICAgIChoMSB8fCBoMiB8fCBoMyB8fCBoNCkgJiYgc3R5bGVzLmJvbGQsXG4gICAgICAgICAgICBoMSAmJiBTdHlsZVNoZWV0LmZsYXR0ZW4oW3sgZm9udFNpemU6IG5vcm1hbGl6ZSg0MCkgfSwgaDFTdHlsZV0pLFxuICAgICAgICAgICAgaDIgJiYgU3R5bGVTaGVldC5mbGF0dGVuKFt7IGZvbnRTaXplOiBub3JtYWxpemUoMzQpIH0sIGgyU3R5bGVdKSxcbiAgICAgICAgICAgIGgzICYmIFN0eWxlU2hlZXQuZmxhdHRlbihbeyBmb250U2l6ZTogbm9ybWFsaXplKDI4KSB9LCBoM1N0eWxlXSksXG4gICAgICAgICAgICBoNCAmJiBTdHlsZVNoZWV0LmZsYXR0ZW4oW3sgZm9udFNpemU6IG5vcm1hbGl6ZSgyMikgfSwgaDRTdHlsZV0pLFxuICAgICAgICBdKX0gey4uLnBhdGNoV2ViUHJvcHMocmVzdCl9PlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvVGV4dD4pO1xufTtcblRleHRFbGVtZW50LmRlZmF1bHRQcm9wcyA9IHtcbiAgICBoMTogZmFsc2UsXG4gICAgaDI6IGZhbHNlLFxuICAgIGgzOiBmYWxzZSxcbiAgICBoNDogZmFsc2UsXG4gICAgc3R5bGU6IHt9LFxuICAgIGgxU3R5bGU6IHt9LFxuICAgIGgyU3R5bGU6IHt9LFxuICAgIGgzU3R5bGU6IHt9LFxuICAgIGg0U3R5bGU6IHt9LFxufTtcbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgICBib2xkOiBPYmplY3QuYXNzaWduKHt9LCBQbGF0Zm9ybS5zZWxlY3Qoe1xuICAgICAgICBhbmRyb2lkOiBPYmplY3QuYXNzaWduKHt9LCBmb250cy5hbmRyb2lkLmJvbGQpLFxuICAgIH0pKSxcbn0pO1xuZXhwb3J0IHsgVGV4dEVsZW1lbnQgfTtcbmV4cG9ydCBkZWZhdWx0IHdpdGhUaGVtZShUZXh0RWxlbWVudCwgJ1RleHQnKTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFXQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxZQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxPQUFBLEdBQUFGLE9BQUE7QUFDQSxJQUFBRyxRQUFBLEdBQUFILE9BQUE7QUFDQSxJQUFBSSxjQUFBLEdBQUFMLHNCQUFBLENBQUFDLE9BQUE7QUFmQSxJQUFJSyxNQUFNLEdBQUksVUFBUSxTQUFLQSxNQUFNLElBQUssVUFBVUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUU7RUFDbEQsSUFBSUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztFQUNWLEtBQUssSUFBSUMsQ0FBQyxJQUFJSCxDQUFDLEVBQUUsSUFBSUksTUFBTSxDQUFDQyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDUCxDQUFDLEVBQUVHLENBQUMsQ0FBQyxJQUFJRixDQUFDLENBQUNPLE9BQU8sQ0FBQ0wsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUMvRUQsQ0FBQyxDQUFDQyxDQUFDLENBQUMsR0FBR0gsQ0FBQyxDQUFDRyxDQUFDLENBQUM7RUFDZixJQUFJSCxDQUFDLElBQUksSUFBSSxJQUFJLE9BQU9JLE1BQU0sQ0FBQ0sscUJBQXFCLEtBQUssVUFBVSxFQUMvRCxLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFDLEVBQUVQLENBQUMsR0FBR0MsTUFBTSxDQUFDSyxxQkFBcUIsQ0FBQ1QsQ0FBQyxDQUFDLEVBQUVVLENBQUMsR0FBR1AsQ0FBQyxDQUFDUSxNQUFNLEVB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