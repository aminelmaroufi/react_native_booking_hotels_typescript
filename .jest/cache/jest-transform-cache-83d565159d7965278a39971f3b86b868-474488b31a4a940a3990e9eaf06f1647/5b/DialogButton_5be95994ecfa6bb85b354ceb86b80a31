c9e73de27392b04b4e116401790847f8
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _Button = _interopRequireDefault(require("../buttons/Button"));
var _config = require("../config");
var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
var DialogButton = function DialogButton(_a) {
  var titleStyle = _a.titleStyle,
    rest = __rest(_a, ["titleStyle"]);
  return _react.default.createElement(_Button.default, (0, _extends2.default)({
    style: {
      marginLeft: 5
    },
    titleStyle: _reactNative.StyleSheet.flatten([styles.buttonTitle, titleStyle]),
    containerStyle: {
      width: 'auto'
    },
    testID: "Dialog__Button"
  }, rest));
};
DialogButton.defaultProps = {
  title: 'ACTION',
  type: 'clear'
};
var styles = _reactNative.StyleSheet.create({
  buttonTitle: {
    fontSize: 15,
    fontWeight: '500'
  }
});
var _default = (0, _config.withTheme)(DialogButton, 'DialogButton');
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9CdXR0b24iLCJfY29uZmlnIiwiX19yZXN0IiwicyIsImUiLCJ0IiwicCIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImluZGV4T2YiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJpIiwibGVuZ3RoIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJEaWFsb2dCdXR0b24iLCJfYSIsInRpdGxlU3R5bGUiLCJyZXN0IiwiZGVmYXVsdCIsImNyZWF0ZUVsZW1lbnQiLCJfZXh0ZW5kczIiLCJzdHlsZSIsIm1hcmdpbkxlZnQiLCJTdHlsZVNoZWV0IiwiZmxhdHRlbiIsInN0eWxlcyIsImJ1dHRvblRpdGxlIiwiY29udGFpbmVyU3R5bGUiLCJ3aWR0aCIsInRlc3RJRCIsImRlZmF1bHRQcm9wcyIsInRpdGxlIiwidHlwZSIsImNyZWF0ZSIsImZvbnRTaXplIiwiZm9udFdlaWdodCIsIl9kZWZhdWx0Iiwid2l0aFRoZW1lIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIkRpYWxvZ0J1dHRvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19yZXN0ID0gKHRoaXMgJiYgdGhpcy5fX3Jlc3QpIHx8IGZ1bmN0aW9uIChzLCBlKSB7XG4gICAgdmFyIHQgPSB7fTtcbiAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkgJiYgZS5pbmRleE9mKHApIDwgMClcbiAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgaWYgKHMgIT0gbnVsbCAmJiB0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gXCJmdW5jdGlvblwiKVxuICAgICAgICBmb3IgKHZhciBpID0gMCwgcCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoZS5pbmRleE9mKHBbaV0pIDwgMCAmJiBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwocywgcFtpXSkpXG4gICAgICAgICAgICAgICAgdFtwW2ldXSA9IHNbcFtpXV07XG4gICAgICAgIH1cbiAgICByZXR1cm4gdDtcbn07XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgU3R5bGVTaGVldCB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJy4uL2J1dHRvbnMvQnV0dG9uJztcbmltcG9ydCB7IHdpdGhUaGVtZSB9IGZyb20gJy4uL2NvbmZpZyc7XG5jb25zdCBEaWFsb2dCdXR0b24gPSAoX2EpID0+IHtcbiAgICB2YXIgeyB0aXRsZVN0eWxlIH0gPSBfYSwgcmVzdCA9IF9fcmVzdChfYSwgW1widGl0bGVTdHlsZVwiXSk7XG4gICAgcmV0dXJuICg8QnV0dG9uIHN0eWxlPXt7IG1hcmdpbkxlZnQ6IDUgfX0gdGl0bGVTdHlsZT17U3R5bGVTaGVldC5mbGF0dGVuKFtzdHlsZXMuYnV0dG9uVGl0bGUsIHRpdGxlU3R5bGVdKX0gY29udGFpbmVyU3R5bGU9e3tcbiAgICAgICAgICAgIHdpZHRoOiAnYXV0bycsXG4gICAgICAgIH19IHRlc3RJRD1cIkRpYWxvZ19fQnV0dG9uXCIgey4uLnJlc3R9Lz4pO1xufTtcbkRpYWxvZ0J1dHRvbi5kZWZhdWx0UHJvcHMgPSB7XG4gICAgdGl0bGU6ICdBQ1RJT04nLFxuICAgIHR5cGU6ICdjbGVhcicsXG59O1xuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICAgIGJ1dHRvblRpdGxlOiB7XG4gICAgICAgIGZvbnRTaXplOiAxNSxcbiAgICAgICAgZm9udFdlaWdodDogJzUwMCcsXG4gICAgfSxcbn0pO1xuZXhwb3J0IGRlZmF1bHQgd2l0aFRoZW1lKERpYWxvZ0J1dHRvbiwgJ0RpYWxvZ0J1dHRvbicpO1xuIl0sIm1hcHBp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