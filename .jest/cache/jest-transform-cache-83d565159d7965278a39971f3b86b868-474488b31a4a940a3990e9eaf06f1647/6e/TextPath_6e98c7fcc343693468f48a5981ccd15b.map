{"version":3,"names":["_react","_interopRequireDefault","require","_extractTransform","_extractProps","_extractText","_util","_Shape2","_TSpan","_NativeComponents","_jsxFileName","_excluded","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","TextPath","_Shape","_inherits2","_super","_this","_classCallCheck2","_len","length","args","Array","_key","concat","_defineProperty2","_assertThisInitialized2","props","matrix","_extends3","pickNotNil","root","setNativeProps","_createClass2","key","value","render","_this$props","children","xlinkHref","_this$props$href","href","_this$props$startOffs","startOffset","method","spacing","side","alignmentBaseline","midLine","prop","_objectWithoutProperties2","matched","match","idPattern","withoutXY","ref","refMethod","createElement","RNSVGTextPath","_extends2","__self","__source","fileName","lineNumber","columnNumber","console","warn","exports"],"sources":["TextPath.tsx"],"sourcesContent":["import React, { Component } from 'react';\nimport extractTransform from '../lib/extract/extractTransform';\nimport { withoutXY } from '../lib/extract/extractProps';\nimport {\n  NumberProp,\n  TextPathMethod,\n  TextPathMidLine,\n  TextPathSpacing,\n  TextSpecificProps,\n  TransformProps,\n} from '../lib/extract/types';\nimport extractText, { TextChild } from '../lib/extract/extractText';\nimport { idPattern, pickNotNil } from '../lib/util';\nimport Shape from './Shape';\nimport TSpan from './TSpan';\nimport { RNSVGTextPath } from './NativeComponents';\n\nexport interface TextPathProps extends TextSpecificProps {\n  children?: TextChild;\n  xlinkHref?: string;\n  href?: string;\n  startOffset?: NumberProp;\n  method?: TextPathMethod;\n  spacing?: TextPathSpacing;\n  midLine?: TextPathMidLine;\n  side?: string;\n}\n\nexport default class TextPath extends Shape<TextPathProps> {\n  static displayName = 'TextPath';\n\n  setNativeProps = (\n    props: Object & {\n      matrix?: number[];\n      style?: [] | {};\n    } & TransformProps,\n  ) => {\n    const matrix = !props.matrix && extractTransform(props);\n    if (matrix) {\n      props.matrix = matrix;\n    }\n    Object.assign(props, pickNotNil(extractText(props, true)));\n    this.root && this.root.setNativeProps(props);\n  };\n\n  render() {\n    const {\n      children,\n      xlinkHref,\n      href = xlinkHref,\n      startOffset = 0,\n      method,\n      spacing,\n      side,\n      alignmentBaseline,\n      midLine,\n      ...prop\n    } = this.props;\n    const matched = href && href.match(idPattern);\n    const match = matched && matched[1];\n    if (match) {\n      const props = withoutXY(this, prop);\n      Object.assign(\n        props,\n        extractText(\n          {\n            children,\n          },\n          true,\n        ),\n        {\n          href: match,\n          startOffset,\n          method,\n          spacing,\n          side,\n          alignmentBaseline,\n          midLine,\n        },\n      );\n      props.ref = this.refMethod as (instance: Component | null) => void;\n      return <RNSVGTextPath {...props} />;\n    }\n\n    console.warn(\n      'Invalid `href` prop for `TextPath` element, expected a href like \"#id\", but got: \"' +\n        href +\n        '\"',\n    );\n    return (\n      <TSpan ref={this.refMethod as (instance: Component | null) => void}>\n        {children}\n      </TSpan>\n    );\n  }\n}\n"],"mappings":"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"}