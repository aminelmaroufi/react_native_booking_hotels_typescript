{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_extractOpacity","_interopRequireDefault","_extractTransform","_units","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","percentReg","percentToFloat","percent","__getAnimatedValue","matched","match","console","warn","offsetComparator","object","other","extractGradient","props","parent","id","children","gradientTransform","transform","gradientUnits","stops","childArray","Children","map","child","cloneElement","l","length","i","_childArray$i$props","style","_childArray$i$props$o","offset","_childArray$i$props$s","stopColor","_childArray$i$props$s2","stopOpacity","offsetNumber","color","processColor","isNaN","alpha","Math","round","push","sort","gradient","k","j","s","name"],"sources":["extractGradient.ts"],"sourcesContent":["import React, { Children, ReactElement } from 'react';\nimport { processColor } from 'react-native';\n\nimport extractOpacity from './extractOpacity';\nimport extractTransform from './extractTransform';\nimport { TransformProps } from './types';\nimport units from '../units';\n\nconst percentReg = /^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)(%?)$/;\n\nfunction percentToFloat(\n  percent:\n    | number\n    | string\n    | {\n        __getAnimatedValue: () => number;\n      },\n): number {\n  if (typeof percent === 'number') {\n    return percent;\n  }\n  if (\n    typeof percent === 'object' &&\n    typeof percent.__getAnimatedValue === 'function'\n  ) {\n    return percent.__getAnimatedValue();\n  }\n  const matched = typeof percent === 'string' && percent.match(percentReg);\n  if (!matched) {\n    console.warn(`\"${percent}\" is not a valid number or percentage string.`);\n    return 0;\n  }\n\n  return matched[2] ? +matched[1] / 100 : +matched[1];\n}\n\nconst offsetComparator = (object: number[], other: number[]) =>\n  object[0] - other[0];\n\nexport default function extractGradient(\n  props: {\n    id?: string;\n    children?: ReactElement[];\n    transform?: number[] | string | TransformProps;\n    gradientTransform?: number[] | string | TransformProps;\n    gradientUnits?: 'objectBoundingBox' | 'userSpaceOnUse';\n  } & TransformProps,\n  parent: {},\n) {\n  const { id, children, gradientTransform, transform, gradientUnits } = props;\n  if (!id) {\n    return null;\n  }\n\n  const stops = [];\n  const childArray = children\n    ? Children.map(children, (child) =>\n        React.cloneElement(child, {\n          parent,\n        }),\n      )\n    : [];\n  const l = childArray.length;\n  for (let i = 0; i < l; i++) {\n    const {\n      props: {\n        style,\n        offset = style && style.offset,\n        stopColor = (style && style.stopColor) || '#000',\n        stopOpacity = style && style.stopOpacity,\n      },\n    } = childArray[i];\n    const offsetNumber = percentToFloat(offset || 0);\n    const color = stopColor && processColor(stopColor);\n    if (typeof color !== 'number' || isNaN(offsetNumber)) {\n      console.warn(\n        `\"${stopColor}\" is not a valid color or \"${offset}\" is not a valid offset`,\n      );\n      continue;\n    }\n    const alpha = Math.round(extractOpacity(stopOpacity) * 255);\n    stops.push([offsetNumber, (color & 0x00ffffff) | (alpha << 24)]);\n  }\n  stops.sort(offsetComparator);\n\n  const gradient = [];\n  const k = stops.length;\n  for (let j = 0; j < k; j++) {\n    const s = stops[j];\n    gradient.push(s[0], s[1]);\n  }\n\n  return {\n    name: id,\n    gradient,\n    children: childArray,\n    gradientUnits: (gradientUnits && units[gradientUnits]) || 0,\n    gradientTransform: extractTransform(\n      gradientTransform || transform || props,\n    ),\n  };\n}\n"],"mappings":"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"}