{"version":3,"names":["_react","_interopRequireDefault","require","_extractProps","_interopRequireWildcard","_extractTransform","_extractText","_util","_Shape2","_NativeComponents","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","valueOf","e","TSpan","_Shape","_inherits2","_super","_this","_classCallCheck2","_len","length","args","Array","_key","concat","_defineProperty2","_assertThisInitialized2","props","matrix","prop","propsAndStyles","_extends3","pickNotNil","root","setNativeProps","_createClass2","value","render","x","y","ref","refMethod","createElement","RNSVGTSpan","_extends2","__self","__source","fileName","lineNumber","columnNumber","exports","setTSpan"],"sources":["TSpan.tsx"],"sourcesContent":["import React, { Component } from 'react';\nimport extractProps, { propsAndStyles } from '../lib/extract/extractProps';\nimport extractTransform from '../lib/extract/extractTransform';\nimport extractText, { setTSpan, TextChild } from '../lib/extract/extractText';\nimport { pickNotNil } from '../lib/util';\nimport Shape from './Shape';\nimport {\n  CommonPathProps,\n  FontProps,\n  NumberArray,\n  NumberProp,\n  TransformProps,\n} from '../lib/extract/types';\nimport { RNSVGTSpan } from './NativeComponents';\n\nexport interface TSpanProps extends CommonPathProps, FontProps {\n  children?: TextChild;\n  x?: NumberArray;\n  y?: NumberArray;\n  dx?: NumberArray;\n  dy?: NumberArray;\n  rotate?: NumberArray;\n  inlineSize?: NumberProp;\n}\n\nexport default class TSpan extends Shape<TSpanProps> {\n  static displayName = 'TSpan';\n\n  setNativeProps = (\n    props: Object & {\n      matrix?: number[];\n      style?: [] | {};\n    } & TransformProps,\n  ) => {\n    const matrix = !props.matrix && extractTransform(props);\n    if (matrix) {\n      props.matrix = matrix;\n    }\n    const prop = propsAndStyles(props);\n    Object.assign(prop, pickNotNil(extractText(prop, false)));\n    this.root && this.root.setNativeProps(prop);\n  };\n\n  render() {\n    const prop = propsAndStyles(this.props);\n    const props = extractProps(\n      {\n        ...prop,\n        x: null,\n        y: null,\n      },\n      this,\n    );\n    Object.assign(props, extractText(prop, false));\n    props.ref = this.refMethod as (instance: Component | null) => void;\n    return <RNSVGTSpan {...props} />;\n  }\n}\n\nsetTSpan(TSpan);\n"],"mappings":"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"}