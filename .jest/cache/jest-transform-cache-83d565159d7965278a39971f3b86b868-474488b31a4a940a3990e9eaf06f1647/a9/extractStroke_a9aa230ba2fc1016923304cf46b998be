6feddf9b26498ee28511271c25d0cc42
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = extractStroke;
var _extractBrush = _interopRequireDefault(require("./extractBrush"));
var _extractOpacity = _interopRequireDefault(require("./extractOpacity"));
var _extractLengthList = _interopRequireDefault(require("./extractLengthList"));
var caps = {
  butt: 0,
  square: 2,
  round: 1
};
var joins = {
  miter: 0,
  bevel: 2,
  round: 1
};
var vectorEffects = {
  none: 0,
  default: 0,
  nonScalingStroke: 1,
  'non-scaling-stroke': 1,
  inherit: 2,
  uri: 3
};
function extractStroke(o, props, inherited) {
  var stroke = props.stroke,
    strokeOpacity = props.strokeOpacity,
    strokeLinecap = props.strokeLinecap,
    strokeLinejoin = props.strokeLinejoin,
    strokeDasharray = props.strokeDasharray,
    strokeWidth = props.strokeWidth,
    strokeDashoffset = props.strokeDashoffset,
    strokeMiterlimit = props.strokeMiterlimit,
    vectorEffect = props.vectorEffect;
  if (stroke != null) {
    inherited.push('stroke');
    o.stroke = (0, _extractBrush.default)(stroke);
  }
  if (strokeWidth != null) {
    inherited.push('strokeWidth');
    o.strokeWidth = strokeWidth;
  }
  if (strokeOpacity != null) {
    inherited.push('strokeOpacity');
    o.strokeOpacity = (0, _extractOpacity.default)(strokeOpacity);
  }
  if (strokeDasharray != null) {
    inherited.push('strokeDasharray');
    var strokeDash = !strokeDasharray || strokeDasharray === 'none' ? null : (0, _extractLengthList.default)(strokeDasharray);
    o.strokeDasharray = strokeDash && strokeDash.length % 2 === 1 ? strokeDash.concat(strokeDash) : strokeDash;
  }
  if (strokeDashoffset != null) {
    inherited.push('strokeDashoffset');
    o.strokeDashoffset = strokeDasharray && strokeDashoffset ? +strokeDashoffset || 0 : null;
  }
  if (strokeLinecap != null) {
    inherited.push('strokeLinecap');
    o.strokeLinecap = strokeLinecap && caps[strokeLinecap] || 0;
  }
  if (strokeLinejoin != null) {
    inherited.push('strokeLinejoin');
    o.strokeLinejoin = strokeLinejoin && joins[strokeLinejoin] || 0;
  }
  if (strokeMiterlimit != null) {
    inherited.push('strokeMiterlimit');
    o.strokeMiterlimit = (strokeMiterlimit && typeof strokeMiterlimit !== 'number' ? parseFloat(strokeMiterlimit) : strokeMiterlimit) || 4;
  }
  if (vectorEffect != null) {
    o.vectorEffect = vectorEffect && vectorEffects[vectorEffect] || 0;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXh0cmFjdEJydXNoIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfZXh0cmFjdE9wYWNpdHkiLCJfZXh0cmFjdExlbmd0aExpc3QiLCJjYXBzIiwiYnV0dCIsInNxdWFyZSIsInJvdW5kIiwiam9pbnMiLCJtaXRlciIsImJldmVsIiwidmVjdG9yRWZmZWN0cyIsIm5vbmUiLCJkZWZhdWx0Iiwibm9uU2NhbGluZ1N0cm9rZSIsImluaGVyaXQiLCJ1cmkiLCJleHRyYWN0U3Ryb2tlIiwibyIsInByb3BzIiwiaW5oZXJpdGVkIiwic3Ryb2tlIiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZUxpbmVjYXAiLCJzdHJva2VMaW5lam9pbiIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZVdpZHRoIiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJ2ZWN0b3JFZmZlY3QiLCJwdXNoIiwic3Ryb2tlRGFzaCIsImxlbmd0aCIsImNvbmNhdCIsInBhcnNlRmxvYXQiXSwic291cmNlcyI6WyJleHRyYWN0U3Ryb2tlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHRyYWN0QnJ1c2ggZnJvbSAnLi9leHRyYWN0QnJ1c2gnO1xuaW1wb3J0IGV4dHJhY3RPcGFjaXR5IGZyb20gJy4vZXh0cmFjdE9wYWNpdHknO1xuaW1wb3J0IGV4dHJhY3RMZW5ndGhMaXN0IGZyb20gJy4vZXh0cmFjdExlbmd0aExpc3QnO1xuaW1wb3J0IHsgZXh0cmFjdGVkUHJvcHMsIFN0cm9rZVByb3BzIH0gZnJvbSAnLi90eXBlcyc7XG5cbmNvbnN0IGNhcHMgPSB7XG4gIGJ1dHQ6IDAsXG4gIHNxdWFyZTogMixcbiAgcm91bmQ6IDEsXG59O1xuXG5jb25zdCBqb2lucyA9IHtcbiAgbWl0ZXI6IDAsXG4gIGJldmVsOiAyLFxuICByb3VuZDogMSxcbn07XG5cbmNvbnN0IHZlY3RvckVmZmVjdHMgPSB7XG4gIG5vbmU6IDAsXG4gIGRlZmF1bHQ6IDAsXG4gIG5vblNjYWxpbmdTdHJva2U6IDEsXG4gICdub24tc2NhbGluZy1zdHJva2UnOiAxLFxuICBpbmhlcml0OiAyLFxuICB1cmk6IDMsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBleHRyYWN0U3Ryb2tlKFxuICBvOiBleHRyYWN0ZWRQcm9wcyxcbiAgcHJvcHM6IFN0cm9rZVByb3BzLFxuICBpbmhlcml0ZWQ6IHN0cmluZ1tdLFxuKSB7XG4gIGNvbnN0IHtcbiAgICBzdHJva2UsXG4gICAgc3Ryb2tlT3BhY2l0eSxcbiAgICBzdHJva2VMaW5lY2FwLFxuICAgIHN0cm9rZUxpbmVqb2luLFxuICAgIHN0cm9rZURhc2hhcnJheSxcbiAgICBzdHJva2VXaWR0aCxcbiAgICBzdHJva2VEYXNob2Zmc2V0LFxuICAgIHN0cm9rZU1pdGVybGltaXQsXG4gICAgdmVjdG9yRWZmZWN0LFxuICB9ID0gcHJvcHM7XG5cbiAgaWYgKHN0cm9rZSAhPSBudWxsKSB7XG4gICAgaW5oZXJpdGVkLnB1c2goJ3N0cm9rZScpO1xuICAgIG8uc3Ryb2tlID0gZXh0cmFjdEJydXNoKHN0cm9rZSk7XG4gIH1cbiAgaWYgKHN0cm9rZVdpZHRoICE9IG51bGwpIHtcbiAgICBpbmhlcml0ZWQucHVzaCgnc3Ryb2tlV2lkdGgnKTtcbiAgICBvLnN0cm9rZVdpZHRoID0gc3Ryb2tlV2lkdGg7XG4gIH1cbiAgaWYgKHN0cm9rZU9wYWNpdHkgIT0gbnVsbCkge1xuICAgIGluaGVyaXRlZC5wdXNoKCdzdHJva2VPcGFjaXR5Jyk7XG4gICAgby5zdHJva2VPcGFjaXR5ID0gZXh0cmFjdE9wYWNpdHkoc3Ryb2tlT3BhY2l0eSk7XG4gIH1cbiAgaWYgKHN0cm9rZURhc2hhcnJheSAhPSBudWxsKSB7XG4gICAgaW5oZXJpdGVkLnB1c2goJ3N0cm9rZURhc2hhcnJheScpO1xuICAgIGNvbnN0IHN0cm9rZURhc2ggPVxuICAgICAgIXN0cm9rZURhc2hhcnJheSB8fCBzdHJva2VEYXNoYXJyYXkgPT09ICdub25lJ1xuICAgICAgICA/IG51bGxcbiAgICAgICAgOiBleHRyYWN0TGVuZ3RoTGlzdChzdHJva2VEYXNoYXJyYXkpO1xuICAgIG8uc3Ryb2tlRGFzaGFycmF5ID1cbiAgICAgIHN0cm9rZURhc2ggJiYgc3Ryb2tlRGFzaC5sZW5ndGggJSAyID09PSAxXG4gICAgICAgID8gc3Ryb2tlRGFzaC5jb25jYXQoc3Ryb2tlRGFzaClcbiAgICAgICAgOiBzdHJva2VEYXNoO1xuICB9XG4gIGlmIChzdHJva2VEYXNob2Zmc2V0ICE9IG51bGwpIHtcbiAgICBpbmhlcml0ZWQucHVzaCgnc3Ryb2tlRGFzaG9mZnNldCcpO1xuICAgIG8uc3Ryb2tlRGFzaG9mZnNldCA9XG4gICAgICBzdHJva2VEYXNoYXJyYXkgJiYgc3Ryb2tlRGFzaG9mZnNldCA/ICtzdHJva2VEYXNob2Zmc2V0IHx8IDAgOiBudWxsO1xuICB9XG4gIGlmIChzdHJva2VMaW5lY2FwICE9IG51bGwpIHtcbiAgICBpbmhlcml0ZWQucHVzaCgnc3Ryb2tlTGluZWNhcCcpO1xuICAgIG8uc3Ryb2tlTGluZWNhcCA9IChzdHJva2VMaW5lY2FwICYmIGNhcHNbc3Ryb2tlTGluZWNhcF0pIHx8IDA7XG4gIH1cbiAgaWYgKHN0cm9rZUxpbmVqb2luICE9IG51bGwpIHtcbiAgICBpbmhlcml0ZWQucHVzaCgnc3Ryb2tlTGluZWpvaW4nKTtcbiAgICBvLnN0cm9rZUxpbmVqb2luID0gKHN0cm9rZUxpbmVqb2luICYmIGpvaW5zW3N0cm9rZUxpbmVqb2luXSkgfHwgMDtcbiAgfVxuICBpZiAoc3Ryb2tlTWl0ZXJsaW1pdCAhPSBudWxsKSB7XG4gICAgaW5oZXJpdGVkLnB1c2goJ3N0cm9rZU1pdGVybGltaXQnKTtcbiAgICBvLnN0cm9rZU1pdGVybGltaXQgPVxuICAgICAgKHN0cm9rZU1pdGVybGltaXQgJiYgdHlwZW9mIHN0cm9rZU1pdGVybGltaXQgIT09ICdudW1iZXInXG4gICAgICAgID8gcGFyc2VGbG9hdChzdHJva2VNaXRlcmxpbWl0KVxuICAgICAgICA6IHN0cm9rZU1pdGVybGltaXQpIHx8IDQ7XG4gIH1cbiAgaWYgKHZlY3RvckVmZmVjdCAhPSBudWxsKSB7XG4gICAgby52ZWN0b3JFZmZlY3QgPSAodmVjdG9yRWZmZWN0ICYmIHZlY3RvckVmZmVjdHNbdmVjdG9yRWZmZWN0XSkgfHwgMDtcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsSUFBQUEsYUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsZUFBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUUsa0JBQUEsR0FBQUgsc0JBQUEsQ0FBQUMsT0FBQTtBQUdBLElBQU1HLElBQUksR0FBRztFQUNYQyxJQUFJLEVBQUUsQ0FBQztFQUNQQyxNQUFNLEVBQUUsQ0FBQztFQUNUQyxLQUFLLEVBQUU7QUFDVCxDQUFDO0FBRUQsSUFBTUMsS0FBSyxHQUFHO0VBQ1pDLEtBQUssRUFBRSxDQUFDO0VBQ1JDLEtBQUssRUFBRSxDQUFDO0VBQ1JILEtBQUssRUFBRTtBQUNULENBQUM7QUFFRCxJQUFNSSxhQUFhLEdBQUc7RUFDcEJDLElBQUksRUFBRSxDQUFDO0VBQ1BDLE9BQU8sRUFBRSxDQUFDO0VBQ1ZDLGdCQUFnQixFQUFFLENBQUM7RUFDbkIsb0JBQW9CLEVBQUUsQ0FBQztFQUN2QkMsT0FBTyxFQUFFLENBQUM7RUFDVkMsR0FBRyxFQUFFO0FBQ1AsQ0FBQztBQUVjLFNBQVNDLGFBQWFBLENBQ25DQyxDQUFpQixFQUNqQkMsS0FBa0IsRUFDbEJDLFNBQW1CLEVBQ25CO0VBQ0EsSUFDRUMsTUFBTSxHQVNKRixLQUFLLENBVFBFLE1BQU07SUFDTkMsYUFBYSxHQVFYSCxLQUFLLENBUlBHLGFBQWE7SUFDYkMsYUFBYSxHQU9YSixLQUFLLENBUFBJLGFBQWE7SUFDYkMsY0FBYyxHQU1aTCxLQUFLLENBTlBLLGNBQWM7SUFDZEMsZUFBZSxHQUtiTixLQUFLLENBTFBNLGVBQWU7SUFDZkMsV0FBVyxHQUlUUCxLQUFLLENBSlBPLFdBQVc7SUFDWEMsZ0JBQWdCLEdBR2RSLEtBQUssQ0FIUFEs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