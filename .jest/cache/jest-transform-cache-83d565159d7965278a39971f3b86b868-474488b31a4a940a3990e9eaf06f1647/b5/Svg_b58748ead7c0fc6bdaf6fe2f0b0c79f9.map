{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_extractResponder","_extractViewBox","_Shape2","_G","_NativeComponents","_jsxFileName","_excluded","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","RNSVGSvgViewManager","NativeModules","styles","StyleSheet","create","svg","backgroundColor","borderWidth","defaultStyle","Svg","_Shape","_inherits2","_super","_this","_classCallCheck2","_len","length","args","Array","_key","concat","_defineProperty2","_assertThisInitialized2","callback","_assertThisInitialize","root","measureInWindow","_assertThisInitialize2","measure","relativeToNativeNode","onSuccess","onFail","_assertThisInitialize3","measureLayout","props","width","height","bbWidth","bbHeight","_assertThisInitialize4","setNativeProps","options","handle","findNodeHandle","toDataURL","_createClass2","key","value","render","_this$props","style","opacity","viewBox","children","onLayout","preserveAspectRatio","extracted","_objectWithoutProperties2","stylesAndProps","_extends3","isArray","Object","assign","_toConsumableArray2","color","focusable","font","transform","fill","fillOpacity","fillRule","stroke","strokeWidth","strokeOpacity","strokeDasharray","strokeDashoffset","strokeLinecap","strokeLinejoin","strokeMiterlimit","undefined","rootStyles","push","override","overrideStyles","o","NaN","isNaN","w","parseInt","h","doNotParseWidth","doNotParseHeight","flex","tint","processColor","tintColor","createElement","RNSVGSvg","_extends2","ref","refMethod","__self","__source","fileName","lineNumber","columnNumber","exports"],"sources":["Svg.tsx"],"sourcesContent":["import React, { Component } from 'react';\nimport {\n  ColorValue,\n  findNodeHandle,\n  MeasureInWindowOnSuccessCallback,\n  MeasureLayoutOnSuccessCallback,\n  MeasureOnSuccessCallback,\n  NativeModules,\n  processColor,\n  StyleProp,\n  StyleSheet,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  extractedProps,\n  NumberProp,\n  ResponderInstanceProps,\n} from '../lib/extract/types';\nimport extractResponder from '../lib/extract/extractResponder';\nimport extractViewBox from '../lib/extract/extractViewBox';\nimport Shape from './Shape';\nimport G, { GProps } from './G';\nimport { RNSVGSvg } from './NativeComponents';\n\nconst RNSVGSvgViewManager = NativeModules.RNSVGSvgViewManager;\n\nconst styles = StyleSheet.create({\n  svg: {\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n  },\n});\nconst defaultStyle = styles.svg;\n\nexport interface SvgProps extends GProps, ViewProps {\n  width?: NumberProp;\n  height?: NumberProp;\n  viewBox?: string;\n  preserveAspectRatio?: string;\n  color?: ColorValue;\n  title?: string;\n}\n\nexport default class Svg extends Shape<SvgProps> {\n  static displayName = 'Svg';\n\n  static defaultProps = {\n    preserveAspectRatio: 'xMidYMid meet',\n  };\n\n  measureInWindow = (callback: MeasureInWindowOnSuccessCallback) => {\n    const { root } = this;\n    root && root.measureInWindow(callback);\n  };\n\n  measure = (callback: MeasureOnSuccessCallback) => {\n    const { root } = this;\n    root && root.measure(callback);\n  };\n\n  measureLayout = (\n    relativeToNativeNode: number,\n    onSuccess: MeasureLayoutOnSuccessCallback,\n    onFail: () => void /* currently unused */,\n  ) => {\n    const { root } = this;\n    root && root.measureLayout(relativeToNativeNode, onSuccess, onFail);\n  };\n\n  setNativeProps = (\n    props: Object & {\n      width?: NumberProp;\n      height?: NumberProp;\n      bbWidth?: NumberProp;\n      bbHeight?: NumberProp;\n    },\n  ) => {\n    const { width, height } = props;\n    if (width) {\n      props.bbWidth = width;\n    }\n    if (height) {\n      props.bbHeight = height;\n    }\n    const { root } = this;\n    root && root.setNativeProps(props);\n  };\n\n  toDataURL = (callback: (base64: string) => void, options?: Object) => {\n    if (!callback) {\n      return;\n    }\n    const handle = findNodeHandle(this.root as Component);\n    RNSVGSvgViewManager.toDataURL(handle, options, callback);\n  };\n\n  render() {\n    const {\n      style,\n      opacity,\n      viewBox,\n      children,\n      onLayout,\n      preserveAspectRatio,\n      ...extracted\n    } = this.props;\n    const stylesAndProps = {\n      ...(Array.isArray(style) ? Object.assign({}, ...style) : style),\n      ...extracted,\n    };\n    let {\n      color,\n      width,\n      height,\n      focusable,\n\n      // Inherited G properties\n      font,\n      transform,\n      fill,\n      fillOpacity,\n      fillRule,\n      stroke,\n      strokeWidth,\n      strokeOpacity,\n      strokeDasharray,\n      strokeDashoffset,\n      strokeLinecap,\n      strokeLinejoin,\n      strokeMiterlimit,\n    } = stylesAndProps;\n    if (width === undefined && height === undefined) {\n      width = height = '100%';\n    }\n\n    const props: extractedProps = extracted as extractedProps;\n    props.focusable = Boolean(focusable) && focusable !== 'false';\n    const rootStyles: StyleProp<ViewStyle>[] = [defaultStyle];\n\n    if (style) {\n      rootStyles.push(style);\n    }\n\n    let override = false;\n    const overrideStyles: ViewStyle = {};\n    const o = opacity != null ? +opacity : NaN;\n    if (!isNaN(o)) {\n      override = true;\n      overrideStyles.opacity = o;\n    }\n\n    if (width && height) {\n      override = true;\n      const w = parseInt(width, 10);\n      const h = parseInt(height, 10);\n      const doNotParseWidth = isNaN(w) || width[width.length - 1] === '%';\n      const doNotParseHeight = isNaN(h) || height[height.length - 1] === '%';\n      overrideStyles.width = doNotParseWidth ? width : w;\n      overrideStyles.height = doNotParseHeight ? height : h;\n      overrideStyles.flex = 0;\n    }\n\n    if (override) {\n      rootStyles.push(overrideStyles);\n    }\n\n    props.style = rootStyles.length > 1 ? rootStyles : defaultStyle;\n\n    if (width != null) {\n      props.bbWidth = width;\n    }\n    if (height != null) {\n      props.bbHeight = height;\n    }\n\n    extractResponder(props, props, this as ResponderInstanceProps);\n\n    const tint = processColor(color);\n    if (tint != null) {\n      props.color = tint;\n      props.tintColor = tint;\n    }\n\n    if (onLayout != null) {\n      props.onLayout = onLayout;\n    }\n\n    return (\n      <RNSVGSvg\n        {...props}\n        ref={this.refMethod}\n        {...extractViewBox({ viewBox, preserveAspectRatio })}\n      >\n        <G\n          {...{\n            children,\n            style,\n            font,\n            transform,\n            fill,\n            fillOpacity,\n            fillRule,\n            stroke,\n            strokeWidth,\n            strokeOpacity,\n            strokeDasharray,\n            strokeDashoffset,\n            strokeLinecap,\n            strokeLinejoin,\n            strokeMiterlimit,\n          }}\n        />\n      </RNSVGSvg>\n    );\n  }\n}\n"],"mappings":"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"}