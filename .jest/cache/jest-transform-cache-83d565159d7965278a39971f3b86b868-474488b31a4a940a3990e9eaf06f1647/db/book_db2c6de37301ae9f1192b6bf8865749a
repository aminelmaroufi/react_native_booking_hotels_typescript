229e0e1f8b36b1af7cd5ba05beaff28e
"use strict";

var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getBookings = exports.createBooking = exports.addCard = exports.getHotels = void 0;
var adapter_1 = __importDefault(require("../utils/adapter"));
var getHotels = function getHotels(params) {
  var query = "q=" + params.q + "&page=" + params.page;
  return adapter_1.default.get("/hotels?" + query).catch(function (err) {
    return Promise.reject(err.response ? err.response.data.result : err);
  });
};
exports.getHotels = getHotels;
var addCard = function addCard(card) {
  return adapter_1.default.post('/customers/cards', card).catch(function (err) {
    var error;
    if (typeof err === 'string') {
      error.message = err;
    } else {
      error = err.response.data.message ? err.response.data : err.response.data.result;
    }
    return Promise.reject(error);
  });
};
exports.addCard = addCard;
var createBooking = function createBooking(book) {
  return adapter_1.default.post('/customers/bookings', book).catch(function (err) {
    var error;
    if (typeof err === 'string') {
      error.message = err;
    } else {
      error = err.response.data.message ? err.response.data : err.response.data.result;
    }
    return Promise.reject(error);
  });
};
exports.createBooking = createBooking;
var getBookings = function getBookings() {
  return adapter_1.default.get('/customers/bookings').catch(function (err) {
    var error;
    if (typeof err === 'string') {
      error.message = err;
    } else {
      error = err.response.data.message ? err.response.data : err.response.data.result;
    }
    return Promise.reject(error);
  });
};
exports.getBookings = getBookings;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhZGFwdGVyXzEiLCJfX2ltcG9ydERlZmF1bHQiLCJyZXF1aXJlIiwiZ2V0SG90ZWxzIiwicGFyYW1zIiwicXVlcnkiLCJxIiwicGFnZSIsImRlZmF1bHQiLCJnZXQiLCJjYXRjaCIsImVyciIsIlByb21pc2UiLCJyZWplY3QiLCJyZXNwb25zZSIsImRhdGEiLCJyZXN1bHQiLCJleHBvcnRzIiwiYWRkQ2FyZCIsImNhcmQiLCJwb3N0IiwiZXJyb3IiLCJtZXNzYWdlIiwiY3JlYXRlQm9va2luZyIsImJvb2siLCJnZXRCb29raW5ncyJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9BbWluZS9EZXNrdG9wL3Byb2plY3RzL0Jvb2tpbmdIb3RlbHNBcHAvc3JjL2FwaS9ib29rLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SUJvb2ssIElDYXJkfSBmcm9tICcuLi9tb2RlbHMnO1xuaW1wb3J0IGFkYXB0ZXIgZnJvbSAnLi4vdXRpbHMvYWRhcHRlcic7XG5cbmV4cG9ydCBjb25zdCBnZXRIb3RlbHMgPSAocGFyYW1zOiBhbnkpID0+IHtcbiAgY29uc3QgcXVlcnkgPSBgcT0ke3BhcmFtcy5xfSZwYWdlPSR7cGFyYW1zLnBhZ2V9YDtcbiAgcmV0dXJuIGFkYXB0ZXIuZ2V0KGAvaG90ZWxzPyR7cXVlcnl9YCkuY2F0Y2goZXJyID0+IHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyLnJlc3BvbnNlID8gZXJyLnJlc3BvbnNlLmRhdGEucmVzdWx0IDogZXJyKTtcbiAgfSk7XG59O1xuXG5leHBvcnQgY29uc3QgYWRkQ2FyZCA9IChjYXJkOiBJQ2FyZCkgPT4ge1xuICByZXR1cm4gYWRhcHRlci5wb3N0KCcvY3VzdG9tZXJzL2NhcmRzJywgY2FyZCkuY2F0Y2goZXJyID0+IHtcbiAgICBsZXQgZXJyb3I6IGFueTtcbiAgICBpZiAodHlwZW9mIGVyciA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGVycm9yLm1lc3NhZ2UgPSBlcnI7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVycm9yID0gZXJyLnJlc3BvbnNlLmRhdGEubWVzc2FnZVxuICAgICAgICA/IGVyci5yZXNwb25zZS5kYXRhXG4gICAgICAgIDogZXJyLnJlc3BvbnNlLmRhdGEucmVzdWx0O1xuICAgIH1cbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVCb29raW5nID0gKGJvb2s6IElCb29rKSA9PiB7XG4gIHJldHVybiBhZGFwdGVyLnBvc3QoJy9jdXN0b21lcnMvYm9va2luZ3MnLCBib29rKS5jYXRjaChlcnIgPT4ge1xuICAgIGxldCBlcnJvcjogYW55O1xuICAgIGlmICh0eXBlb2YgZXJyID09PSAnc3RyaW5nJykge1xuICAgICAgZXJyb3IubWVzc2FnZSA9IGVycjtcbiAgICB9IGVsc2Uge1xuICAgICAgZXJyb3IgPSBlcnIucmVzcG9uc2UuZGF0YS5tZXNzYWdlXG4gICAgICAgID8gZXJyLnJlc3BvbnNlLmRhdGFcbiAgICAgICAgOiBlcnIucmVzcG9uc2UuZGF0YS5yZXN1bHQ7XG4gICAgfVxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldEJvb2tpbmdzID0gKCkgPT4ge1xuICByZXR1cm4gYWRhcHRlci5nZXQoJy9jdXN0b21lcnMvYm9va2luZ3MnKS5jYXRjaChlcnIgPT4ge1xuICAgIGxldCBlcnJvcjogYW55O1xuICAgIGlmICh0eXBlb2YgZXJyID09PSAnc3RyaW5nJykge1xuICAgICAgZXJyb3IubWVzc2FnZSA9IGVycjtcbiAgICB9IGVsc2Uge1xuICAgICAgZXJyb3IgPSBlcnIucmVzcG9uc2UuZGF0YS5tZXNzYWdlXG4gICAgICAgID8gZXJyLnJlc3BvbnNlLmRhdGFcbiAgICAgICAgOiBlcnIucmVzcG9uc2UuZGF0YS5yZXN1bHQ7XG4gICAgfVxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gIH0pO1xufTtcbiJdLCJtYXBw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