{"version":3,"names":["react_1","__importStar","require","react_native_1","components_1","react_native_elements_1","FontAwesome_1","__importDefault","react_redux_1","actions_1","actionTypes_1","Login","passwordRef","dispatch","useDispatch","_ref","useState","_ref2","_slicedToArray2","default","email","setEmail","_ref3","_ref4","password","setPassword","_ref5","_ref6","selectedField","setSelectedField","_ref7","_ref8","secureTextEntry","setSecureTextEntry","_ref9","_ref10","isValid","setIsValid","_ref11","_ref12","emailIsValid","setEmailIsValid","_ref13","_ref14","emailValueIsValid","setEmailValueIsValid","_ref15","_ref16","pwdIsValid","setPwdIsValid","renderPasswordIcon","React","createElement","TouchableWithoutFeedback","onPress","toggleSecureEntry","name","size","renderValidInputIcon","color","renderInvalidInputIcon","updateFields","field","value","validateFields","emailValid","test","useEffect","login","loginRequest","validateForm","Layout","style","styles","container","Image","testID","source","logo","View","form","inputContainer","Input","autoFocus","label","placeholder","placeholderTextColor","keyboardType","status","accessoryRight","onChangeText","text","onSubmitEditing","focus","errorContainer","errorIcon","Text","errorStyle","LoginFormMessages","emailNotValid","ref","buttonContainer","Button","title","containerStyle","width","buttonStyle","button","titleStyle","textButton","type","disabled","StyleSheet","create","flex","alignContent","alignItems","backgroundColor","paddingTop","height","marginBottom","row","flexDirection","padding","textInput","fontSize","marginTop","borderRadius","fontWeight","textAlign","paddingLeft","marginLeft","exports"],"sources":["/Users/Amine/Desktop/projects/BookingHotelsApp/src/screens/Login.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {\n  StyleSheet,\n  TouchableWithoutFeedback,\n  Text,\n  View,\n  Image,\n} from 'react-native';\nimport {Layout, Input} from '@ui-kitten/components';\nimport {Button} from 'react-native-elements';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport {NativeStackNavigationProp} from '@react-navigation/native-stack';\nimport {useDispatch} from 'react-redux';\nimport {RootState} from '../redux/reducers';\nimport {loginRequest} from '../redux/actions';\nimport {LoginFormMessages} from '../utils/actionTypes';\n\nconst Login: React.FC = () => {\n  let passwordRef: any = null;\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [selectedField, setSelectedField] = useState('');\n  const [secureTextEntry, setSecureTextEntry] = useState(true);\n  const [isValid, setIsValid] = useState(null);\n  const [emailIsValid, setEmailIsValid] = useState(null);\n  const [emailValueIsValid, setEmailValueIsValid] = useState(null);\n  const [pwdIsValid, setPwdIsValid] = useState(null);\n\n  const renderPasswordIcon = () => (\n    <TouchableWithoutFeedback onPress={toggleSecureEntry}>\n      <Icon name={secureTextEntry ? 'eye-slash' : 'eye'} size={20} />\n    </TouchableWithoutFeedback>\n  );\n\n  const renderValidInputIcon = () => (\n    <TouchableWithoutFeedback onPress={toggleSecureEntry}>\n      <Icon name={'check-circle'} size={20} color={'green'} />\n    </TouchableWithoutFeedback>\n  );\n\n  const renderInvalidInputIcon = () => (\n    <TouchableWithoutFeedback onPress={toggleSecureEntry}>\n      <Icon name={'exclamation-circle'} size={20} color={'#ff375d'} />\n    </TouchableWithoutFeedback>\n  );\n\n  const toggleSecureEntry = () => {\n    setSecureTextEntry(!secureTextEntry);\n  };\n\n  const updateFields = (field: string, value: string) => {\n    if (field === 'email') {\n      setEmail(value);\n    } else {\n      setPassword(value);\n    }\n    setSelectedField(field);\n  };\n\n  const validateFields = () => {\n    switch (selectedField) {\n      case 'email': {\n        const emailValid = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(\n          email,\n        );\n        if (email) {\n          setEmailIsValid(true);\n\n          if (email && !emailValid) {\n            setEmailValueIsValid(false);\n          } else if (emailValid) {\n            setEmailValueIsValid(true);\n          }\n        } else {\n          setEmailValueIsValid(null);\n          setEmailIsValid(false);\n        }\n        break;\n      }\n      case 'password': {\n        if (password) {\n          setPwdIsValid(true);\n        } else {\n          setPwdIsValid(false);\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    validateFields();\n  }, [email, password]);\n\n  const login = () => {\n    dispatch(loginRequest(email, password));\n  };\n\n  useEffect(() => {\n    const validateForm = () => {\n      if (pwdIsValid && emailIsValid && emailValueIsValid) {\n        setIsValid(true);\n      } else {\n        setIsValid(false);\n      }\n    };\n    validateForm();\n  }, [emailIsValid, emailValueIsValid, pwdIsValid]);\n\n  return (\n    <Layout style={styles.container}>\n      <Image\n        testID=\"logo\"\n        source={require('../assets/logo.png')}\n        style={styles.logo}\n      />\n      <View style={styles.form}>\n        <View style={styles.inputContainer}>\n          <Input\n            testID=\"email\"\n            autoFocus\n            label=\"Email Address\"\n            placeholder=\"Place your email address\"\n            placeholderTextColor=\"#000\"\n            keyboardType=\"email-address\"\n            status={\n              emailIsValid && emailValueIsValid\n                ? 'success'\n                : emailIsValid === false || emailValueIsValid === false\n                ? 'danger'\n                : 'basic'\n            }\n            accessoryRight={\n              emailIsValid && emailValueIsValid\n                ? renderValidInputIcon\n                : emailIsValid === false || emailValueIsValid === false\n                ? renderInvalidInputIcon\n                : null\n            }\n            value={email}\n            onChangeText={text => updateFields('email', text)}\n            onSubmitEditing={() => passwordRef.focus()}\n          />\n          {emailIsValid === false && (\n            <View style={styles.errorContainer}>\n              <Icon\n                name=\"exclamation-triangle\"\n                color={'#ff375d'}\n                size={8}\n                style={styles.errorIcon}\n              />\n              <Text style={styles.errorStyle}>{LoginFormMessages.email}</Text>\n            </View>\n          )}\n          {emailValueIsValid === false && (\n            <View style={styles.errorContainer}>\n              <Icon\n                name=\"exclamation-triangle\"\n                color={'#ff375d'}\n                size={8}\n                style={styles.errorIcon}\n              />\n              <Text style={styles.errorStyle}>\n                {LoginFormMessages.emailNotValid}\n              </Text>\n            </View>\n          )}\n        </View>\n        <View style={styles.inputContainer}>\n          <Input\n            testID=\"password\"\n            ref={ref => (passwordRef = ref)}\n            label=\"Password\"\n            placeholder=\"Place your password\"\n            placeholderTextColor=\"#000\"\n            secureTextEntry={secureTextEntry}\n            accessoryRight={renderPasswordIcon}\n            value={password}\n            status={\n              pwdIsValid ? 'success' : pwdIsValid === false ? 'danger' : 'basic'\n            }\n            onChangeText={text => updateFields('password', text)}\n            onSubmitEditing={() => login()}\n          />\n          {pwdIsValid === false && (\n            <View style={styles.errorContainer}>\n              <Icon\n                name=\"exclamation-triangle\"\n                color={'#ff375d'}\n                size={8}\n                style={styles.errorIcon}\n              />\n              <Text style={styles.errorStyle}>\n                {LoginFormMessages.password}\n              </Text>\n            </View>\n          )}\n        </View>\n\n        <View style={styles.buttonContainer}>\n          <Button\n            testID=\"login-btn\"\n            title={'Login'}\n            containerStyle={{width: 'auto'}}\n            buttonStyle={styles.button}\n            titleStyle={styles.textButton}\n            type=\"solid\"\n            disabled={!isValid}\n            onPress={() => login()}\n          />\n        </View>\n      </View>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    // padding: 10,\n    paddingTop: 40,\n  },\n  logo: {\n    height: 200,\n    width: 400,\n    marginBottom: 100,\n  },\n  form: {\n    flex: 1,\n  },\n  row: {\n    flexDirection: 'row',\n    padding: 10,\n  },\n  inputContainer: {\n    width: 300,\n    marginBottom: 25,\n  },\n  textInput: {\n    fontSize: 16,\n  },\n  buttonContainer: {marginTop: 10},\n  button: {\n    backgroundColor: '#2756a1',\n    borderRadius: 10,\n    width: '100%',\n    height: 50,\n  },\n  textButton: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600',\n    textAlign: 'center',\n  },\n  errorContainer: {\n    flexDirection: 'row',\n    marginTop: 5,\n    paddingLeft: 10,\n  },\n  errorIcon: {\n    paddingTop: 4,\n  },\n  errorStyle: {\n    fontSize: 12,\n    marginLeft: 3,\n    color: '#ff375d',\n  },\n});\n\nexport default Login;\n"],"mappings":"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"}