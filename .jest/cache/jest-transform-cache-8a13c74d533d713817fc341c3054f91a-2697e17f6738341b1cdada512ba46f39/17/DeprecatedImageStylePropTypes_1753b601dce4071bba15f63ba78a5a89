4fd86872640fb6a40bf27ceb59780403
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var DeprecatedColorPropType = require('./DeprecatedColorPropType');
var DeprecatedLayoutPropTypes = require('./DeprecatedLayoutPropTypes');
var DeprecatedShadowPropTypesIOS = require('./DeprecatedShadowPropTypesIOS');
var DeprecatedTransformPropTypes = require('./DeprecatedTransformPropTypes');
var ReactPropTypes = require('prop-types');
var ImageStylePropTypes = (0, _extends2.default)({}, DeprecatedLayoutPropTypes, DeprecatedShadowPropTypesIOS, DeprecatedTransformPropTypes, {
  resizeMode: ReactPropTypes.oneOf(['center', 'contain', 'cover', 'repeat', 'stretch']),
  backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
  backgroundColor: DeprecatedColorPropType,
  borderColor: DeprecatedColorPropType,
  borderWidth: ReactPropTypes.number,
  borderRadius: ReactPropTypes.number,
  overflow: ReactPropTypes.oneOf(['visible', 'hidden']),
  tintColor: DeprecatedColorPropType,
  opacity: ReactPropTypes.number,
  overlayColor: ReactPropTypes.string,
  borderTopLeftRadius: ReactPropTypes.number,
  borderTopRightRadius: ReactPropTypes.number,
  borderBottomLeftRadius: ReactPropTypes.number,
  borderBottomRightRadius: ReactPropTypes.number
});
module.exports = ImageStylePropTypes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9leHRlbmRzMiIsIkRlcHJlY2F0ZWRDb2xvclByb3BUeXBlIiwiRGVwcmVjYXRlZExheW91dFByb3BUeXBlcyIsIkRlcHJlY2F0ZWRTaGFkb3dQcm9wVHlwZXNJT1MiLCJEZXByZWNhdGVkVHJhbnNmb3JtUHJvcFR5cGVzIiwiUmVhY3RQcm9wVHlwZXMiLCJJbWFnZVN0eWxlUHJvcFR5cGVzIiwiZGVmYXVsdCIsInJlc2l6ZU1vZGUiLCJvbmVPZiIsImJhY2tmYWNlVmlzaWJpbGl0eSIsImJhY2tncm91bmRDb2xvciIsImJvcmRlckNvbG9yIiwiYm9yZGVyV2lkdGgiLCJudW1iZXIiLCJib3JkZXJSYWRpdXMiLCJvdmVyZmxvdyIsInRpbnRDb2xvciIsIm9wYWNpdHkiLCJvdmVybGF5Q29sb3IiLCJzdHJpbmciLCJib3JkZXJUb3BMZWZ0UmFkaXVzIiwiYm9yZGVyVG9wUmlnaHRSYWRpdXMiLCJib3JkZXJCb3R0b21MZWZ0UmFkaXVzIiwiYm9yZGVyQm90dG9tUmlnaHRSYWRpdXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiRGVwcmVjYXRlZEltYWdlU3R5bGVQcm9wVHlwZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvd1xuICogQGZvcm1hdFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgRGVwcmVjYXRlZENvbG9yUHJvcFR5cGUgPSByZXF1aXJlKCcuL0RlcHJlY2F0ZWRDb2xvclByb3BUeXBlJyk7XG5jb25zdCBEZXByZWNhdGVkTGF5b3V0UHJvcFR5cGVzID0gcmVxdWlyZSgnLi9EZXByZWNhdGVkTGF5b3V0UHJvcFR5cGVzJyk7XG5jb25zdCBEZXByZWNhdGVkU2hhZG93UHJvcFR5cGVzSU9TID0gcmVxdWlyZSgnLi9EZXByZWNhdGVkU2hhZG93UHJvcFR5cGVzSU9TJyk7XG5jb25zdCBEZXByZWNhdGVkVHJhbnNmb3JtUHJvcFR5cGVzID0gcmVxdWlyZSgnLi9EZXByZWNhdGVkVHJhbnNmb3JtUHJvcFR5cGVzJyk7XG5jb25zdCBSZWFjdFByb3BUeXBlcyA9IHJlcXVpcmUoJ3Byb3AtdHlwZXMnKTtcblxuY29uc3QgSW1hZ2VTdHlsZVByb3BUeXBlcyA9IHtcbiAgLi4uRGVwcmVjYXRlZExheW91dFByb3BUeXBlcyxcbiAgLi4uRGVwcmVjYXRlZFNoYWRvd1Byb3BUeXBlc0lPUyxcbiAgLi4uRGVwcmVjYXRlZFRyYW5zZm9ybVByb3BUeXBlcyxcbiAgcmVzaXplTW9kZTogKFJlYWN0UHJvcFR5cGVzLm9uZU9mKFtcbiAgICAnY2VudGVyJyxcbiAgICAnY29udGFpbicsXG4gICAgJ2NvdmVyJyxcbiAgICAncmVwZWF0JyxcbiAgICAnc3RyZXRjaCcsXG4gIF0pOiBSZWFjdCRQcm9wVHlwZSRQcmltaXRpdmU8XG4gICAgJ2NlbnRlcicgfCAnY29udGFpbicgfCAnY292ZXInIHwgJ3JlcGVhdCcgfCAnc3RyZXRjaCcsXG4gID4pLFxuICBiYWNrZmFjZVZpc2liaWxpdHk6IChSZWFjdFByb3BUeXBlcy5vbmVPZihbXG4gICAgJ3Zpc2libGUnLFxuICAgICdoaWRkZW4nLFxuICBdKTogUmVhY3QkUHJvcFR5cGUkUHJpbWl0aXZlPCd2aXNpYmxlJyB8ICdoaWRkZW4nPiksXG4gIGJhY2tncm91bmRDb2xvcjogRGVwcmVjYXRlZENvbG9yUHJvcFR5cGUsXG4gIGJvcmRlckNvbG9yOiBEZXByZWNhdGVkQ29sb3JQcm9wVHlwZSxcbiAgYm9yZGVyV2lkdGg6IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbiAgYm9yZGVyUmFkaXVzOiBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG4gIG92ZXJmbG93OiAoUmVhY3RQcm9wVHlwZXMub25lT2YoW1xuICAgICd2aXNpYmxlJyxcbiAgICAnaGlkZGVuJyxcbiAgXSk6IFJlYWN0JFByb3BUeXBlJFByaW1pdGl2ZTwndmlzaWJsZScgfCAnaGlkZGVuJz4pLFxuXG4gIC8qKlxuICAgKiBDaGFuZ2VzIHRoZSBjb2xvciBvZiBhbGwgdGhlIG5vbi10cmFuc3BhcmVudCBwaXhlbHMgdG8gdGhlIHRpbnRDb2xvci5cbiAgICovXG4gIHRpbnRDb2xvcjogRGVwcmVjYXRlZENvbG9yUHJvcFR5cGUsXG4gIG9wYWNpdHk6IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbiAgLyoqXG4gICAqIFdoZW4gdGhlIGltYWdlIGhhcyByb3VuZGVkIGNvcm5lcnMsIHNwZWNpZnlpbmcgYW4gb3ZlcmxheUNvbG9yIHdpbGxcbiAgICogY2F1c2UgdGhlIHJlbWFpbmluZyBzcGFjZSBpbiB0aGUgY29ybmVycyB0byBiZSBmaWxsZWQgd2l0aCBhIHNvbGlkIGNvbG9yLlxuICAgKiBUaGlzIGlzIHVzZWZ1bCBpbiBjYXNlcyB3aGljaCBhcmUgbm90IHN1cHBvcnRlZCBieSB0aGUgQW5kcm9pZFxuICAgKiBpbXBsZW1lbnRhdGlvbiBvZiByb3VuZGVkIGNvcm5lcnM6XG4gICAqICAgLSBDZXJ0YWluIHJlc2l6ZSBtb2Rlcywgc3VjaCBhcyAnY29udGFpbidcbiAgICogICAtIEFuaW1hdGVkIEdJRnNcbiAgICpcbiAgICogQSB0eXBpY2FsIHdheSB0byB1c2UgdGhpcyBwcm9wIGlzIHdpdGggaW1hZ2VzIGRpc3BsYXllZCBvbiBhIHNvbGlkXG4gICAqIGJhY2tncm91bmQgYW5kIHNldHRpbmcgdGhlIGBvdmVybGF5Q29sb3JgIHRvIHRoZSBzYW1lIGNvbG9yXG4gICAqIGFzIHRoZSBiYWNrZ3JvdW5kLlxuICAgKlxuICAgKiBGb3IgZGV0YWlscyBvZiBob3cgdGhpcyB3b3JrcyB1bmRlciB0aGUgaG9vZCwgc2VlXG4gICAqIGh0dHA6Ly9mcmVzY29saWIub3JnL2RvY3Mvcm91bmRlZC1jb3JuZXJzLWFuZC1jaXJjbGVzLmh0bWxcbiAgICpcbiAgICogQHBsYXRmb3JtIGFuZHJvaWRcbiAgICovXG4gIG92ZXJsYXlDb2xvcjogUmVhY3RQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8vIEFuZHJvaWQtU3BlY2lmaWMgc3R5bGVzXG4gIGJvcmRlclRvcExlZnRSYWRpdXM6IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbiAgYm9yZGVyVG9wUmlnaHRSYWRpdXM6IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbiAgYm9yZGVyQm90dG9tTGVmdFJhZGl1czogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICBib3JkZXJCb3R0b21SaWdodFJhZGl1czogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBJbWFnZVN0eWxlUHJvcFR5cGVzO1xuIl0sIm1hcHBpbmdzIjoiQUFVQSxZQUFZOztBQUFDLElBQUFBLHNCQUFBLEdBQUFDLE9BQUE7QUFBQSxJQUFBQyxTQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFFYixJQUFNRSx1QkFBdUIsR0FBR0YsT0FBTyxDQUFDLDJCQUEyQixDQUFDO0FBQ3BFLElBQU1HLHlCQUF5QixHQUFHSCxPQUFPLENBQUMsNkJBQTZCLENBQUM7QUFDeEUsSUFBTUksNEJBQTRCLEdBQUdKLE9BQU8sQ0FBQyxnQ0FBZ0MsQ0FBQztBQUM5RSxJQUFNSyw0QkFBNEIsR0FBR0wsT0FBTyxDQUFDLGdDQUFnQyxDQUFDO0FBQzlFLElBQU1NLGNBQWMsR0FBR04sT0FBTyxDQUFDLFlBQVksQ0FBQztBQUU1QyxJQUFNTyxtQkFBbUIsT0FBQU4sU0FBQSxDQUFBTyxPQUFBLE1BQ3BCTCx5QkFBeUIsRUFDekJDLDRCQUE0QixFQUM1QkMsNEJBQTRCO0VBQy9CSSxVQUFVLEVBQUdILGNBQWMsQ0FBQ0ksS0FBSyxDQUFDLENBQ2hDLFFBQVEsRUFDUixTQUFTLEVBQ1QsT0FBTyxFQUNQLFFBQVEsRUFDUixTQUFTLENBQ1YsQ0FFQztFQUNGQyxrQkFBa0IsRUFBR0wsY0FBYyxDQUFDSSxLQUFLLENBQUMsQ0FDeEMsU0FBUyxFQUNULFFBQVEsQ0FDVCxDQUFrRDtFQUNuREUsZUFBZSxFQUFFVix1QkFBdUI7RUFDeENXLFdBQVcsRUFBRVgsdUJBQXVCO0VBQ3BDWSxXQUFXLEVBQUVSLGNBQWMsQ0FBQ1MsTUFBTTtFQUNsQ0MsWUFBWSxFQUFFVixjQUFjLENBQUNTLE1BQU07RUFDbkNFLFFBQVEsRUFBR1gsY0FBYyxDQUFDSSxLQUFLLENBQUMsQ0FDOUIsU0FBUyxFQUNULFFBQVEsQ0FDVCxDQUFrRDtFQUtuRFEsU0FBUyxFQUFFaEIsdUJBQXVCO0VBQ2xDaUIsT0FBTyxFQUFFYixjQUFjLENBQUNTLE1BQU07RUFrQjlCSyxZQUFZLEVBQUVkLGNBQWMsQ0FBQ2UsTUFBTTtFQUduQ0MsbUJBQW1CLEVBQUVoQixjQUFjLENBQUNTLE1BQU07RUFDMUNRLG9CQUFvQixFQUFFakIsY0FBYyxDQUFDUyxNQUFNO0VBQzNDUyxzQkFBc0IsRUFBRWxCLGNBQWMsQ0FBQ1MsTUFBTTtFQUM3Q1UsdUJBQXVCLEVBQUVuQixjQUFjLENBQUNTO0FBQU0sRUFDL0M7QUFFRFcsTUFBTSxDQUFDQyxPQUFPLEdBQUdwQixtQkFBbUIifQ==