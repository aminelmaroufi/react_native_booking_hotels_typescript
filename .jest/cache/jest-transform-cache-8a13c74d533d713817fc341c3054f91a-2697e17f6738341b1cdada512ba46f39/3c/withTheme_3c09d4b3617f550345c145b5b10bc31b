658786841aea5bcbfb9f40337e2cb865
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _deepmerge = _interopRequireDefault(require("deepmerge"));
var _hoistNonReactStatics = _interopRequireDefault(require("hoist-non-react-statics"));
var _ThemeProvider = require("./ThemeProvider");
var _theme = _interopRequireDefault(require("./theme"));
var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
var isClassComponent = function isClassComponent(Component) {
  return Boolean(Component.prototype && Component.prototype.isReactComponent);
};
var ThemedComponent = function ThemedComponent(WrappedComponent, themeKey, displayName) {
  return (0, _extends2.default)(function (props, forwardedRef) {
    var children = props.children,
      rest = __rest(props, ["children"]);
    return _react.default.createElement(_ThemeProvider.ThemeConsumer, null, function (context) {
      if (!context) {
        var _newProps = (0, _extends2.default)((0, _extends2.default)({}, rest), {
          theme: _theme.default,
          children: children
        });
        return isClassComponent(WrappedComponent) ? _react.default.createElement(WrappedComponent, (0, _extends2.default)({
          ref: forwardedRef
        }, _newProps)) : _react.default.createElement(WrappedComponent, _newProps);
      }
      var theme = context.theme,
        updateTheme = context.updateTheme,
        replaceTheme = context.replaceTheme;
      var newProps = (0, _extends2.default)((0, _extends2.default)({
        theme: theme,
        updateTheme: updateTheme,
        replaceTheme: replaceTheme
      }, (0, _deepmerge.default)(themeKey && theme[themeKey] || {}, rest, {
        clone: false
      })), {
        children: children
      });
      if (isClassComponent(WrappedComponent)) {
        return _react.default.createElement(WrappedComponent, (0, _extends2.default)({
          ref: forwardedRef
        }, newProps));
      }
      return _react.default.createElement(WrappedComponent, newProps);
    });
  }, {
    displayName: displayName
  });
};
function withTheme(WrappedComponent, themeKey) {
  var name = themeKey ? "Themed." + themeKey : "Themed." + (WrappedComponent.displayName || WrappedComponent.name || 'Component');
  var Component = ThemedComponent(WrappedComponent, themeKey, name);
  if (isClassComponent(WrappedComponent)) {
    return (0, _hoistNonReactStatics.default)(_react.default.forwardRef(Component), WrappedComponent);
  }
  return Component;
}
var _default = withTheme;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9kZWVwbWVyZ2UiLCJfaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJfVGhlbWVQcm92aWRlciIsIl90aGVtZSIsIl9fcmVzdCIsInMiLCJlIiwidCIsInAiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpbmRleE9mIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiaSIsImxlbmd0aCIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiaXNDbGFzc0NvbXBvbmVudCIsIkNvbXBvbmVudCIsIkJvb2xlYW4iLCJpc1JlYWN0Q29tcG9uZW50IiwiVGhlbWVkQ29tcG9uZW50IiwiV3JhcHBlZENvbXBvbmVudCIsInRoZW1lS2V5IiwiZGlzcGxheU5hbWUiLCJfZXh0ZW5kczIiLCJkZWZhdWx0IiwicHJvcHMiLCJmb3J3YXJkZWRSZWYiLCJjaGlsZHJlbiIsInJlc3QiLCJjcmVhdGVFbGVtZW50IiwiVGhlbWVDb25zdW1lciIsImNvbnRleHQiLCJuZXdQcm9wcyIsInRoZW1lIiwiRGVmYXVsdFRoZW1lIiwicmVmIiwidXBkYXRlVGhlbWUiLCJyZXBsYWNlVGhlbWUiLCJkZWVwbWVyZ2UiLCJjbG9uZSIsIndpdGhUaGVtZSIsIm5hbWUiLCJob2lzdE5vblJlYWN0U3RhdGljcyIsIlJlYWN0IiwiZm9yd2FyZFJlZiIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIndpdGhUaGVtZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19yZXN0ID0gKHRoaXMgJiYgdGhpcy5fX3Jlc3QpIHx8IGZ1bmN0aW9uIChzLCBlKSB7XG4gICAgdmFyIHQgPSB7fTtcbiAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkgJiYgZS5pbmRleE9mKHApIDwgMClcbiAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgaWYgKHMgIT0gbnVsbCAmJiB0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gXCJmdW5jdGlvblwiKVxuICAgICAgICBmb3IgKHZhciBpID0gMCwgcCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoZS5pbmRleE9mKHBbaV0pIDwgMCAmJiBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwocywgcFtpXSkpXG4gICAgICAgICAgICAgICAgdFtwW2ldXSA9IHNbcFtpXV07XG4gICAgICAgIH1cbiAgICByZXR1cm4gdDtcbn07XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGRlZXBtZXJnZSBmcm9tICdkZWVwbWVyZ2UnO1xuaW1wb3J0IGhvaXN0Tm9uUmVhY3RTdGF0aWNzIGZyb20gJ2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzJztcbmltcG9ydCB7IFRoZW1lQ29uc3VtZXIgfSBmcm9tICcuL1RoZW1lUHJvdmlkZXInO1xuaW1wb3J0IERlZmF1bHRUaGVtZSBmcm9tICcuL3RoZW1lJztcbmNvbnN0IGlzQ2xhc3NDb21wb25lbnQgPSAoQ29tcG9uZW50KSA9PiBCb29sZWFuKENvbXBvbmVudC5wcm90b3R5cGUgJiYgQ29tcG9uZW50LnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50KTtcbmNvbnN0IFRoZW1lZENvbXBvbmVudCA9IChXcmFwcGVkQ29tcG9uZW50LCB0aGVtZUtleSwgZGlzcGxheU5hbWUpID0+IHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbigocHJvcHMsIGZvcndhcmRlZFJlZikgPT4ge1xuICAgICAgICBjb25zdCB7IGNoaWxkcmVuIH0gPSBwcm9wcywgcmVzdCA9IF9fcmVzdChwcm9wcywgW1wiY2hpbGRyZW5cIl0pO1xuICAgICAgICByZXR1cm4gKDxUaGVtZUNvbnN1bWVyPlxuICAgICAgICAgIHsoY29udGV4dCkgPT4ge1xuICAgICAgICAgICAgLy8gSWYgdXNlciBpc24ndCB1c2luZyBUaGVtZVByb3ZpZGVyXG4gICAgICAgICAgICBpZiAoIWNvbnRleHQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBuZXdQcm9wcyA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgcmVzdCksIHsgdGhlbWU6IERlZmF1bHRUaGVtZSwgY2hpbGRyZW4gfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzQ2xhc3NDb21wb25lbnQoV3JhcHBlZENvbXBvbmVudCkgPyAoPFdyYXBwZWRDb21wb25lbnQgcmVmPXtmb3J3YXJkZWRSZWZ9IHsuLi5uZXdQcm9wc30vPikgOiAoPFdyYXBwZWRDb21wb25lbnQgey4uLm5ld1Byb3BzfS8+KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHsgdGhlbWUsIHVwZGF0ZVRoZW1lLCByZXBsYWNlVGhlbWUgfSA9IGNvbnRleHQ7XG4gICAgICAgICAgICBjb25zdCBuZXdQcm9wcyA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7IHRoZW1lLFxuICAgICAgICAgICAgICAgIHVwZGF0ZVRoZW1lLFxuICAgICAgICAgICAgICAgIHJlcGxhY2VUaGVtZSB9LCBkZWVwbWVyZ2UoKHRoZW1lS2V5ICYmXG4gICAgICAgICAgICAgICAgdGhlbWVbdGhlbWVLZXldKSB8fFxuICAgICAgICAgICAgICAgIHt9LCByZXN0LCB7XG4gICAgICAgICAgICAgICAgY2xvbmU6IGZhbHNlLFxuICAgICAgICAgICAgfSkpLCB7IGNoaWxkcmVuIH0pO1xuICAgICAgICAgICAgaWYgKGlzQ2xhc3NDb21wb25lbnQoV3JhcHBlZENvbXBvbmVudCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gPFdyYXBwZWRDb21wb25lbnQgcmVmPXtmb3J3YXJkZWRSZWZ9IHsuLi5uZXdQcm9wc30vPjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiA8V3JhcHBlZENvbXBvbmVudCB7Li4ubmV3UHJvcHN9Lz47XG4gICAgICAgIH19XG4gICAgICAgIDwvVGhlbWVDb25zdW1lcj4pO1xuICAgIH0sIHsgZGlzcGxheU5hbWU6IGRpc3BsYXlOYW1lIH0pO1xufTtcbmZ1bmN0aW9uIHdpdGhUaGVtZShXcmFwcGVkQ29tcG9uZW50LCB0aGVtZUtleSkge1xuICAgIGNvbnN0IG5hbWUgPSB0aGVtZUtleVxuICAgICAgICA/IGBUaGVtZWQuJHt0aGVtZUtleX1gXG4gICAgICAgIDogYFRoZW1lZC4ke1dyYXBwZWRDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgV3JhcHBlZENvbXBvbmVudC5uYW1lIHx8ICdDb21wb25lbnQnfWA7XG4gICAgY29uc3QgQ29tcG9uZW50ID0gVGhlbWVkQ29tcG9uZW50KFdyYXBwZWRDb21wb25lbnQsIHRoZW1lS2V5LCBuYW1lKTtcbiAgICBpZiAoaXNDbGFzc0NvbXBvbmVudChXcmFwcGVkQ29tcG9uZW50KSkge1xuICAgICAgICByZXR1cm4gaG9pc3ROb25SZWFjdFN0YXRpY3MoUmVhY3QuZm9yd2FyZFJlZihDb21wb25lbnQpLCBXcmFwcGVkQ29tcG9uZW50KTtcbiAgICB9XG4gICAgcmV0dXJuIENvbXBvbmVudDtcbn1cbmV4cG9ydCBkZWZhdWx0IHdpdGhUaGVtZTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFXQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxVQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxxQkFBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUcsY0FBQSxHQUFBSCxPQUFBO0FBQ0EsSUFBQUksTUFBQSxHQUFBTCxzQkFBQSxDQUFBQyxPQUFBO0FBZkEsSUFBSUssTUFBTSxHQUFJLFVBQVEsU0FBS0EsTUFBTSxJQUFLLFVBQVVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFO0VBQ2xELElBQUlDLENBQUMsR0FBRyxDQUFDLENBQUM7RUFDVixLQUFLLElBQUlDLENBQUMsSUFBSUgs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