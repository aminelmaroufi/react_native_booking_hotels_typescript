2384c0e176d774fcac1d33eed73995a4
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getHotels = exports.getBookings = exports.createBooking = exports.addCard = void 0;
var _adapter = _interopRequireDefault(require("../utils/adapter"));
var getHotels = function getHotels(params) {
  var query = "q=" + params.q + "&page=" + params.page;
  return _adapter.default.get("/hotels?" + query).catch(function (err) {
    return Promise.reject(err.response ? err.response.data.result : err);
  });
};
exports.getHotels = getHotels;
var addCard = function addCard(card) {
  return _adapter.default.post('/customers/cards', card).catch(function (err) {
    var error;
    if (typeof err === 'string') {
      error.message = err;
    } else {
      error = err.response.data.message ? err.response.data : err.response.data.result;
    }
    return Promise.reject(error);
  });
};
exports.addCard = addCard;
var createBooking = function createBooking(book) {
  return _adapter.default.post('/customers/bookings', book).catch(function (err) {
    var error;
    if (typeof err === 'string') {
      error.message = err;
    } else {
      error = err.response.data.message ? err.response.data : err.response.data.result;
    }
    return Promise.reject(error);
  });
};
exports.createBooking = createBooking;
var getBookings = function getBookings() {
  return _adapter.default.get('/customers/bookings').catch(function (err) {
    var error;
    if (typeof err === 'string') {
      error.message = err;
    } else {
      error = err.response.data.message ? err.response.data : err.response.data.result;
    }
    return Promise.reject(error);
  });
};
exports.getBookings = getBookings;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfYWRhcHRlciIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiZ2V0SG90ZWxzIiwicGFyYW1zIiwicXVlcnkiLCJxIiwicGFnZSIsImFkYXB0ZXIiLCJnZXQiLCJjYXRjaCIsImVyciIsIlByb21pc2UiLCJyZWplY3QiLCJyZXNwb25zZSIsImRhdGEiLCJyZXN1bHQiLCJleHBvcnRzIiwiYWRkQ2FyZCIsImNhcmQiLCJwb3N0IiwiZXJyb3IiLCJtZXNzYWdlIiwiY3JlYXRlQm9va2luZyIsImJvb2siLCJnZXRCb29raW5ncyJdLCJzb3VyY2VzIjpbImJvb2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJQm9vaywgSUNhcmR9IGZyb20gJy4uL21vZGVscyc7XG5pbXBvcnQgYWRhcHRlciBmcm9tICcuLi91dGlscy9hZGFwdGVyJztcblxuZXhwb3J0IGNvbnN0IGdldEhvdGVscyA9IChwYXJhbXM6IGFueSkgPT4ge1xuICBjb25zdCBxdWVyeSA9IGBxPSR7cGFyYW1zLnF9JnBhZ2U9JHtwYXJhbXMucGFnZX1gO1xuICByZXR1cm4gYWRhcHRlci5nZXQoYC9ob3RlbHM/JHtxdWVyeX1gKS5jYXRjaChlcnIgPT4ge1xuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnIucmVzcG9uc2UgPyBlcnIucmVzcG9uc2UuZGF0YS5yZXN1bHQgOiBlcnIpO1xuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRDYXJkID0gKGNhcmQ6IElDYXJkKSA9PiB7XG4gIHJldHVybiBhZGFwdGVyLnBvc3QoJy9jdXN0b21lcnMvY2FyZHMnLCBjYXJkKS5jYXRjaChlcnIgPT4ge1xuICAgIGxldCBlcnJvcjogYW55O1xuICAgIGlmICh0eXBlb2YgZXJyID09PSAnc3RyaW5nJykge1xuICAgICAgZXJyb3IubWVzc2FnZSA9IGVycjtcbiAgICB9IGVsc2Uge1xuICAgICAgZXJyb3IgPSBlcnIucmVzcG9uc2UuZGF0YS5tZXNzYWdlXG4gICAgICAgID8gZXJyLnJlc3BvbnNlLmRhdGFcbiAgICAgICAgOiBlcnIucmVzcG9uc2UuZGF0YS5yZXN1bHQ7XG4gICAgfVxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZUJvb2tpbmcgPSAoYm9vazogSUJvb2spID0+IHtcbiAgcmV0dXJuIGFkYXB0ZXIucG9zdCgnL2N1c3RvbWVycy9ib29raW5ncycsIGJvb2spLmNhdGNoKGVyciA9PiB7XG4gICAgbGV0IGVycm9yOiBhbnk7XG4gICAgaWYgKHR5cGVvZiBlcnIgPT09ICdzdHJpbmcnKSB7XG4gICAgICBlcnJvci5tZXNzYWdlID0gZXJyO1xuICAgIH0gZWxzZSB7XG4gICAgICBlcnJvciA9IGVyci5yZXNwb25zZS5kYXRhLm1lc3NhZ2VcbiAgICAgICAgPyBlcnIucmVzcG9uc2UuZGF0YVxuICAgICAgICA6IGVyci5yZXNwb25zZS5kYXRhLnJlc3VsdDtcbiAgICB9XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgfSk7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0Qm9va2luZ3MgPSAoKSA9PiB7XG4gIHJldHVybiBhZGFwdGVyLmdldCgnL2N1c3RvbWVycy9ib29raW5ncycpLmNhdGNoKGVyciA9PiB7XG4gICAgbGV0IGVycm9yOiBhbnk7XG4gICAgaWYgKHR5cGVvZiBlcnIgPT09ICdzdHJpbmcnKSB7XG4gICAgICBlcnJvci5tZXNzYWdlID0gZXJyO1xuICAgIH0gZWxzZSB7XG4gICAgICBlcnJvciA9IGVyci5yZXNwb25zZS5kYXRhLm1lc3NhZ2VcbiAgICAgICAgPyBlcnIucmVzcG9uc2UuZGF0YVxuICAgICAgICA6IGVyci5yZXNwb25zZS5kYXRhLnJlc3VsdDtcbiAgICB9XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgfSk7XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0EsSUFBQUEsUUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxP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