c0344b62ed9826d26d48b83b9b68d6fc
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = reducer;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _actionTypes = _interopRequireDefault(require("../../utils/actionTypes"));
var _user = require("../../models/user");
function cov_2dk8tw0nan() {
  var path = "/Users/Amine/Desktop/projects/BookingHotelsApp/src/redux/reducers/auth.ts";
  var hash = "a408251b9aca0c73b2904d762384e1b3c2976302";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/Amine/Desktop/projects/BookingHotelsApp/src/redux/reducers/auth.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 32
        },
        end: {
          line: 12,
          column: 1
        }
      },
      "1": {
        start: {
          line: 14,
          column: 2
        },
        end: {
          line: 80,
          column: 3
        }
      },
      "2": {
        start: {
          line: 16,
          column: 6
        },
        end: {
          line: 22,
          column: 8
        }
      },
      "3": {
        start: {
          line: 24,
          column: 6
        },
        end: {
          line: 28,
          column: 8
        }
      },
      "4": {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 35,
          column: 8
        }
      },
      "5": {
        start: {
          line: 37,
          column: 6
        },
        end: {
          line: 42,
          column: 8
        }
      },
      "6": {
        start: {
          line: 44,
          column: 6
        },
        end: {
          line: 48,
          column: 8
        }
      },
      "7": {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 53,
          column: 8
        }
      },
      "8": {
        start: {
          line: 55,
          column: 6
        },
        end: {
          line: 59,
          column: 8
        }
      },
      "9": {
        start: {
          line: 61,
          column: 6
        },
        end: {
          line: 67,
          column: 8
        }
      },
      "10": {
        start: {
          line: 69,
          column: 18
        },
        end: {
          line: 69,
          column: 79
        }
      },
      "11": {
        start: {
          line: 69,
          column: 47
        },
        end: {
          line: 69,
          column: 78
        }
      },
      "12": {
        start: {
          line: 70,
          column: 6
        },
        end: {
          line: 70,
          column: 41
        }
      },
      "13": {
        start: {
          line: 71,
          column: 6
        },
        end: {
          line: 77,
          column: 8
        }
      },
      "14": {
        start: {
          line: 79,
          column: 6
        },
        end: {
          line: 79,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "reducer",
        decl: {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 13,
            column: 31
          }
        },
        loc: {
          start: {
            line: 13,
            column: 75
          },
          end: {
            line: 81,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 69,
            column: 42
          },
          end: {
            line: 69,
            column: 43
          }
        },
        loc: {
          start: {
            line: 69,
            column: 47
          },
          end: {
            line: 69,
            column: 78
          }
        },
        line: 69
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 32
          },
          end: {
            line: 13,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 40
          },
          end: {
            line: 13,
            column: 52
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 80,
            column: 3
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 22,
            column: 8
          }
        }, {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 28,
            column: 8
          }
        }, {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 35,
            column: 8
          }
        }, {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 42,
            column: 8
          }
        }, {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 48,
            column: 8
          }
        }, {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 53,
            column: 8
          }
        }, {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 59,
            column: 8
          }
        }, {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 67,
            column: 8
          }
        }, {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 77,
            column: 8
          }
        }, {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 79,
            column: 19
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 46,
            column: 14
          },
          end: {
            line: 46,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 36
          },
          end: {
            line: 46,
            column: 55
          }
        }, {
          start: {
            line: 46,
            column: 58
          },
          end: {
            line: 46,
            column: 67
          }
        }],
        line: 46
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 20
          },
          end: {
            line: 47,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 42
          },
          end: {
            line: 47,
            column: 46
          }
        }, {
          start: {
            line: 47,
            column: 49
          },
          end: {
            line: 47,
            column: 54
          }
        }],
        line: 47
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0],
      "1": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a408251b9aca0c73b2904d762384e1b3c2976302"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2dk8tw0nan = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2dk8tw0nan();
var initialState = (cov_2dk8tw0nan().s[0]++, {
  fetching: false,
  isLoggedIn: false,
  message: '',
  error: false,
  user: _user.emptyUser,
  success: false
});
function reducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_2dk8tw0nan().b[0][0]++, initialState);
  var action = arguments.length > 1 ? arguments[1] : undefined;
  cov_2dk8tw0nan().f[0]++;
  cov_2dk8tw0nan().s[1]++;
  switch (action.type) {
    case _actionTypes.default.API_CALL_REQUEST:
      cov_2dk8tw0nan().b[1][0]++;
      cov_2dk8tw0nan().s[2]++;
      return (0, _extends2.default)({}, state, {
        fetching: true,
        success: false,
        error: false,
        message: ''
      });
    case _actionTypes.default.API_CALL_SUCCESS:
      cov_2dk8tw0nan().b[1][1]++;
      cov_2dk8tw0nan().s[3]++;
      return (0, _extends2.default)({}, state, {
        fetching: false,
        success: true
      });
    case _actionTypes.default.API_CALL_FAILURE:
      cov_2dk8tw0nan().b[1][2]++;
      cov_2dk8tw0nan().s[4]++;
      return (0, _extends2.default)({}, state, {
        fetching: false,
        error: true,
        message: action.payload.message
      });
    case _actionTypes.default.SUCCESS_OPERATION:
      cov_2dk8tw0nan().b[1][3]++;
      cov_2dk8tw0nan().s[5]++;
      return (0, _extends2.default)({}, state, {
        fetching: false,
        success: true,
        message: action.payload.message
      });
    case _actionTypes.default.CHECK_USER_SUCCESS:
      cov_2dk8tw0nan().b[1][4]++;
      cov_2dk8tw0nan().s[6]++;
      return (0, _extends2.default)({}, state, {
        user: action.payload.user ? (cov_2dk8tw0nan().b[2][0]++, action.payload.user) : (cov_2dk8tw0nan().b[2][1]++, _user.emptyUser),
        isLoggedIn: action.payload.user ? (cov_2dk8tw0nan().b[3][0]++, true) : (cov_2dk8tw0nan().b[3][1]++, false)
      });
    case _actionTypes.default.CREATE_ACCOUNT_SUCCESS:
      cov_2dk8tw0nan().b[1][5]++;
      cov_2dk8tw0nan().s[7]++;
      return (0, _extends2.default)({}, state, {
        user: action.payload.user
      });
    case _actionTypes.default.LOGIN_SUCCESS:
      cov_2dk8tw0nan().b[1][6]++;
      cov_2dk8tw0nan().s[8]++;
      return (0, _extends2.default)({}, state, {
        user: action.payload.user,
        isLoggedIn: true
      });
    case _actionTypes.default.ADD_CARD_SUCCESS:
      cov_2dk8tw0nan().b[1][7]++;
      cov_2dk8tw0nan().s[9]++;
      return (0, _extends2.default)({}, state, {
        user: (0, _extends2.default)({}, state.user, {
          cards: [].concat((0, _toConsumableArray2.default)(state.user.cards), [action.payload.card])
        })
      });
    case _actionTypes.default.SET_DEFAULT_CARD:
      cov_2dk8tw0nan().b[1][8]++;
      var cards = (cov_2dk8tw0nan().s[10]++, state.user.cards.filter(function (c) {
        cov_2dk8tw0nan().f[1]++;
        cov_2dk8tw0nan().s[11]++;
        return c.id !== action.payload.card.id;
      }));
      cov_2dk8tw0nan().s[12]++;
      cards.unshift(action.payload.card);
      cov_2dk8tw0nan().s[13]++;
      return (0, _extends2.default)({}, state, {
        user: (0, _extends2.default)({}, state.user, {
          cards: cards
        })
      });
    default:
      cov_2dk8tw0nan().b[1][9]++;
      cov_2dk8tw0nan().s[14]++;
      return state;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,