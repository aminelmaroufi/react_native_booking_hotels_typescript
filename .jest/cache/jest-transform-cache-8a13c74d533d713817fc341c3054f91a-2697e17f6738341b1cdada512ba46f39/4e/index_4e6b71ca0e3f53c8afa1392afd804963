683510912667a5413786b35c6d3c937f
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ScreenWidth = exports.ScreenHeight = void 0;
Object.defineProperty(exports, "color", {
  enumerable: true,
  get: function get() {
    return _color.default;
  }
});
Object.defineProperty(exports, "getIconType", {
  enumerable: true,
  get: function get() {
    return _getIconType.default;
  }
});
exports.isIOS = void 0;
Object.defineProperty(exports, "normalizeText", {
  enumerable: true,
  get: function get() {
    return _normalizeText.default;
  }
});
exports.patchWebProps = void 0;
Object.defineProperty(exports, "renderNode", {
  enumerable: true,
  get: function get() {
    return _renderNode.default;
  }
});
var _reactNative = require("react-native");
var _color = _interopRequireDefault(require("color"));
var _renderNode = _interopRequireDefault(require("./renderNode"));
var _getIconType = _interopRequireDefault(require("./getIconType"));
var _normalizeText = _interopRequireDefault(require("./normalizeText"));
var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
var Screen = _reactNative.Dimensions.get('window');
var ScreenWidth = Screen.width;
exports.ScreenWidth = ScreenWidth;
var ScreenHeight = Screen.height;
exports.ScreenHeight = ScreenHeight;
var isIOS = _reactNative.Platform.OS === 'ios';
exports.isIOS = isIOS;
var patchWebProps = function patchWebProps(_a) {
  var updateTheme = _a.updateTheme,
    replaceTheme = _a.replaceTheme,
    onClear = _a.onClear,
    rest = __rest(_a, ["updateTheme", "replaceTheme", "onClear"]);
  return rest;
};
exports.patchWebProps = patchWebProps;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX2NvbG9yIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9yZW5kZXJOb2RlIiwiX2dldEljb25UeXBlIiwiX25vcm1hbGl6ZVRleHQiLCJfX3Jlc3QiLCJzIiwiZSIsInQiLCJwIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaW5kZXhPZiIsImdldE93blByb3BlcnR5U3ltYm9scyIsImkiLCJsZW5ndGgiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIlNjcmVlbiIsIkRpbWVuc2lvbnMiLCJnZXQiLCJTY3JlZW5XaWR0aCIsIndpZHRoIiwiZXhwb3J0cyIsIlNjcmVlbkhlaWdodCIsImhlaWdodCIsImlzSU9TIiwiUGxhdGZvcm0iLCJPUyIsInBhdGNoV2ViUHJvcHMiLCJfYSIsInVwZGF0ZVRoZW1lIiwicmVwbGFjZVRoZW1lIiwib25DbGVhciIsInJlc3QiXSwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19yZXN0ID0gKHRoaXMgJiYgdGhpcy5fX3Jlc3QpIHx8IGZ1bmN0aW9uIChzLCBlKSB7XG4gICAgdmFyIHQgPSB7fTtcbiAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkgJiYgZS5pbmRleE9mKHApIDwgMClcbiAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgaWYgKHMgIT0gbnVsbCAmJiB0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gXCJmdW5jdGlvblwiKVxuICAgICAgICBmb3IgKHZhciBpID0gMCwgcCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoZS5pbmRleE9mKHBbaV0pIDwgMCAmJiBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwocywgcFtpXSkpXG4gICAgICAgICAgICAgICAgdFtwW2ldXSA9IHNbcFtpXV07XG4gICAgICAgIH1cbiAgICByZXR1cm4gdDtcbn07XG5pbXBvcnQgeyBQbGF0Zm9ybSwgRGltZW5zaW9ucyB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgY29sb3IgZnJvbSAnY29sb3InO1xuaW1wb3J0IHJlbmRlck5vZGUgZnJvbSAnLi9yZW5kZXJOb2RlJztcbmltcG9ydCBnZXRJY29uVHlwZSBmcm9tICcuL2dldEljb25UeXBlJztcbmltcG9ydCBub3JtYWxpemVUZXh0IGZyb20gJy4vbm9ybWFsaXplVGV4dCc7XG5jb25zdCBTY3JlZW4gPSBEaW1lbnNpb25zLmdldCgnd2luZG93Jyk7XG5jb25zdCBTY3JlZW5XaWR0aCA9IFNjcmVlbi53aWR0aDtcbmNvbnN0IFNjcmVlbkhlaWdodCA9IFNjcmVlbi5oZWlnaHQ7XG5jb25zdCBpc0lPUyA9IFBsYXRmb3JtLk9TID09PSAnaW9zJztcbmV4cG9ydCBjb25zdCBwYXRjaFdlYlByb3BzID0gKF9hKSA9PiB7XG4gICAgdmFyIHsgdXBkYXRlVGhlbWUsIHJlcGxhY2VUaGVtZSwgb25DbGVhciB9ID0gX2EsIHJlc3QgPSBfX3Jlc3QoX2EsIFtcInVwZGF0ZVRoZW1lXCIsIFwicmVwbGFjZVRoZW1lXCIsIFwib25DbGVhclwiXSk7XG4gICAgcmV0dXJuIHJlc3Q7XG59O1xuZXhwb3J0IHsgcmVuZGVyTm9kZSwgZ2V0SWNvblR5cGUsIG5vcm1hbGl6ZVRleHQsIFNjcmVlbldpZHRoLCBTY3JlZW5IZWlnaHQsIGlzSU9TLCBjb2xvciwgfTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBV0EsSUFBQUEsWUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsTUFBQSxHQUFBQyxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUcsV0FBQSxHQUFBRCxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUksWUFBQSxHQUFBRixzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUssY0FBQSxHQUFBSCxzQkFBQSxDQUFBRixPQUFBO0FBZkEsSUFBSU0sTUFBTSxHQUFJLFVBQVEsU0FBS0EsTUFBTSxJQUFLLFVBQVVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFO0VBQ2xELElBQUlDLENBQUMsR0FBRyxDQUFDLENBQUM7RUFDVixLQUFLLElBQUlDLENBQUMsSUFBSUgsQ0FBQyxFQUFFLElBQUlJLE1BQU0sQ0FBQ0MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ1AsQ0FBQyxFQUFFRyxDQUFDLENBQUMsSUFBSUYsQ0FBQyxDQUFDTyxPQUFPLENBQUNMLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFDL0VELENBQUMsQ0FBQ0MsQ0FBQyxDQUFDLEdBQUdILENBQUMsQ0FBQ0csQ0FBQyxDQUFDO0VBQ2YsSUFBSUgsQ0FBQyxJQUFJLElBQUksSUFBSSxPQUFPSSxNQUFNLENBQUNLLHFCQUFxQixLQUFLLFVBQVUsRUFDL0QsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxFQUFFUCxDQUFDLEdBQUdDLE1BQU0sQ0FBQ0sscUJBQXFCLENBQUNULENBQUMsQ0FBQyxFQUFFVSxDQUFDLEdBQUdQLENBQUMsQ0FBQ1EsTUFBTSxFQUFFRCxDQUFDLEVBQUUsRUFBRTtJQUNwRSxJQUFJVCxDQUFDLENBQUNPLE9BQU8sQ0FBQ0wsQ0FBQyxDQUFDTyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSU4sTUFBTSxDQUFDQyxTQUFTLENBQUNPLG9CQUFvQixDQUFDTCxJQUFJLENBQUNQLENBQUMsRUFBRUcsQ0FBQyxDQUFDTyxDQUFDLENBQUMsQ0FBQyxFQUMxRVIsQ0FBQyxDQUFDQyxDQUFDLENBQUNPLENBQUMsQ0FBQyxDQUFDLEdBQUdWLENBQUMsQ0FBQ0csQ0FBQyxDQUFDTyxDQUFDLENBQUMsQ0FBQztFQUN6QjtFQUNKLE9BQU9SLENBQUM7QUFDWixDQUFDO0FBTUQsSUFBTVcsTUFBTSxHQUFHQyx1QkFBVSxDQUFDQyxHQUFHLENBQUMsUUFBUSxDQUFDO0FBQ3ZDLElBQU1DLFdBQVcsR0FBR0gsTUFBTSxDQUFDSSxLQUFLO0FBQUNDLE9BQUEsQ0FBQUYsV0FBQSxHQUFBQSxXQUFBO0FBQ2pDLElBQU1HLFlBQVksR0FBR04sTUFBTSxDQUFDTyxNQUFNO0FBQUNGLE9BQUEsQ0FBQUMsWUFBQSxHQUFBQSxZQUFBO0FBQ25DLElBQU1FLEtBQUssR0FBR0MscUJBQVEsQ0FBQ0MsRUFBRSxLQUFLLEtBQUs7QUFBQ0wsT0FBQSxDQUFBRyxLQUFBLEdBQUFBLEtBQUE7QUFDN0IsSUFBTUcsYUFBYSxHQUFHLFNBQWhCQSxhQUFhQSxDQUFJQyxFQUFFLEVBQUs7RUFDakMsSUFBTUMsV0FBVyxHQUE0QkQsRUFBRSxDQUF6Q0MsV0FBVztJQUFFQyxZQUFZLEdBQWNGLEVBQUUsQ0FBNUJFLFlBQVk7SUFBRUMsT0FBTyxHQUFLSCxFQUFFLENBQWRHLE9BQU87SUFBU0MsSUFBSSxHQUFHOUIsTUFBTSxDQUFDMEIsRUFBRSxFQUFFLENBQUMsYUFBYSxFQUFFLGNBQWMsRUFBRSxTQUFTLENBQUMsQ0FBQztFQUM5RyxPQUFPSSxJQUFJO0FBQ2YsQ0FBQztBQUFDWCxPQUFBLENBQUFNLGFBQUEsR0FBQUEsYUFBQSJ9