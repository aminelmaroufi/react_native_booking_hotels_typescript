d45a7b73d77e9f899c764051822204ff
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _config = require("../config");
var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
var ListItemContent = function ListItemContent(_a) {
  var style = _a.style,
    right = _a.right,
    children = _a.children,
    props = __rest(_a, ["style", "right", "children"]);
  var containerStyle = right ? styles.rightContainer : styles.container;
  return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
    style: [containerStyle, style]
  }, props), children);
};
var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'flex-start'
  },
  rightContainer: {
    flex: 0.5,
    justifyContent: 'center',
    alignItems: 'flex-end'
  }
});
var _default = (0, _config.withTheme)(ListItemContent, 'ListItemContent');
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9jb25maWciLCJfX3Jlc3QiLCJzIiwiZSIsInQiLCJwIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaW5kZXhPZiIsImdldE93blByb3BlcnR5U3ltYm9scyIsImkiLCJsZW5ndGgiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIkxpc3RJdGVtQ29udGVudCIsIl9hIiwic3R5bGUiLCJyaWdodCIsImNoaWxkcmVuIiwicHJvcHMiLCJjb250YWluZXJTdHlsZSIsInN0eWxlcyIsInJpZ2h0Q29udGFpbmVyIiwiY29udGFpbmVyIiwiZGVmYXVsdCIsImNyZWF0ZUVsZW1lbnQiLCJWaWV3IiwiX2V4dGVuZHMyIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImZsZXgiLCJqdXN0aWZ5Q29udGVudCIsImFsaWduSXRlbXMiLCJfZGVmYXVsdCIsIndpdGhUaGVtZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJMaXN0SXRlbUNvbnRlbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fcmVzdCA9ICh0aGlzICYmIHRoaXMuX19yZXN0KSB8fCBmdW5jdGlvbiAocywgZSkge1xuICAgIHZhciB0ID0ge307XG4gICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApICYmIGUuaW5kZXhPZihwKSA8IDApXG4gICAgICAgIHRbcF0gPSBzW3BdO1xuICAgIGlmIChzICE9IG51bGwgJiYgdHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09IFwiZnVuY3Rpb25cIilcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIHAgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHMpOyBpIDwgcC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGUuaW5kZXhPZihwW2ldKSA8IDAgJiYgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHMsIHBbaV0pKVxuICAgICAgICAgICAgICAgIHRbcFtpXV0gPSBzW3BbaV1dO1xuICAgICAgICB9XG4gICAgcmV0dXJuIHQ7XG59O1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFN0eWxlU2hlZXQsIFZpZXcgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHsgd2l0aFRoZW1lIH0gZnJvbSAnLi4vY29uZmlnJztcbmNvbnN0IExpc3RJdGVtQ29udGVudCA9IChfYSkgPT4ge1xuICAgIHZhciB7IHN0eWxlLCByaWdodCwgY2hpbGRyZW4gfSA9IF9hLCBwcm9wcyA9IF9fcmVzdChfYSwgW1wic3R5bGVcIiwgXCJyaWdodFwiLCBcImNoaWxkcmVuXCJdKTtcbiAgICBjb25zdCBjb250YWluZXJTdHlsZSA9IHJpZ2h0ID8gc3R5bGVzLnJpZ2h0Q29udGFpbmVyIDogc3R5bGVzLmNvbnRhaW5lcjtcbiAgICByZXR1cm4gKDxWaWV3IHN0eWxlPXtbY29udGFpbmVyU3R5bGUsIHN0eWxlXX0gey4uLnByb3BzfT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L1ZpZXc+KTtcbn07XG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gICAgY29udGFpbmVyOiB7XG4gICAgICAgIGZsZXg6IDEsXG4gICAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICAgICAgYWxpZ25JdGVtczogJ2ZsZXgtc3RhcnQnLFxuICAgIH0sXG4gICAgcmlnaHRDb250YWluZXI6IHtcbiAgICAgICAgZmxleDogMC41LFxuICAgICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgICAgIGFsaWduSXRlbXM6ICdmbGV4LWVuZCcsXG4gICAgfSxcbn0pO1xuZXhwb3J0IGRlZmF1bHQgd2l0aFRoZW1lKExpc3RJdGVtQ29udGVudCwgJ0xpc3RJdGVtQ29udGVu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