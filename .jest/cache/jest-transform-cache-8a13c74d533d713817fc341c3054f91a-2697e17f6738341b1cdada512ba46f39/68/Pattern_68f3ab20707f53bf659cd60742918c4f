7bb93519c5679a135379563d7353867c
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _extractTransform = _interopRequireDefault(require("../lib/extract/extractTransform"));
var _extractViewBox = _interopRequireDefault(require("../lib/extract/extractViewBox"));
var _units = _interopRequireDefault(require("../lib/units"));
var _Shape2 = _interopRequireDefault(require("./Shape"));
var _NativeComponents = require("./NativeComponents");
var _jsxFileName = "/Users/wojciechlewicki/work/another/react-native-svg/src/elements/Pattern.tsx";
function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = (0, _getPrototypeOf2.default)(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return (0, _possibleConstructorReturn2.default)(this, result);
  };
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
var Pattern = function (_Shape) {
  (0, _inherits2.default)(Pattern, _Shape);
  var _super = _createSuper(Pattern);
  function Pattern() {
    (0, _classCallCheck2.default)(this, Pattern);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(Pattern, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var patternTransform = props.patternTransform,
        transform = props.transform,
        id = props.id,
        x = props.x,
        y = props.y,
        width = props.width,
        height = props.height,
        patternUnits = props.patternUnits,
        patternContentUnits = props.patternContentUnits,
        children = props.children,
        viewBox = props.viewBox,
        preserveAspectRatio = props.preserveAspectRatio;
      var matrix = (0, _extractTransform.default)(patternTransform || transform || props);
      var patternProps = {
        name: id,
        x: x,
        y: y,
        width: width,
        height: height,
        matrix: matrix,
        patternTransform: matrix,
        patternUnits: patternUnits && _units.default[patternUnits] || 0,
        patternContentUnits: patternContentUnits ? _units.default[patternContentUnits] : 1
      };
      return _react.default.createElement(_NativeComponents.RNSVGPattern, (0, _extends2.default)({
        ref: this.refMethod
      }, patternProps, (0, _extractViewBox.default)({
        viewBox: viewBox,
        preserveAspectRatio: preserveAspectRatio
      }), {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 68,
          columnNumber: 7
        }
      }), children);
    }
  }]);
  return Pattern;
}(_Shape2.default);
exports.default = Pattern;
(0, _defineProperty2.default)(Pattern, "displayName", 'Pattern');
(0, _defineProperty2.default)(Pattern, "defaultProps", {
  x: '0%',
  y: '0%',
  width: '100%',
  height: '100%'
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9leHRyYWN0VHJhbnNmb3JtIiwiX2V4dHJhY3RWaWV3Qm94IiwiX3VuaXRzIiwiX1NoYXBlMiIsIl9OYXRpdmVDb21wb25lbnRzIiwiX2pzeEZpbGVOYW1lIiwiX2NyZWF0ZVN1cGVyIiwiRGVyaXZlZCIsImhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiX2NyZWF0ZVN1cGVySW50ZXJuYWwiLCJTdXBlciIsIl9nZXRQcm90b3R5cGVPZjIiLCJkZWZhdWx0IiwicmVzdWx0IiwiTmV3VGFyZ2V0IiwiY29uc3RydWN0b3IiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiYXJndW1lbnRzIiwiYXBwbHkiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjIiLCJzaGFtIiwiUHJveHkiLCJCb29sZWFuIiwicHJvdG90eXBlIiwidmFsdWVPZiIsImNhbGwiLCJlIiwiUGF0dGVybiIsIl9TaGFwZSIsIl9pbmhlcml0czIiLCJfc3VwZXIiLCJfY2xhc3NDYWxsQ2hlY2syIiwiX2NyZWF0ZUNsYXNzMiIsImtleSIsInZhbHVlIiwicmVuZGVyIiwicHJvcHMiLCJwYXR0ZXJuVHJhbnNmb3JtIiwidHJhbnNmb3JtIiwiaWQiLCJ4IiwieSIsIndpZHRoIiwiaGVpZ2h0IiwicGF0dGVyblVuaXRzIiwicGF0dGVybkNvbnRlbnRVbml0cyIsImNoaWxkcmVuIiwidmlld0JveCIsInByZXNlcnZlQXNwZWN0UmF0aW8iLCJtYXRyaXgiLCJwYXR0ZXJuUHJvcHMiLCJuYW1lIiwiY3JlYXRlRWxlbWVudCIsIlJOU1ZHUGF0dGVybiIsIl9leHRlbmRzMiIsInJlZiIsInJlZk1ldGhvZCIsIl9fc2VsZiIsIl9fc291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwiY29sdW1uTnVtYmVyIiwiZXhwb3J0cyIsIl9kZWZpbmVQcm9wZXJ0eTIiXSwic291cmNlcyI6WyJQYXR0ZXJuLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGV4dHJhY3RUcmFuc2Zvcm0gZnJvbSAnLi4vbGliL2V4dHJhY3QvZXh0cmFjdFRyYW5zZm9ybSc7XG5pbXBvcnQgZXh0cmFjdFZpZXdCb3ggZnJvbSAnLi4vbGliL2V4dHJhY3QvZXh0cmFjdFZpZXdCb3gnO1xuaW1wb3J0IHtcbiAgQ29sdW1uTWFqb3JUcmFuc2Zvcm1NYXRyaXgsXG4gIE51bWJlclByb3AsXG4gIFRyYW5zZm9ybVByb3BzLFxuICBVbml0cyxcbn0gZnJvbSAnLi4vbGliL2V4dHJhY3QvdHlwZXMnO1xuaW1wb3J0IHVuaXRzIGZyb20gJy4uL2xpYi91bml0cyc7XG5pbXBvcnQgU2hhcGUgZnJvbSAnLi9TaGFwZSc7XG5pbXBvcnQgeyBSTlNWR1BhdHRlcm4gfSBmcm9tICcuL05hdGl2ZUNvbXBvbmVudHMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFBhdHRlcm5Qcm9wcyB7XG4gIGNoaWxkcmVuPzogUmVhY3ROb2RlO1xuICBpZD86IHN0cmluZztcbiAgeD86IE51bWJlclByb3A7XG4gIHk/OiBOdW1iZXJQcm9wO1xuICB3aWR0aD86IE51bWJlclByb3A7XG4gIGhlaWdodD86IE51bWJlclByb3A7XG4gIHBhdHRlcm5UcmFuc2Zvcm0/OiBDb2x1bW5NYWpvclRyYW5zZm9ybU1hdHJpeCB8IHN0cmluZztcbiAgcGF0dGVyblVuaXRzPzogVW5pdHM7XG4gIHBhdHRlcm5Db250ZW50VW5pdHM/OiBVbml0cztcbiAgdmlld0JveD86IHN0cmluZztcbiAgcHJlc2VydmVBc3BlY3RSYXRpbz86IHN0cmluZztcbiAgdHJhbnNmb3JtPzogQ29sdW1uTWFqb3JUcmFuc2Zvcm1NYXRyaXggfCBzdHJpbmcgfCBUcmFuc2Zvcm1Qcm9wcztcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGF0dGVybiBleHRlbmRzIFNoYXBlPFBhdHRlcm5Qcm9wcz4ge1xuICBzdGF0aWMgZGlzcGxheU5hbWUgPSAnUGF0dGVybic7XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICB4OiAnMCUnLFxuICAgIHk6ICcwJScsXG4gICAgd2lkdGg6ICcxMDAlJyxcbiAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBwcm9wcyB9ID0gdGhpcztcbiAgICBjb25zdCB7XG4gICAgICBwYXR0ZXJuVHJhbnNmb3JtLFxuICAgICAgdHJhbnNmb3JtLFxuICAgICAgaWQsXG4gICAgICB4LFxuICAgICAgeSxcbiAgICAgIHdpZHRoLFxuICAgICAgaGVpZ2h0LFxuICAgICAgcGF0dGVyblVuaXRzLFxuICAgICAgcGF0dGVybkNvbnRlbnRVbml0cyxcbiAgICAgIGNoaWxkcmVuLFxuICAgICAgdmlld0JveCxcbiAgICAgIHByZXNlcnZlQXNwZWN0UmF0aW8sXG4gICAgfSA9IHByb3BzO1xuICAgIGNvbnN0IG1hdHJpeCA9IGV4dHJhY3RUcmFuc2Zvcm0ocGF0dGVyblRyYW5zZm9ybSB8fCB0cmFuc2Zvcm0gfHwgcHJvcHMpO1xuICAgIGNvbnN0IHBhdHRlcm5Qcm9wcyA9IHtcbiAgICAgIG5hbWU6IGlkLFxuICAgICAgeCxcbiAgICAgIHksXG4gICAgICB3aWR0aCxcbiAgICAgIGhlaWdodCxcbiAgICAgIG1hdHJpeCxcbiAgICAgIHBhdHRlcm5UcmFuc2Zvcm06IG1hdHJpeCxcbiAgICAgIHBhdHRlcm5Vbml0czogKHBhdHRlcm5Vbml0cyAmJiB1bml0c1twYXR0ZXJuVW5pdHNdKSB8fCAwLFxuICAgICAgcGF0dGVybkNvbnRlbnRVbml0czogcGF0dGVybkNvbnRlbnRVbml0cyA/IHVuaXRzW3BhdHRlcm5Db250ZW50VW5pdHNdIDogMSxcbiAgICB9O1xuICAgIHJldHVybiAoXG4gICAgICA8Uk5TVkdQYXR0ZXJuXG4gICAgICAgIHJlZj17dGhpcy5yZWZNZXRob2R9XG4gICAgICAgIHsuLi5wYXR0ZXJuUHJvcHN9XG4gICAgICAgIHsuLi5leHRyYWN0Vmlld0JveCh7IHZpZXdCb3gsIHByZXNlcnZlQXNwZWN0UmF0aW8gfSl9XG4gICAgICA+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvUk5TVkdQYXR0ZXJuPlxuICAgICk7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxpQkFBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUUsZUFBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBT0EsSUFBQUcsTUFBQSxHQUFBSixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUksT0FBQSxHQUFBTCxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUssaUJBQUEsR0FBQUwsT0FBQTtBQUFrRCxJQUFBTSxZQUFBO0FBQUEsU0FBQUMsYUFBQUMsT0FBQTtFQUFBLElBQUFDLHlCQUFBLEdBQUFDLHlCQUFBO0VBQUEsZ0JBQUFDLHFCQUFBO0lBQUEsSUFBQUMsS0FBQSxPQUFBQyxnQkFBQSxDQUFBQyxPQUFBLEVBQUFOLE9BQUE7TUFBQU8sTUFBQTtJQUFBLElBQUFOLHlCQUFBO01BQUEsSUFBQU8sU0FBQSxPQUFBSCxnQkFBQSxDQUFBQyxPQUFBLFFBQUFHLFdBQUE7TUFBQUYsTUFBQSxHQUFBRyxPQUFBLENBQUFDLFNBQUEsQ0FBQVAsS0FBQSxFQUFBUSxTQUFBLEVBQUFKLFNBQUE7SUFBQTtNQUFBRCxNQUFBLEdBQUFILEtBQUEsQ0FBQVMsS0FBQSxPQUFBRCxTQUFBO0lBQUE7SUFBQSxXQUFBRSwyQkFBQSxDQUFBUixPQUFBLFFBQUFDLE1BQUE7RUFBQTtBQUFBO0FBQUEsU0FBQUwsMEJBQUE7RUFBQSxXQUFBUSxPQUFBLHFCQUFBQSxPQUFBLENBQUFDLFNBQUE7RUFBQSxJQUFBRCxPQUFBLENBQUFDLFNBQUEsQ0FBQUksSUFBQTtFQUFBLFdBQUFDLEtBQUE7RUFBQTtJQUFBQyxPQUFBLENBQUFDLFNB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