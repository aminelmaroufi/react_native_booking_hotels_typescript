278104f3f5be104d559660e401163149
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HotelItem = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _FontAwesome = _interopRequireDefault(require("react-native-vector-icons/FontAwesome"));
var _reactNativeElements = require("react-native-elements");
var _config = require("../../config/config");
function cov_11txhdnznx() {
  var path = "/Users/Amine/Desktop/projects/BookingHotelsApp/src/components/home/HotelItem.tsx";
  var hash = "1a99db4f50df7af0d10e8685780b68e3e21e9b2f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/Amine/Desktop/projects/BookingHotelsApp/src/components/home/HotelItem.tsx",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 50,
          column: 1
        }
      },
      "1": {
        start: {
          line: 14,
          column: 23
        },
        end: {
          line: 14,
          column: 33
        }
      },
      "2": {
        start: {
          line: 16,
          column: 2
        },
        end: {
          line: 49,
          column: 4
        }
      },
      "3": {
        start: {
          line: 19,
          column: 21
        },
        end: {
          line: 19,
          column: 46
        }
      },
      "4": {
        start: {
          line: 52,
          column: 15
        },
        end: {
          line: 99,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 13,
            column: 26
          }
        },
        loc: {
          start: {
            line: 13,
            column: 43
          },
          end: {
            line: 50,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 16
          }
        },
        loc: {
          start: {
            line: 19,
            column: 21
          },
          end: {
            line: 19,
            column: 46
          }
        },
        line: 19
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1a99db4f50df7af0d10e8685780b68e3e21e9b2f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_11txhdnznx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_11txhdnznx();
cov_11txhdnznx().s[0]++;
var HotelItem = function HotelItem(props) {
  cov_11txhdnznx().f[0]++;
  var item = (cov_11txhdnznx().s[1]++, props.item);
  cov_11txhdnznx().s[2]++;
  return _react.default.createElement(_reactNative.TouchableOpacity, {
    style: styles.hotelRow,
    onPress: function onPress() {
      cov_11txhdnznx().f[1]++;
      cov_11txhdnznx().s[3]++;
      return props.onSelectHotel(item);
    }
  }, _react.default.createElement(_reactNative.Image, {
    source: {
      uri: _config.baseURL + "/files/" + item.main_picture + "/view"
    },
    style: styles.imageStyle
  }), _react.default.createElement(_reactNative.View, {
    style: styles.info
  }, _react.default.createElement(_reactNative.View, {
    style: styles.row
  }, _react.default.createElement(_reactNative.Text, {
    style: styles.title
  }, item.name), _react.default.createElement(_reactNativeElements.Rating, {
    imageSize: 13,
    readonly: true,
    startingValue: item.rating,
    style: styles.iconAdressStyle
  })), _react.default.createElement(_reactNative.View, {
    style: styles.row
  }, _react.default.createElement(_FontAwesome.default, {
    name: "map-marker",
    size: 12,
    color: "#000",
    style: styles.iconAdressStyle
  }), _react.default.createElement(_reactNative.Text, {
    style: styles.adress
  }, item.short_address)), _react.default.createElement(_reactNative.View, {
    style: styles.typeStyle
  }, _react.default.createElement(_reactNative.Text, {
    style: styles.room
  }, item.type), _react.default.createElement(_reactNative.Text, {
    style: styles.price
  }, "\u20AC", item.rooms[0].price))));
};
exports.HotelItem = HotelItem;
var styles = (cov_11txhdnznx().s[4]++, _reactNative.StyleSheet.create({
  hotelRow: {
    flexDirection: 'row',
    padding: 10,
    paddingBottom: 15,
    borderBottomWidth: 3,
    borderBottomColor: '#f4ab49'
  },
  row: {
    flexDirection: 'row',
    padding: 10
  },
  info: {
    flex: 1,
    padding: 10
  },
  title: {
    fontSize: 16,
    color: '#000',
    fontWeight: 'bold',
    marginRight: 7
  },
  adress: {
    fontSize: 14,
    color: '#000'
  },
  room: {
    fontSize: 12,
    color: '#000'
  },
  price: {
    fontSize: 17,
    fontWeight: 'bold',
    color: '#000',
    marginTop: 5
  },
  typeStyle: {
    alignItems: 'flex-end',
    position: 'absolute',
    bottom: 5,
    right: 10
  },
  imageStyle: {
    height: 190,
    width: 130
  },
  iconAdressStyle: {
    marginRight: 5,
    marginTop: 2
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,