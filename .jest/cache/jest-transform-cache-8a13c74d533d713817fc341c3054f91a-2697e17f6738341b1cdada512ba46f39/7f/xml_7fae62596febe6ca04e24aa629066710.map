{"version":3,"names":["_react","_interopRequireWildcard","require","_Rect","_interopRequireDefault","_Circle","_Ellipse","_Polygon","_Polyline","_Line","_Svg","_Path","_G","_Text","_TSpan","_TextPath","_Use","_Image","_Symbol","_Defs","_LinearGradient","_RadialGradient","_Stop","_ClipPath","_Pattern","_Mask","_Marker","tags","svg","default","circle","ellipse","g","text","tspan","textPath","path","polygon","polyline","line","rect","use","image","symbol","defs","linearGradient","radialGradient","stop","clipPath","pattern","mask","marker","missingTag","SvgAst","_ref","ast","override","props","children","createElement","_extends2","__source","fileName","_jsxFileName","lineNumber","err","console","error","bind","SvgXml","_props$onError","onError","xml","useMemo","_parse","fetchText","uri","response","_regenerator","async","fetchText$","_context","prev","next","awrap","fetch","sent","abrupt","Promise","SvgUri","_props$onError2","_useState","useState","_useState2","_slicedToArray2","setXml","useEffect","then","catch","SvgFromXml","parse","prevProps","setState","e","state","Component","SvgFromUri","_context2","t4","upperCase","_match","letter","toUpperCase","camelCase","phrase","replace","getStyle","string","style","declarations","split","length","i","declaration","_property","value","trim","astToReact","index","Tag","key","map","repeat","str","result","toSpaces","tabs","locate","source","lines","nLines","column","before","slice","beforeExec","exec","beforeLine","after","afterExec","afterLine","pad","snippet","concat","validNameCharacters","whitespace","quotemarks","middleware","currentElement","metadata","root","stack","message","_locate","Error","test","neutral","char","push","openingTag","start","comment","end","cdata","closingTag","tag","getName","element","parent","getAttributes","styles","selfClosing","indexOf","pop","_currentElement","name","allowSpaces","getAttributeValue","isNaN","getQuotedAttributeValue","getUnquotedAttributeValue","quotemark","escaped","_ast","jsx"],"sources":["xml.tsx"],"sourcesContent":["import React, {\n  Component,\n  ComponentType,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport Rect from './elements/Rect';\nimport Circle from './elements/Circle';\nimport Ellipse from './elements/Ellipse';\nimport Polygon from './elements/Polygon';\nimport Polyline from './elements/Polyline';\nimport Line from './elements/Line';\nimport Svg from './elements/Svg';\nimport Path from './elements/Path';\nimport G from './elements/G';\nimport Text from './elements/Text';\nimport TSpan from './elements/TSpan';\nimport TextPath from './elements/TextPath';\nimport Use from './elements/Use';\nimport Image from './elements/Image';\nimport Symbol from './elements/Symbol';\nimport Defs from './elements/Defs';\nimport LinearGradient from './elements/LinearGradient';\nimport RadialGradient from './elements/RadialGradient';\nimport Stop from './elements/Stop';\nimport ClipPath from './elements/ClipPath';\nimport Pattern from './elements/Pattern';\nimport Mask from './elements/Mask';\nimport Marker from './elements/Marker';\n\nexport const tags: { [tag: string]: ComponentType } = {\n  svg: Svg,\n  circle: Circle,\n  ellipse: Ellipse,\n  g: G,\n  text: Text,\n  tspan: TSpan,\n  textPath: TextPath,\n  path: Path,\n  polygon: Polygon,\n  polyline: Polyline,\n  line: Line,\n  rect: Rect,\n  use: Use,\n  image: Image,\n  symbol: Symbol,\n  defs: Defs,\n  linearGradient: LinearGradient,\n  radialGradient: RadialGradient,\n  stop: Stop,\n  clipPath: ClipPath,\n  pattern: Pattern,\n  mask: Mask,\n  marker: Marker,\n};\n\nfunction missingTag() {\n  return null;\n}\n\nexport interface AST {\n  tag: string;\n  style?: Styles;\n  styles?: string;\n  priority?: Map<string, boolean | undefined>;\n  parent: AST | null;\n  children: (AST | string)[] | (JSX.Element | string)[];\n  props: {\n    [prop: string]: Styles | string | undefined;\n  };\n  Tag: ComponentType;\n}\n\nexport interface XmlAST extends AST {\n  children: (XmlAST | string)[];\n  parent: XmlAST | null;\n}\n\nexport interface JsxAST extends AST {\n  children: (JSX.Element | string)[];\n}\n\nexport type AdditionalProps = {\n  onError?: (error: Error) => void;\n  override?: Object;\n};\n\nexport type UriProps = { uri: string | null } & AdditionalProps;\nexport type UriState = { xml: string | null };\n\nexport type XmlProps = { xml: string | null } & AdditionalProps;\nexport type XmlState = { ast: JsxAST | null };\n\nexport type AstProps = { ast: JsxAST | null } & AdditionalProps;\n\nexport function SvgAst({ ast, override }: AstProps) {\n  if (!ast) {\n    return null;\n  }\n  const { props, children } = ast;\n  return (\n    <Svg {...props} {...override}>\n      {children}\n    </Svg>\n  );\n}\n\nexport const err = console.error.bind(console);\n\nexport function SvgXml(props: XmlProps) {\n  const { onError = err, xml, override } = props;\n  const ast = useMemo<JsxAST | null>(() => (xml !== null ? parse(xml) : null), [\n    xml,\n  ]);\n\n  try {\n    return <SvgAst ast={ast} override={override || props} />;\n  } catch (error) {\n    onError(error);\n    return null;\n  }\n}\n\nexport async function fetchText(uri: string) {\n  const response = await fetch(uri);\n  return await response.text();\n}\n\nexport function SvgUri(props: UriProps) {\n  const { onError = err, uri } = props;\n  const [xml, setXml] = useState<string | null>(null);\n  useEffect(() => {\n    uri\n      ? fetchText(uri)\n          .then(setXml)\n          .catch(onError)\n      : setXml(null);\n  }, [onError, uri]);\n  return <SvgXml xml={xml} override={props} />;\n}\n\n// Extending Component is required for Animated support.\n\nexport class SvgFromXml extends Component<XmlProps, XmlState> {\n  state = { ast: null };\n  componentDidMount() {\n    this.parse(this.props.xml);\n  }\n  componentDidUpdate(prevProps: { xml: string | null }) {\n    const { xml } = this.props;\n    if (xml !== prevProps.xml) {\n      this.parse(xml);\n    }\n  }\n  parse(xml: string | null) {\n    try {\n      this.setState({ ast: xml ? parse(xml) : null });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  render() {\n    const {\n      props,\n      state: { ast },\n    } = this;\n    return <SvgAst ast={ast} override={props.override || props} />;\n  }\n}\n\nexport class SvgFromUri extends Component<UriProps, UriState> {\n  state = { xml: null };\n  componentDidMount() {\n    this.fetch(this.props.uri);\n  }\n  componentDidUpdate(prevProps: { uri: string | null }) {\n    const { uri } = this.props;\n    if (uri !== prevProps.uri) {\n      this.fetch(uri);\n    }\n  }\n  async fetch(uri: string | null) {\n    try {\n      this.setState({ xml: uri ? await fetchText(uri) : null });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  render() {\n    const {\n      props,\n      state: { xml },\n    } = this;\n    return <SvgFromXml xml={xml} override={props} />;\n  }\n}\n\nconst upperCase = (_match: string, letter: string) => letter.toUpperCase();\n\nexport const camelCase = (phrase: string) =>\n  phrase.replace(/[:-]([a-z])/g, upperCase);\n\nexport type Styles = { [property: string]: string };\n\nexport function getStyle(string: string): Styles {\n  const style: Styles = {};\n  const declarations = string.split(';');\n  const { length } = declarations;\n  for (let i = 0; i < length; i++) {\n    const declaration = declarations[i];\n    if (declaration.length !== 0) {\n      const split = declaration.split(':');\n      const property = split[0];\n      const value = split[1];\n      style[camelCase(property.trim())] = value.trim();\n    }\n  }\n  return style;\n}\n\nexport function astToReact(\n  value: AST | string,\n  index: number,\n): JSX.Element | string {\n  if (typeof value === 'object') {\n    const { Tag, props, children } = value;\n    return (\n      <Tag key={index} {...props}>\n        {(children as (AST | string)[]).map(astToReact)}\n      </Tag>\n    );\n  }\n  return value;\n}\n\n// slimmed down parser based on https://github.com/Rich-Harris/svg-parser\n\nfunction repeat(str: string, i: number) {\n  let result = '';\n  while (i--) {\n    result += str;\n  }\n  return result;\n}\n\nconst toSpaces = (tabs: string) => repeat('  ', tabs.length);\n\nfunction locate(source: string, i: number) {\n  const lines = source.split('\\n');\n  const nLines = lines.length;\n  let column = i;\n  let line = 0;\n  for (; line < nLines; line++) {\n    const { length } = lines[line];\n    if (column >= length) {\n      column -= length;\n    } else {\n      break;\n    }\n  }\n  const before = source.slice(0, i).replace(/^\\t+/, toSpaces);\n  const beforeExec = /(^|\\n).*$/.exec(before);\n  const beforeLine = (beforeExec && beforeExec[0]) || '';\n  const after = source.slice(i);\n  const afterExec = /.*(\\n|$)/.exec(after);\n  const afterLine = afterExec && afterExec[0];\n  const pad = repeat(' ', beforeLine.length);\n  const snippet = `${beforeLine}${afterLine}\\n${pad}^`;\n  return { line, column, snippet };\n}\n\nconst validNameCharacters = /[a-zA-Z0-9:_-]/;\nconst whitespace = /[\\s\\t\\r\\n]/;\nconst quotemarks = /['\"]/;\n\nexport type Middleware = (ast: XmlAST) => XmlAST;\n\nexport function parse(source: string, middleware?: Middleware): JsxAST | null {\n  const length = source.length;\n  let currentElement: XmlAST | null = null;\n  let state = metadata;\n  let children = null;\n  let root: XmlAST | undefined;\n  let stack: XmlAST[] = [];\n\n  function error(message: string) {\n    const { line, column, snippet } = locate(source, i);\n    throw new Error(\n      `${message} (${line}:${column}). If this is valid SVG, it's probably a bug. Please raise an issue\\n\\n${snippet}`,\n    );\n  }\n\n  function metadata() {\n    while (\n      i + 1 < length &&\n      (source[i] !== '<' || !validNameCharacters.test(source[i + 1]))\n    ) {\n      i++;\n    }\n\n    return neutral();\n  }\n\n  function neutral() {\n    let text = '';\n    let char;\n    while (i < length && (char = source[i]) !== '<') {\n      text += char;\n      i += 1;\n    }\n\n    if (/\\S/.test(text)) {\n      children.push(text);\n    }\n\n    if (source[i] === '<') {\n      return openingTag;\n    }\n\n    return neutral;\n  }\n\n  function openingTag() {\n    const char = source[i];\n\n    if (char === '?') {\n      return neutral;\n    } // <?xml...\n\n    if (char === '!') {\n      const start = i + 1;\n      if (source.slice(start, i + 3) === '--') {\n        return comment;\n      }\n      const end = i + 8;\n      if (source.slice(start, end) === '[CDATA[') {\n        return cdata;\n      }\n      if (/doctype/i.test(source.slice(start, end))) {\n        return neutral;\n      }\n    }\n\n    if (char === '/') {\n      return closingTag;\n    }\n\n    const tag = getName();\n    const props: { [prop: string]: Styles | string | undefined } = {};\n    const element: XmlAST = {\n      tag,\n      props,\n      children: [],\n      parent: currentElement,\n      Tag: tags[tag] || missingTag,\n    };\n\n    if (currentElement) {\n      children.push(element);\n    } else {\n      root = element;\n    }\n\n    getAttributes(props);\n\n    const { style } = props;\n    if (typeof style === 'string') {\n      element.styles = style;\n      props.style = getStyle(style);\n    }\n\n    let selfClosing = false;\n\n    if (source[i] === '/') {\n      i += 1;\n      selfClosing = true;\n    }\n\n    if (source[i] !== '>') {\n      error('Expected >');\n    }\n\n    if (!selfClosing) {\n      currentElement = element;\n      ({ children } = element);\n      stack.push(element);\n    }\n\n    return neutral;\n  }\n\n  function comment() {\n    const index = source.indexOf('-->', i);\n    if (!~index) {\n      error('expected -->');\n    }\n\n    i = index + 2;\n    return neutral;\n  }\n\n  function cdata() {\n    const index = source.indexOf(']]>', i);\n    if (!~index) {\n      error('expected ]]>');\n    }\n\n    children.push(source.slice(i + 7, index));\n\n    i = index + 2;\n    return neutral;\n  }\n\n  function closingTag() {\n    const tag = getName();\n\n    if (!tag) {\n      error('Expected tag name');\n    }\n\n    if (currentElement && tag !== currentElement.tag) {\n      error(\n        `Expected closing tag </${tag}> to match opening tag <${currentElement.tag}>`,\n      );\n    }\n\n    if (source[i] !== '>') {\n      error('Expected >');\n    }\n\n    stack.pop();\n    currentElement = stack[stack.length - 1];\n    if (currentElement) {\n      ({ children } = currentElement);\n    }\n\n    return neutral;\n  }\n\n  function getName() {\n    let name = '';\n    let char;\n    while (i < length && validNameCharacters.test((char = source[i]))) {\n      name += char;\n      i += 1;\n    }\n\n    return name;\n  }\n\n  function getAttributes(props: {\n    [x: string]: Styles | string | number | boolean | undefined;\n    style?: string | Styles | undefined;\n  }) {\n    while (i < length) {\n      if (!whitespace.test(source[i])) {\n        return;\n      }\n      allowSpaces();\n\n      const name = getName();\n      if (!name) {\n        return;\n      }\n\n      let value: boolean | number | string = true;\n\n      allowSpaces();\n      if (source[i] === '=') {\n        i += 1;\n        allowSpaces();\n\n        value = getAttributeValue();\n        if (!isNaN(+value) && value.trim() !== '') {\n          value = +value;\n        }\n      }\n\n      props[camelCase(name)] = value;\n    }\n  }\n\n  function getAttributeValue(): string {\n    return quotemarks.test(source[i])\n      ? getQuotedAttributeValue()\n      : getUnquotedAttributeValue();\n  }\n\n  function getUnquotedAttributeValue() {\n    let value = '';\n    do {\n      const char = source[i];\n      if (char === ' ' || char === '>' || char === '/') {\n        return value;\n      }\n\n      value += char;\n      i += 1;\n    } while (i < length);\n\n    return value;\n  }\n\n  function getQuotedAttributeValue() {\n    const quotemark = source[i++];\n\n    let value = '';\n    let escaped = false;\n\n    while (i < length) {\n      const char = source[i++];\n      if (char === quotemark && !escaped) {\n        return value;\n      }\n\n      if (char === '\\\\' && !escaped) {\n        escaped = true;\n      }\n\n      value += escaped ? `\\\\${char}` : char;\n      escaped = false;\n    }\n\n    return value;\n  }\n\n  function allowSpaces() {\n    while (i < length && whitespace.test(source[i])) {\n      i += 1;\n    }\n  }\n\n  let i = 0;\n  while (i < length) {\n    if (!state) {\n      error('Unexpected character');\n    }\n    state = state();\n    i += 1;\n  }\n\n  if (state !== neutral) {\n    error('Unexpected end of input');\n  }\n\n  if (root) {\n    const xml: XmlAST = (middleware ? middleware(root) : root) || root;\n    const ast: (JSX.Element | string)[] = xml.children.map(astToReact);\n    const jsx: JsxAST = xml as JsxAST;\n    jsx.children = ast;\n    return jsx;\n  }\n\n  return null;\n}\n"],"mappings":"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"}