150c91be9bcf3110b675b5688a4199c6
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _config = require("../config");
var _Text = _interopRequireDefault(require("../text/Text"));
var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
var ANDROID_SECONDARY = 'rgba(0, 0, 0, 0.54)';
var ListItemTitle = function ListItemTitle(_a) {
  var style = _a.style,
    right = _a.right,
    children = _a.children,
    props = __rest(_a, ["style", "right", "children"]);
  return _react.default.createElement(_Text.default, (0, _extends2.default)({
    testID: "listItemTitle",
    style: _reactNative.StyleSheet.flatten([styles.title, right && styles.rightTitle, style])
  }, props), children);
};
var styles = _reactNative.StyleSheet.create({
  title: (0, _extends2.default)({
    backgroundColor: 'transparent'
  }, _reactNative.Platform.select({
    ios: {
      fontSize: 17
    },
    default: {
      fontSize: 16
    }
  })),
  rightTitle: {
    color: ANDROID_SECONDARY
  }
});
var _default = (0, _config.withTheme)(ListItemTitle, 'ListItemTitle');
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9jb25maWciLCJfVGV4dCIsIl9fcmVzdCIsInMiLCJlIiwidCIsInAiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpbmRleE9mIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiaSIsImxlbmd0aCIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiQU5EUk9JRF9TRUNPTkRBUlkiLCJMaXN0SXRlbVRpdGxlIiwiX2EiLCJzdHlsZSIsInJpZ2h0IiwiY2hpbGRyZW4iLCJwcm9wcyIsImRlZmF1bHQiLCJjcmVhdGVFbGVtZW50IiwiX2V4dGVuZHMyIiwidGVzdElEIiwiU3R5bGVTaGVldCIsImZsYXR0ZW4iLCJzdHlsZXMiLCJ0aXRsZSIsInJpZ2h0VGl0bGUiLCJjcmVhdGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJQbGF0Zm9ybSIsInNlbGVjdCIsImlvcyIsImZvbnRTaXplIiwiY29sb3IiLCJfZGVmYXVsdCIsIndpdGhUaGVtZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJMaXN0SXRlbVRpdGxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX3Jlc3QgPSAodGhpcyAmJiB0aGlzLl9fcmVzdCkgfHwgZnVuY3Rpb24gKHMsIGUpIHtcbiAgICB2YXIgdCA9IHt9O1xuICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSAmJiBlLmluZGV4T2YocCkgPCAwKVxuICAgICAgICB0W3BdID0gc1twXTtcbiAgICBpZiAocyAhPSBudWxsICYmIHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBwID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzKTsgaSA8IHAubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChlLmluZGV4T2YocFtpXSkgPCAwICYmIE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzLCBwW2ldKSlcbiAgICAgICAgICAgICAgICB0W3BbaV1dID0gc1twW2ldXTtcbiAgICAgICAgfVxuICAgIHJldHVybiB0O1xufTtcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBQbGF0Zm9ybSB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgeyB3aXRoVGhlbWUgfSBmcm9tICcuLi9jb25maWcnO1xuaW1wb3J0IFRleHQgZnJvbSAnLi4vdGV4dC9UZXh0JztcbmNvbnN0IEFORFJPSURfU0VDT05EQVJZID0gJ3JnYmEoMCwgMCwgMCwgMC41NCknO1xuY29uc3QgTGlzdEl0ZW1UaXRsZSA9IChfYSkgPT4ge1xuICAgIHZhciB7IHN0eWxlLCByaWdodCwgY2hpbGRyZW4gfSA9IF9hLCBwcm9wcyA9IF9fcmVzdChfYSwgW1wic3R5bGVcIiwgXCJyaWdodFwiLCBcImNoaWxkcmVuXCJdKTtcbiAgICByZXR1cm4gKDxUZXh0IHRlc3RJRD1cImxpc3RJdGVtVGl0bGVcIiBzdHlsZT17U3R5bGVTaGVldC5mbGF0dGVuKFtcbiAgICAgICAgc3R5bGVzLnRpdGxlLFxuICAgICAgICByaWdodCAmJiBzdHlsZXMucmlnaHRUaXRsZSxcbiAgICAgICAgc3R5bGUsXG4gICAgXSl9IHsuLi5wcm9wc30+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9UZXh0Pik7XG59O1xuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICAgIHRpdGxlOiBPYmplY3QuYXNzaWduKHsgYmFja2dyb3VuZENvbG9yOiAndHJhbnNwYXJlbnQnIH0sIFBsYXRmb3JtLnNlbGVjdCh7XG4gICAgICAgIGlvczoge1xuICAgICAgICAgICAgZm9udFNpemU6IDE3LFxuICAgICAgICB9LFxuICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgICBmb250U2l6ZTogMTYsXG4gICAgICAgIH0sXG4gICAgfSkpLFxuICAgIHJpZ2h0VGl0bGU6IHtcbiAgICAgICAgY29sb3I6IEFORFJPSURfU0VDT05EQVJZLFxuICAgIH0sXG59KTtcbmV4cG9ydCBkZWZhdWx0IHdpdGhUaGVtZShMaXN0SXRlbVRpdGxlLCAnTGlzdEl0ZW1UaXRsZScpO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQVdBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFlBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLE9BQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLEtBQUEsR0FBQUosc0JBQUEsQ0FBQUMsT0FBQTtBQWRBLElBQUlJLE1BQU0sR0FBSSxVQUFRLFNBQUtBLE1BQU0sSUFBSyxVQUFVQyxDQUFDLEVBQUVDLENBQUMsRUFBRTtFQUNsRCxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0VBQ1YsS0FBSyxJQUFJQyxDQUFDLElBQUlILENBQUMsRUFBRSxJQUFJSSxNQUFNLENBQUNDLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNQLENBQUMsRUFBRUcsQ0FBQyxDQUFDLElBQUlGLENBQUMsQ0FBQ08sT0FBTyxDQUFDTCxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQy9FRCxDQUFDLENBQUNDLENBQUMsQ0FBQyxHQUFHSCxDQUFDLENBQUNHLENBQUMsQ0FBQztFQUNmLElBQUlILENBQUMsSUFBSSxJQUFJLElBQUksT0FBT0ksTUFBTSxDQUFDSyxxQkFBcUIsS0FBSyxVQUFVLEVBQy9ELEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQUMsRUFBRVAsQ0FBQyxHQUFHQyxNQUFNLENBQUNLLHFCQUFxQixDQUFDVCxDQUFDLENBQUMsRUFBRVUsQ0FBQyxHQUFHUCxDQUFDLENBQUNRLE1BQU0sRUFBRUQsQ0FBQyxFQUFFLEVBQUU7SUFDcEUsSUFBSVQsQ0FBQyxDQUFDTyxPQUFPLENBQUNMLENBQUMsQ0FBQ08sQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUlOLE1BQU0sQ0FBQ0MsU0FBUyxDQUFDTyxvQkFBb0IsQ0FBQ0wsSUFBSSxDQUFDUCxDQUFDLEVBQUVHLENBQUMsQ0FBQ08sQ0FBQyxDQUFDLENBQUMsRUFDMUVSLENBQUMsQ0FBQ0MsQ0FBQyxDQUFDTyxDQUFDLENBQUMsQ0FBQyxHQUFHVixDQUFDLENBQUNHLENBQUMsQ0FBQ08sQ0FBQyxDQUFDLENBQUM7RUFDekI7RUFDSixPQUFPUixDQUFDO0FBQ1osQ0FBQztBQUtELElBQU1XLGlCQUFpQixHQUFHLHFCQUFxQjtBQUMvQyxJQUFNQyxhQUFhLEdBQUcsU0FBaEJBLGFBQWFBLENBQUlDLEVBQUUsRUFBSztFQUMxQixJQUFNQyxLQUFLLEdBQXNCRCxFQUFFLENBQTdCQyxLQUFLO0lBQUVDLEtBQUssR0FBZUYsRUFBRSxDQUF0QkUsS0FBSztJQUFFQyxRQUFRLEdBQUtILEVBQUUsQ0FBZkcsUUFBUTtJQUFTQyxLQUFLLEdBQUdwQixNQUFNLENBQUNnQixFQUFFLEVBQUUsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0VBQ3ZGLE9BQVF0QixNQUFBLENBQUEyQixPQUFBLENBQUFDLGFBQUEsQ0FBQ3ZCLEtBQUEsQ0FBQXNCLE9BQUksTUFBQUUsU0FBQSxDQUFBRixPQUFBO0lBQUNHLE1BQU0sRUFBQyxlQUFlO0lBQUNQLEtBQUssRUFBRVEsdUJBQVUsQ0FBQ0MsT0FBTyxDQUFDLENBQzNEQyxNQUFNLENBQUNDLEtBQUssRUFDWlYsS0FBSyxJQUFJUyxNQUFNLENBQUNFLFVBQVUsRUFDMUJaLEtBQUssQ0FDUjtFQUFFLEdBQUtHLEtBQUssR0FDVkQsUUFBUSxDQUNKO0FBQ1gsQ0FBQztBQUNELElBQU1RLE1BQU0sR0FBR0YsdUJBQVUsQ0FBQ0ssTUFBTSxDQUFDO0VBQzdCRixLQUFLLEVBQUUsSUFBQUwsU0FBQSxDQUFBRixPQUFBLEVBQWM7SUFBRVUsZUFBZSxFQUFFO0VBQWMsQ0FBQyxFQUFFQyxxQkFBUSxDQUFDQyxNQUFNLENBQUM7SUFDckVDLEdBQUcsRUFBRTtNQUNEQyxRQUFRLEVBQUU7SUFDZCxDQUFDO0lBQ0RkLE9BQU8sRUFBRTtNQUNMYyxRQUFRLEVBQUU7SUFDZDtFQUNKLENBQUMsQ0FBQyxDQUFDO0VBQ0hOLFVBQVUsRUFBRTtJQUNSTyxLQUFLLEVBQUV0QjtFQUNYO0FBQ0osQ0FBQyxDQUFDO0FBQUMsSUFBQXVCLFFBQUEsR0FDWSxJQUFBQyxpQkFBUyxFQUFDdkIsYUFBYSxFQUFFLGVBQWUsQ0FBQztBQUFBd0IsT0FBQSxDQUFBbEIsT0FBQSxHQUFBZ0IsUUFBQSJ9