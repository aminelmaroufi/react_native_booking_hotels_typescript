29395980258108ded7d6d5f66c279f2d
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _extractProps = require("../lib/extract/extractProps");
var _util = require("../lib/util");
var _Shape2 = _interopRequireDefault(require("./Shape"));
var _NativeComponents = require("./NativeComponents");
var _jsxFileName = "/Users/wojciechlewicki/work/another/react-native-svg/src/elements/Use.tsx";
function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = (0, _getPrototypeOf2.default)(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return (0, _possibleConstructorReturn2.default)(this, result);
  };
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
var Use = function (_Shape) {
  (0, _inherits2.default)(Use, _Shape);
  var _super = _createSuper(Use);
  function Use() {
    (0, _classCallCheck2.default)(this, Use);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(Use, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var children = props.children,
        x = props.x,
        y = props.y,
        width = props.width,
        height = props.height,
        xlinkHref = props.xlinkHref,
        _props$href = props.href,
        href = _props$href === void 0 ? xlinkHref : _props$href;
      var matched = href && href.match(_util.idPattern);
      var match = matched && matched[1];
      if (!match) {
        console.warn('Invalid `href` prop for `Use` element, expected a href like "#id", but got: "' + href + '"');
      }
      var useProps = {
        href: match,
        x: x,
        y: y,
        width: width,
        height: height
      };
      return _react.default.createElement(_NativeComponents.RNSVGUse, (0, _extends2.default)({
        ref: this.refMethod
      }, (0, _extractProps.withoutXY)(this, props), useProps, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 59,
          columnNumber: 7
        }
      }), children);
    }
  }]);
  return Use;
}(_Shape2.default);
exports.default = Use;
(0, _defineProperty2.default)(Use, "displayName", 'Use');
(0, _defineProperty2.default)(Use, "defaultProps", {
  x: 0,
  y: 0,
  width: 0,
  height: 0
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9leHRyYWN0UHJvcHMiLCJfdXRpbCIsIl9TaGFwZTIiLCJfTmF0aXZlQ29tcG9uZW50cyIsIl9qc3hGaWxlTmFtZSIsIl9jcmVhdGVTdXBlciIsIkRlcml2ZWQiLCJoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIl9jcmVhdGVTdXBlckludGVybmFsIiwiU3VwZXIiLCJfZ2V0UHJvdG90eXBlT2YyIiwiZGVmYXVsdCIsInJlc3VsdCIsIk5ld1RhcmdldCIsImNvbnN0cnVjdG9yIiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsImFyZ3VtZW50cyIsImFwcGx5IiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4yIiwic2hhbSIsIlByb3h5IiwiQm9vbGVhbiIsInByb3RvdHlwZSIsInZhbHVlT2YiLCJjYWxsIiwiZSIsIlVzZSIsIl9TaGFwZSIsIl9pbmhlcml0czIiLCJfc3VwZXIiLCJfY2xhc3NDYWxsQ2hlY2syIiwiX2NyZWF0ZUNsYXNzMiIsImtleSIsInZhbHVlIiwicmVuZGVyIiwicHJvcHMiLCJjaGlsZHJlbiIsIngiLCJ5Iiwid2lkdGgiLCJoZWlnaHQiLCJ4bGlua0hyZWYiLCJfcHJvcHMkaHJlZiIsImhyZWYiLCJtYXRjaGVkIiwibWF0Y2giLCJpZFBhdHRlcm4iLCJjb25zb2xlIiwid2FybiIsInVzZVByb3BzIiwiY3JlYXRlRWxlbWVudCIsIlJOU1ZHVXNlIiwiX2V4dGVuZHMyIiwicmVmIiwicmVmTWV0aG9kIiwid2l0aG91dFhZIiwiX19zZWxmIiwiX19zb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJjb2x1bW5OdW1iZXIiLCJleHBvcnRzIiwiX2RlZmluZVByb3BlcnR5MiJdLCJzb3VyY2VzIjpbIlVzZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFJlYWN0Tm9kZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHdpdGhvdXRYWSB9IGZyb20gJy4uL2xpYi9leHRyYWN0L2V4dHJhY3RQcm9wcyc7XG5pbXBvcnQgeyBDb21tb25QYXRoUHJvcHMsIE51bWJlclByb3AgfSBmcm9tICcuLi9saWIvZXh0cmFjdC90eXBlcyc7XG5pbXBvcnQgeyBpZFBhdHRlcm4gfSBmcm9tICcuLi9saWIvdXRpbCc7XG5pbXBvcnQgU2hhcGUgZnJvbSAnLi9TaGFwZSc7XG5pbXBvcnQgeyBSTlNWR1VzZSB9IGZyb20gJy4vTmF0aXZlQ29tcG9uZW50cyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVXNlUHJvcHMgZXh0ZW5kcyBDb21tb25QYXRoUHJvcHMge1xuICBjaGlsZHJlbj86IFJlYWN0Tm9kZTtcbiAgeGxpbmtIcmVmPzogc3RyaW5nO1xuICBocmVmPzogc3RyaW5nO1xuICB3aWR0aD86IE51bWJlclByb3A7XG4gIGhlaWdodD86IE51bWJlclByb3A7XG4gIHg/OiBOdW1iZXJQcm9wO1xuICB5PzogTnVtYmVyUHJvcDtcbiAgb3BhY2l0eT86IE51bWJlclByb3A7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZSBleHRlbmRzIFNoYXBlPFVzZVByb3BzPiB7XG4gIHN0YXRpYyBkaXNwbGF5TmFtZSA9ICdVc2UnO1xuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgeDogMCxcbiAgICB5OiAwLFxuICAgIHdpZHRoOiAwLFxuICAgIGhlaWdodDogMCxcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBwcm9wcyB9ID0gdGhpcztcbiAgICBjb25zdCB7XG4gICAgICBjaGlsZHJlbixcbiAgICAgIHgsXG4gICAgICB5LFxuICAgICAgd2lkdGgsXG4gICAgICBoZWlnaHQsXG4gICAgICB4bGlua0hyZWYsXG4gICAgICBocmVmID0geGxpbmtIcmVmLFxuICAgIH0gPSBwcm9wcztcblxuICAgIGNvbnN0IG1hdGNoZWQgPSBocmVmICYmIGhyZWYubWF0Y2goaWRQYXR0ZXJuKTtcbiAgICBjb25zdCBtYXRjaCA9IG1hdGNoZWQgJiYgbWF0Y2hlZFsxXTtcblxuICAgIGlmICghbWF0Y2gpIHtcbiAgICAgIGNvbnNvbGUud2FybihcbiAgICAgICAgJ0ludmFsaWQgYGhyZWZgIHByb3AgZm9yIGBVc2VgIGVsZW1lbnQsIGV4cGVjdGVkIGEgaHJlZiBsaWtlIFwiI2lkXCIsIGJ1dCBnb3Q6IFwiJyArXG4gICAgICAgICAgaHJlZiArXG4gICAgICAgICAgJ1wiJyxcbiAgICAgICk7XG4gICAgfVxuICAgIGNvbnN0IHVzZVByb3BzID0ge1xuICAgICAgaHJlZjogbWF0Y2gsXG4gICAgICB4LFxuICAgICAgeSxcbiAgICAgIHdpZHRoLFxuICAgICAgaGVpZ2h0LFxuICAgIH07XG4gICAgcmV0dXJuIChcbiAgICAgIDxSTlNWR1VzZSByZWY9e3RoaXMucmVmTWV0aG9kfSB7Li4ud2l0aG91dFhZKHRoaXMsIHByb3BzKX0gey4uLnVzZVByb3BzfT5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9STlNWR1VzZT5cbiAgICApO1xuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsYUFBQSxHQUFBRCxPQUFBO0FBRUEsSUFBQUUsS0FBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsT0FBQSxHQUFBSixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUksaUJBQUEsR0FBQUosT0FBQTtBQUE4QyxJQUFBSyxZQUFBO0FBQUEsU0FBQUMsYUFBQUMsT0FBQTtFQUFBLElBQUFDLHlCQUFBLEdBQUFDLHlCQUFBO0VBQUEsZ0JBQUFDLHFCQUFBO0lBQUEsSUFBQUMsS0FBQSxPQUFBQyxnQkFBQSxDQUFBQyxPQUFBLEVBQUFOLE9BQUE7TUFBQU8sTUFBQTtJQUFBLElBQUFOLHlCQUFBO01BQUEsSUFBQU8sU0FBQSxPQUFBSCxnQkFBQSxDQUFBQyxPQUFBLFFBQUFHLFdBQUE7TUFBQUYsTUFBQSxH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