{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_xml","_css","_jsxFileName","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","valueOf","e","_ref","NativeModules","RNSVGRenderableManager","getRawResource","getUriFromSource","source","resolvedAssetSource","Image","resolveAssetSource","uri","loadLocalRawResourceDefault","fetchText","isUriAnAndroidResourceIdentifier","indexOf","loadAndroidRawResource","_x","_loadAndroidRawResource","_asyncToGenerator2","_regenerator","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","sent","t0","console","error","stop","loadLocalRawResourceAndroid","loadLocalRawResource","Platform","OS","exports","LocalSvg","props","asset","rest","_objectWithoutProperties2","_useState","useState","_useState2","_slicedToArray2","xml","setXml","useEffect","then","createElement","SvgCss","_extends2","__self","__source","fileName","lineNumber","columnNumber","WithLocalSvg","_Component","_inherits2","_super","_this","_classCallCheck2","_len","length","args","Array","_key","concat","_defineProperty2","_assertThisInitialized2","_createClass2","value","componentDidMount","load","componentDidUpdate","prevProps","_load","_callee2","_callee2$","_context2","t1","t2","t3","setState","t4","_x2","render","state","SvgWithCss","override","Component","_default"],"sources":["LocalSvg.tsx"],"sourcesContent":["import React, { useState, useEffect, Component } from 'react';\nimport {\n  NativeModules,\n  Platform,\n  Image,\n  ImageSourcePropType,\n} from 'react-native';\n\nimport { fetchText } from './xml';\nimport { SvgCss, SvgWithCss } from './css';\nimport { SvgProps } from './elements/Svg';\n\nconst { getRawResource } = NativeModules.RNSVGRenderableManager || {};\n\nexport function getUriFromSource(source: ImageSourcePropType) {\n  const resolvedAssetSource = Image.resolveAssetSource(source);\n  return resolvedAssetSource.uri;\n}\n\nexport function loadLocalRawResourceDefault(source: ImageSourcePropType) {\n  const uri = getUriFromSource(source);\n  return fetchText(uri);\n}\n\nexport function isUriAnAndroidResourceIdentifier(uri?: string) {\n  return typeof uri === 'string' && uri.indexOf('/') <= -1;\n}\n\nexport async function loadAndroidRawResource(uri: string) {\n  try {\n    return await getRawResource(uri);\n  } catch (e) {\n    console.error(\n      'Error in RawResourceUtils while trying to natively load an Android raw resource: ',\n      e,\n    );\n    return null;\n  }\n}\n\nexport function loadLocalRawResourceAndroid(source: ImageSourcePropType) {\n  const uri = getUriFromSource(source);\n  if (isUriAnAndroidResourceIdentifier(uri)) {\n    return loadAndroidRawResource(uri);\n  } else {\n    return fetchText(uri);\n  }\n}\n\nexport const loadLocalRawResource =\n  Platform.OS !== 'android'\n    ? loadLocalRawResourceDefault\n    : loadLocalRawResourceAndroid;\n\nexport type LocalProps = SvgProps & {\n  asset: ImageSourcePropType;\n  override?: Object;\n};\nexport type LocalState = { xml: string | null };\n\nexport function LocalSvg(props: LocalProps) {\n  const { asset, ...rest } = props;\n  const [xml, setXml] = useState(null);\n  useEffect(() => {\n    loadLocalRawResource(asset).then(setXml);\n  }, [asset]);\n  return <SvgCss xml={xml} {...rest} />;\n}\n\nexport class WithLocalSvg extends Component<LocalProps, LocalState> {\n  state = { xml: null };\n  componentDidMount() {\n    this.load(this.props.asset);\n  }\n  componentDidUpdate(prevProps: { asset: ImageSourcePropType }) {\n    const { asset } = this.props;\n    if (asset !== prevProps.asset) {\n      this.load(asset);\n    }\n  }\n  async load(asset: ImageSourcePropType) {\n    try {\n      this.setState({ xml: asset ? await loadLocalRawResource(asset) : null });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  render() {\n    const {\n      props,\n      state: { xml },\n    } = this;\n    return <SvgWithCss xml={xml} override={props} />;\n  }\n}\n\nexport default LocalSvg;\n"],"mappings":"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"}