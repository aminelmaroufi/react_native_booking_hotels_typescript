32e6baa53cf044903f0b086e03217070
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Card = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _config = require("../config");
var _CardTitle = _interopRequireDefault(require("./CardTitle"));
var _CardDivider = _interopRequireDefault(require("./CardDivider"));
var _CardImage = _interopRequireDefault(require("./CardImage"));
var _CardFeaturedTitle = _interopRequireDefault(require("./CardFeaturedTitle"));
var _CardFeaturedSubtitle = _interopRequireDefault(require("./CardFeaturedSubtitle"));
var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
var Card = function Card(props) {
  var _a, _b;
  var children = props.children,
    containerStyle = props.containerStyle,
    wrapperStyle = props.wrapperStyle,
    theme = props.theme,
    attributes = __rest(props, ["children", "containerStyle", "wrapperStyle", "theme"]);
  return _react.default.createElement(_reactNative.View, (0, _extends2.default)({}, attributes, {
    style: _reactNative.StyleSheet.flatten([(0, _extends2.default)({
      backgroundColor: (_a = theme === null || theme === void 0 ? void 0 : theme.colors) === null || _a === void 0 ? void 0 : _a.white,
      borderWidth: 1,
      padding: 15,
      margin: 15,
      marginBottom: 0,
      borderColor: (_b = theme === null || theme === void 0 ? void 0 : theme.colors) === null || _b === void 0 ? void 0 : _b.grey5
    }, _reactNative.Platform.select({
      android: {
        elevation: 1
      },
      default: {
        shadowColor: 'rgba(0,0,0, .2)',
        shadowOffset: {
          height: 0,
          width: 0
        },
        shadowOpacity: 1,
        shadowRadius: 1
      }
    })), containerStyle && containerStyle])
  }), _react.default.createElement(_reactNative.View, {
    style: _reactNative.StyleSheet.flatten([styles.wrapper, wrapperStyle && wrapperStyle])
  }, children));
};
exports.Card = Card;
var styles = _reactNative.StyleSheet.create({
  wrapper: {
    backgroundColor: 'transparent'
  }
});
var ThemedCard = (0, _extends2.default)((0, _config.withTheme)(Card, 'Card'), {
  Divider: _CardDivider.default,
  Image: _CardImage.default,
  Title: _CardTitle.default,
  FeaturedTitle: _CardFeaturedTitle.default,
  FeaturedSubtitle: _CardFeaturedSubtitle.default
});
var _default = ThemedCard;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9jb25maWciLCJfQ2FyZFRpdGxlIiwiX0NhcmREaXZpZGVyIiwiX0NhcmRJbWFnZSIsIl9DYXJkRmVhdHVyZWRUaXRsZSIsIl9DYXJkRmVhdHVyZWRTdWJ0aXRsZSIsIl9fcmVzdCIsInMiLCJlIiwidCIsInAiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpbmRleE9mIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiaSIsImxlbmd0aCIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiQ2FyZCIsInByb3BzIiwiX2EiLCJfYiIsImNoaWxkcmVuIiwiY29udGFpbmVyU3R5bGUiLCJ3cmFwcGVyU3R5bGUiLCJ0aGVtZSIsImF0dHJpYnV0ZXMiLCJkZWZhdWx0IiwiY3JlYXRlRWxlbWVudCIsIlZpZXciLCJfZXh0ZW5kczIiLCJzdHlsZSIsIlN0eWxlU2hlZXQiLCJmbGF0dGVuIiwiYmFja2dyb3VuZENvbG9yIiwiY29sb3JzIiwid2hpdGUiLCJib3JkZXJXaWR0aCIsInBhZGRpbmciLCJtYXJnaW4iLCJtYXJnaW5Cb3R0b20iLCJib3JkZXJDb2xvciIsImdyZXk1IiwiUGxhdGZvcm0iLCJzZWxlY3QiLCJhbmRyb2lkIiwiZWxldmF0aW9uIiwic2hhZG93Q29sb3IiLCJzaGFkb3dPZmZzZXQiLCJoZWlnaHQiLCJ3aWR0aCIsInNoYWRvd09wYWNpdHkiLCJzaGFkb3dSYWRpdXMiLCJzdHlsZXMiLCJ3cmFwcGVyIiwiZXhwb3J0cyIsImNyZWF0ZSIsIlRoZW1lZENhcmQiLCJ3aXRoVGhlbWUiLCJEaXZpZGVyIiwiQ2FyZERpdmlkZXIiLCJJbWFnZSIsIkNhcmRJbWFnZSIsIlRpdGxlIiwiQ2FyZFRpdGxlIiwiRmVhdHVyZWRUaXRsZSIsIkNhcmRGZWF0dXJlZFRpdGxlIiwiRmVhdHVyZWRTdWJ0aXRsZSIsIkNhcmRGZWF0dXJlZFN1YnRpdGxlIiwiX2RlZmF1bHQiXSwic291cmNlcyI6WyJDYXJkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX3Jlc3QgPSAodGhpcyAmJiB0aGlzLl9fcmVzdCkgfHwgZnVuY3Rpb24gKHMsIGUpIHtcbiAgICB2YXIgdCA9IHt9O1xuICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSAmJiBlLmluZGV4T2YocCkgPCAwKVxuICAgICAgICB0W3BdID0gc1twXTtcbiAgICBpZiAocyAhPSBudWxsICYmIHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBwID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzKTsgaSA8IHAubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChlLmluZGV4T2YocFtpXSkgPCAwICYmIE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzLCBwW2ldKSlcbiAgICAgICAgICAgICAgICB0W3BbaV1dID0gc1twW2ldXTtcbiAgICAgICAgfVxuICAgIHJldHVybiB0O1xufTtcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBWaWV3LCBQbGF0Zm9ybSwgU3R5bGVTaGVldCB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgeyB3aXRoVGhlbWUgfSBmcm9tICcuLi9jb25maWcnO1xuaW1wb3J0IENhcmRUaXRsZSBmcm9tICcuL0NhcmRUaXRsZSc7XG5pbXBvcnQgQ2FyZERpdmlkZXIgZnJvbSAnLi9DYXJkRGl2aWRlcic7XG5pbXBvcnQgQ2FyZEltYWdlIGZyb20gJy4vQ2FyZEltYWdlJztcbmltcG9ydCBDYXJkRmVhdHVyZWRUaXRsZSBmcm9tICcuL0NhcmRGZWF0dXJlZFRpdGxlJztcbmltcG9ydCBDYXJkRmVhdHVyZWRTdWJ0aXRsZSBmcm9tICcuL0NhcmRGZWF0dXJlZFN1YnRpdGxlJztcbmNvbnN0IENhcmQgPSAocHJvcHMpID0+IHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGNvbnN0IHsgY2hpbGRyZW4sIGNvbnRhaW5lclN0eWxlLCB3cmFwcGVyU3R5bGUsIHRoZW1lIH0gPSBwcm9wcywgYXR0cmlidXRlcyA9IF9fcmVzdChwcm9wcywgW1wiY2hpbGRyZW5cIiwgXCJjb250YWluZXJTdHlsZVwiLCBcIndyYXBwZXJTdHlsZVwiLCBcInRoZW1lXCJdKTtcbiAgICByZXR1cm4gKDxWaWV3IHsuLi5hdHRyaWJ1dGVzfSBzdHlsZT17U3R5bGVTaGVldC5mbGF0dGVuKFtcbiAgICAgICAgT2JqZWN0LmFzc2lnbih7IGJhY2tncm91bmRDb2xvcjogKF9hID0gdGhlbWUgPT09IG51bGwgfHwgdGhlbWUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHRoZW1lLmNvbG9ycykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLndoaXRlLCBib3JkZXJXaWR0aDogMSwgcGFkZGluZzogMTUsIG1hcmdpbjogMTUsIG1hcmdpbkJvdHRvbTogMCwgYm9yZGVyQ29sb3I6IChfYiA9IHRoZW1lID09PSBudWxsIHx8IHRoZW1lID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0aGVtZS5jb2xvcnMpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5ncmV5NSB9LCBQbGF0Zm9ybS5zZWxlY3Qoe1xuICAgICAgICAgICAgYW5kcm9pZDoge1xuICAgICAgICAgICAgICAgIGVsZXZhdGlvbjogMSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgICAgICAgc2hhZG93Q29sb3I6ICdyZ2JhKDAsMCwwLCAuMiknLFxuICAgICAgICAgICAgICAgIHNoYWRvd09mZnNldDogeyBoZWlnaHQ6IDAsIHdpZHRoOiAwIH0sXG4gICAgICAgICAgICAgICAgc2hhZG93T3BhY2l0eTogMSxcbiAgICAgICAgICAgICAgICBzaGFkb3dSYWRpdXM6IDEsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KSksXG4gICAgICAgIGNvbnRhaW5lclN0eWxlICYmIGNvbnRhaW5lclN0eWxlLFxuICAgIF0pfT5cbiAgICAgIDxWaWV3IHN0eWxlPXtTdHlsZVNoZWV0LmZsYXR0ZW4oW1xuICAgICAgICBzdHlsZXMud3JhcHBlcixcbiAgICAgICAgd3JhcHBlclN0eWxlICYmIHdyYXBwZXJTdHlsZSxcbiAgICBdKX0+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvVmlldz5cbiAgICA8L1ZpZXc+KTtcbn07XG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gICAgd3JhcHBlcjoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICd0cmFuc3BhcmVudCcsXG4gICAgfSxcbn0pO1xuZXhwb3J0IHsgQ2FyZCB9O1xuY29uc3QgVGhlbWVkQ2FyZCA9IE9iamVjdC5hc3NpZ24od2l0aFRoZW1lKENhcmQsICdDYXJkJyksIHtcbiAgICBEaXZpZGVyOiBDYXJkRGl2aWRlcixcbiAgICBJbWFnZTogQ2FyZEltYWdlLFxuICAgIFRpdGxlOiBDYXJkVGl0bGUsXG4gICAgRmVhdHVyZWRUaXRsZTogQ2FyZEZlYXR1cmVkVGl0bGUsXG4gICAgRmVhdHVyZWRTdWJ0aXRsZTogQ2FyZEZlYXR1cmVkU3VidGl0bGUsXG59KTtcbmV4cG9ydCBkZWZhdWx0IFRoZW1lZENhcmQ7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBV0EsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsT0FBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsVUFBQSxHQUFBSixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUksWUFBQSxHQUFBTCxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUssVUFBQSxHQUFBTixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQU0sa0JB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